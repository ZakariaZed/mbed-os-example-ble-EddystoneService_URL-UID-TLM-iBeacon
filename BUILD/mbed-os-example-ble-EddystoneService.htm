<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\BUILD\mbed-os-example-ble-EddystoneService.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\BUILD\mbed-os-example-ble-EddystoneService.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Jan 09 14:45:14 2018
<BR><P>
<H3>Maximum Stack Usage =       1508 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync() &rArr; const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1f]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">NMI_Handler</a><BR>
 <LI><a href="#[20]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">HardFault_Handler</a><BR>
 <LI><a href="#[21]">MemoryManagement_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">MemoryManagement_Handler</a><BR>
 <LI><a href="#[22]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">BusFault_Handler</a><BR>
 <LI><a href="#[23]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">UsageFault_Handler</a><BR>
 <LI><a href="#[25]">DebugMonitor_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">DebugMonitor_Handler</a><BR>
 <LI><a href="#[37]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">CCM_AAR_IRQHandler</a><BR>
 <LI><a href="#[625]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[377]">__rw::__rw_allocate(unsigned, int)</a><BR>
 <LI><a href="#[627]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[372]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[4a9]">queue_process</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a9]">queue_process</a><BR>
 <LI><a href="#[19b]">__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19b]">__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6d]">&lang;Func4&rang;</a> from .\build\serialbase.o(i.<Func4>) referenced from .\build\serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i)
 <LI><a href="#[6c]">&lang;Func5&rang;</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.<Func5>) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[65]">&lang;Func6&rang;</a> from .\build\nrf5xn.o(i.<Func6>) referenced from .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscoveryC1EP15nRF5xGattClient)
 <LI><a href="#[22]">BusFault_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[37]">CCM_AAR_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[3b]">COMP_LPCOMP_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[25]">DebugMonitor_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[36]">ECB_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[4c]">FPU_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[84]">GPIOTE_IRQHandler</a> from .\build\nrf_drv_gpiote.o(i.GPIOTE_IRQHandler) referenced from .\build\gpio_api.o(i.gpio_init)
 <LI><a href="#[2e]">GPIOTE_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[20]">HardFault_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[4b]">I2S_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[46]">MWU_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[21]">MemoryManagement_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[2d]">NFCT_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[1f]">NMI_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[45]">PDM_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[28]">POWER_CLOCK_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[44]">PWM0_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[47]">PWM1_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[48]">PWM2_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[26]">PendSV_Handler</a> from .\build\irq_cm4f.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[3a]">QDEC_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[29]">RADIO_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[35]">RNG_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[33]">RTC0_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[7d]">RTC1_IRQHandler</a> from .\build\us_ticker.o(i.RTC1_IRQHandler) referenced from .\build\us_ticker.o(i.common_rtc_init)
 <LI><a href="#[39]">RTC1_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[4a]">RTC2_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[1e]">Reset_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[2f]">SAADC_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[2b]">SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[2c]">SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[49]">SPIM2_SPIS2_SPI2_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[24]">SVC_Handler</a> from .\build\irq_cm4f.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[3c]">SWI0_EGU0_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[3d]">SWI1_EGU1_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[79]">SWI2_EGU2_IRQHandler</a> from .\build\softdevice_handler.o(i.SWI2_EGU2_IRQHandler) referenced from .\build\btle.o(i.btle_init)
 <LI><a href="#[3e]">SWI2_EGU2_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[3f]">SWI3_EGU3_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[40]">SWI4_EGU4_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[41]">SWI5_EGU5_IRQHandler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[27]">SysTick_Handler</a> from .\build\irq_cm4f.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[4d]">SystemInit</a> from .\build\system_nrf52.o(i.SystemInit) referenced from .\build\startup_nrf52832.o(.text)
 <LI><a href="#[34]">TEMP_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[30]">TIMER0_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[31]">TIMER1_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[32]">TIMER2_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[42]">TIMER3_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[43]">TIMER4_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[a6]">UARTE0_UART0_IRQHandler</a> from .\build\serial_api.o(i.UARTE0_UART0_IRQHandler) referenced from .\build\serial_api.o(i.serial_init)
 <LI><a href="#[2a]">UARTE0_UART0_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[23]">UsageFault_Handler</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[38]">WDT_IRQHandler_v</a> from .\build\startup_nrf52832.o(.text) referenced from .\build\startup_nrf52832.o(RESET)
 <LI><a href="#[7a]">signalEvent()</a> from .\build\btle.o(i._Z11signalEventv) referenced from .\build\btle.o(i.btle_init)
 <LI><a href="#[7b]">btle_handler(ble_evt_t*)</a> from .\build\btle.o(i._Z12btle_handlerP9ble_evt_t) referenced from .\build\btle.o(i.btle_init)
 <LI><a href="#[1d]">fs_evt_handler(const fs_evt_t*, fs_ret_t)</a> from .\build\nrfconfigparamspersistence.o(i._Z14fs_evt_handlerPK8fs_evt_t8fs_ret_t) referenced 2 times from .\build\nrfconfigparamspersistence.o(fs_data)
 <LI><a href="#[8a]">bleInitComplete(BLE::InitializationCompleteCallbackContext*)</a> from .\build\main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE) referenced from .\build\main.o(i.main)
 <LI><a href="#[7c]">sys_evt_dispatch(unsigned)</a> from .\build\btle.o(i._Z16sys_evt_dispatchj) referenced from .\build\btle.o(i.btle_init)
 <LI><a href="#[c7]">createBLEInstance()</a> from .\build\nrf5xn.o(i._Z17createBLEInstancev) referenced from .\build\ble.o(.constdata)
 <LI><a href="#[88]">updateSensorValue()</a> from .\build\main.o(i._Z17updateSensorValuev) referenced from .\build\main.o(i.main)
 <LI><a href="#[5c]">equeue_tick_update()</a> from .\build\equeue_mbed.o(i._Z18equeue_tick_updatev) referenced from .\build\equeue_mbed.o(i._Z16equeue_tick_initv)
 <LI><a href="#[59]">disconnectionCallback(const Gap::DisconnectionCallbackParams_t*)</a> from .\build\main.o(i._Z21disconnectionCallbackPKN3Gap29DisconnectionCallbackParams_tE) referenced from .\build\main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE)
 <LI><a href="#[5e]">updatetempSensorValue()</a> from .\build\main.o(i._Z21updatetempSensorValuev) referenced from .\build\main.o(i._Z6blinkyv)
 <LI><a href="#[89]">scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext*)</a> from .\build\main.o(i._Z27scheduleBleEventsProcessingPN3BLE32OnEventsToProcessCallbackContextE) referenced from .\build\main.o(i.main)
 <LI><a href="#[87]">blinky()</a> from .\build\main.o(i._Z6blinkyv) referenced from .\build\main.o(i.main)
 <LI><a href="#[5b]">timeout()</a> from .\build\main.o(i._Z7timeoutv) referenced from .\build\main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE)
 <LI><a href="#[5b]">timeout()</a> from .\build\main.o(i._Z7timeoutv) referenced from .\build\main.o(i._Z7timeoutv)
 <LI><a href="#[e3]">GattClient::reset()</a> from .\build\nrf5xn.o(i._ZN10GattClient5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV10GattClient)
 <LI><a href="#[e4]">GattServer::addService(GattService&)</a> from .\build\nrf5xn.o(i._ZN10GattServer10addServiceER11GattService) referenced from .\build\nrf5xn.o(.constdata__ZTV10GattServer)
 <LI><a href="#[e6]">GattServer::reset()</a> from .\build\nrf5xn.o(i._ZN10GattServer5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV10GattServer)
 <LI><a href="#[e5]">GattServer::write(unsigned short, const unsigned char*, unsigned short, bool)</a> from .\build\nrf5xn.o(i._ZN10GattServer5writeEtPKhtb) referenced from .\build\nrf5xn.o(.constdata__ZTV10GattServer)
 <LI><a href="#[e1]">BatteryService::basicAuthorizationCallback(GattReadAuthCallbackParams*)</a> from .\build\main.o(i._ZN14BatteryService26basicAuthorizationCallbackEP26GattReadAuthCallbackParams) referenced from .\build\main.o(.constdata)
 <LI><a href="#[e7]">BLEInstanceBase::~BLEInstanceBase__sub_object()</a> from .\build\bleinstancebase.o(i._ZN15BLEInstanceBaseD2Ev) referenced from .\build\bleinstancebase.o(.constdata__ZTV15BLEInstanceBase)
 <LI><a href="#[e9]">SecurityManager::reset()</a> from .\build\nrf5xn.o(i._ZN15SecurityManager5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV15SecurityManager)
 <LI><a href="#[ea]">nRF5xGattClient::reset()</a> from .\build\nrf5xgattclient.o(i._ZN15nRF5xGattClient5resetEv) referenced from .\build\nrf5xgattclient.o(.constdata__ZTV15nRF5xGattClient)
 <LI><a href="#[eb]">nRF5xGattServer::addService(GattService&)</a> from .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer10addServiceER11GattService) referenced from .\build\nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
 <LI><a href="#[ee]">nRF5xGattServer::reset()</a> from .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer5resetEv) referenced from .\build\nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
 <LI><a href="#[ec]">nRF5xGattServer::write(unsigned short, const unsigned char*, unsigned short, bool)</a> from .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer5writeEtPKhtb) referenced from .\build\nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
 <LI><a href="#[ed]">nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool)</a> from .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer5writeEttPKhtb) referenced from .\build\nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
 <LI><a href="#[d5]">EddystoneService::manageRadio()</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService11manageRadioEv) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[d4]">EddystoneService::enqueueFrame(EddystoneService::FrameType)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService12enqueueFrameENS_9FrameTypeE) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[d3]">EddystoneService::bleInitComplete(BLE::InitializationCompleteCallbackContext*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService15bleInitCompleteEPN3BLE37InitializationCompleteCallbackContextE) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[d7]">EddystoneService::basicAuthorCallback(GattReadAuthCallbackParams*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService19basicAuthorCallbackEP26GattReadAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[df]">EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService21onDataWrittenCallbackEPK23GattWriteCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[d6]">EddystoneService::lockAuthorizationCallback(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService25lockAuthorizationCallbackEP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[db]">void EddystoneService::basicAuthorizationCallback&lang;signed char[4]&rang;(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackIA4_aEEvP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[de]">void EddystoneService::basicAuthorizationCallback&lang;bool&rang;(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackIbEEvP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[da]">void EddystoneService::basicAuthorizationCallback&lang;unsigned char&rang;(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackIhEEvP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[dd]">void EddystoneService::basicAuthorizationCallback&lang;unsigned short&rang;(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackItEEvP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[d8]">EddystoneService::unlockAuthorizationCallback(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService27unlockAuthorizationCallbackEP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[dc]">EddystoneService::powerModeAuthorizationCallback(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService30powerModeAuthorizationCallbackEP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[d9]">EddystoneService::urlDataWriteAuthorizationCallback(GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(i._ZN16EddystoneService33urlDataWriteAuthorizationCallbackEP27GattWriteAuthCallbackParams) referenced from .\build\eddystoneservice.o(.constdata)
 <LI><a href="#[ef]">ServiceDiscovery::reset()</a> from .\build\nrf5xn.o(i._ZN16ServiceDiscovery5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV16ServiceDiscovery)
 <LI><a href="#[64]">DiscoveredService::DiscoveredService()</a> from .\build\nrf5xn.o(i._ZN17DiscoveredServiceC1Ev) referenced from .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscoveryC1EP15nRF5xGattClient)
 <LI><a href="#[f0]">nRF5xSecurityManager::reset()</a> from .\build\nrf5xn.o(i._ZN20nRF5xSecurityManager5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV20nRF5xSecurityManager)
 <LI><a href="#[f3]">nRF5xServiceDiscovery::reset()</a> from .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscovery5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV21nRF5xServiceDiscovery)
 <LI><a href="#[f2]">nRF5xServiceDiscovery::terminate()</a> from .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscovery9terminateEv) referenced from .\build\nrf5xn.o(.constdata__ZTV21nRF5xServiceDiscovery)
 <LI><a href="#[e0]">AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)</a> from .\build\main.o(i._ZN23AuthentificationService21onDataWrittenCallbackEPK23GattWriteCallbackParams) referenced from .\build\main.o(.constdata)
 <LI><a href="#[61]">void FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::membercaller&lang;BatteryService&rang;(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)</a> from .\build\main.o(t._ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE12membercallerI14BatteryServiceEEvPKS2_S1_) referenced from .\build\main.o(i._ZN14BatteryServiceC1ER3BLEh)
 <LI><a href="#[b1]">void FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE12membercallerI16EddystoneServiceEEvPKS2_S1_) referenced from .\build\eddystoneservice.o(t._ZN18GattCharacteristic28setReadAuthorizationCallbackI16EddystoneServiceEEvPT_MS2_FvP26GattReadAuthCallbackParamsE)
 <LI><a href="#[62]">FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::functioncaller(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE14functioncallerEPKS2_S1_) referenced from .\build\eddystoneservice.o(i._ZN18GattCharacteristicC1ERK4UUIDPhtthPP13GattAttributejb)
 <LI><a href="#[b2]">void FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;*, GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsE12membercallerI16EddystoneServiceEEvPKS2_S1_) referenced from .\build\eddystoneservice.o(t._ZN18GattCharacteristic29setWriteAuthorizationCallbackI16EddystoneServiceEEvPT_MS2_FvP27GattWriteAuthCallbackParamsE)
 <LI><a href="#[63]">FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;::functioncaller(const FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;*, GattWriteAuthCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsE14functioncallerEPKS2_S1_) referenced from .\build\eddystoneservice.o(i._ZN18GattCharacteristicC1ERK4UUIDPhtthPP13GattAttributejb)
 <LI><a href="#[b3]">FunctionPointerWithContext&lang;const DiscoveredService*&rang;::functioncaller(const FunctionPointerWithContext&lang;const DiscoveredService*&rang;*, const DiscoveredService*)</a> from .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceE14functioncallerEPKS3_S2_) referenced from .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceEC1EPFvS2_E)
 <LI><a href="#[b8]">void FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;*, const GattWriteCallbackParams*)</a> from .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIPK23GattWriteCallbackParamsE12membercallerI16EddystoneServiceEEvPKS3_S2_) referenced from .\build\eddystoneservice.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE3addI16EddystoneServiceEEP26FunctionPointerWithContextIS2_EPT_MS9_FvS2_E)
 <LI><a href="#[b9]">void FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;::membercaller&lang;AuthentificationService&rang;(const FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;*, const GattWriteCallbackParams*)</a> from .\build\main.o(t._ZN26FunctionPointerWithContextIPK23GattWriteCallbackParamsE12membercallerI23AuthentificationServiceEEvPKS3_S2_) referenced from .\build\main.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE3addI23AuthentificationServiceEEP26FunctionPointerWithContextIS2_EPT_MS9_FvS2_E)
 <LI><a href="#[b4]">FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::functioncaller(const FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;*, const DiscoveredCharacteristic*)</a> from .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicE14functioncallerEPKS3_S2_) referenced from .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicEC1EPFvS2_E)
 <LI><a href="#[66]">FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;*, const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*)</a> from .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery25DiscoveryCallbackParams_tEE14functioncallerEPKS4_S3_) referenced from .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev)
 <LI><a href="#[67]">FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;*, const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*)</a> from .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery27TerminationCallbackParams_tEE14functioncallerEPKS4_S3_) referenced from .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev)
 <LI><a href="#[b5]">FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;*, const Gap::AdvertisementCallbackParams_t*)</a> from .\build\nrf5xgap.o(t._ZN26FunctionPointerWithContextIPKN3Gap29AdvertisementCallbackParams_tEE14functioncallerEPKS4_S3_) referenced from .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPKN3Gap29AdvertisementCallbackParams_tEEC1EPFvS3_E)
 <LI><a href="#[5a]">FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;*, const Gap::DisconnectionCallbackParams_t*)</a> from .\build\main.o(t._ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEE14functioncallerEPKS4_S3_) referenced from .\build\main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE)
 <LI><a href="#[6a]">FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;*, BLE::OnEventsToProcessCallbackContext*)</a> from .\build\ble.o(t._ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEE14functioncallerEPKS3_S2_) referenced from .\build\ble.o(i._ZN3BLEC1Ej)
 <LI><a href="#[6a]">FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;*, BLE::OnEventsToProcessCallbackContext*)</a> from .\build\ble.o(t._ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEE14functioncallerEPKS3_S2_) referenced from .\build\main.o(i.main)
 <LI><a href="#[ba]">void FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;*, BLE::InitializationCompleteCallbackContext*)</a> from .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE12membercallerI16EddystoneServiceEEvPKS3_S2_) referenced from .\build\eddystoneservice.o(t._ZN3BLE4initI16EddystoneServiceEE11ble_error_tPT_MS3_FvPNS_37InitializationCompleteCallbackContextEE)
 <LI><a href="#[69]">FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;*, BLE::InitializationCompleteCallbackContext*)</a> from .\build\main.o(t._ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE14functioncallerEPKS3_S2_) referenced from .\build\main.o(i._ZN3BLE4initEPFvPNS_37InitializationCompleteCallbackContextEE)
 <LI><a href="#[b6]">FunctionPointerWithContext&lang;bool&rang;::functioncaller(const FunctionPointerWithContext&lang;bool&rang;*, bool)</a> from .\build\nrf5xgap.o(t._ZN26FunctionPointerWithContextIbE14functioncallerEPKS0_b) referenced from .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIbEC1EPFvbE)
 <LI><a href="#[b7]">FunctionPointerWithContext&lang;unsigned short&rang;::functioncaller(const FunctionPointerWithContext&lang;unsigned short&rang;*, unsigned short)</a> from .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextItE14functioncallerEPKS0_t) referenced from .\build\nrf5xgattserver.o(t._ZN26FunctionPointerWithContextItEC1EPFvtE)
 <LI><a href="#[f4]">CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::~CallChainOfFunctionPointersWithContext()</a> from .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEED1Ev) referenced from .\build\nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEE)
 <LI><a href="#[f5]">CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::~CallChainOfFunctionPointersWithContext()</a> from .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK3GapED1Ev) referenced from .\build\nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIPK3GapE)
 <LI><a href="#[f6]">CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()</a> from .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEED1Ev) referenced from .\build\nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEE)
 <LI><a href="#[f7]">CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()</a> from .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEED1Ev) referenced from .\build\nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEE)
 <LI><a href="#[58]">[local to arm_exceptions_c]::__default_terminate_handler()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text)
 <LI><a href="#[68]">nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery()</a> from .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev) referenced from .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscovererC1Ev)
 <LI><a href="#[e2]">BLE::processEvents()</a> from .\build\ble.o(i._ZN3BLE13processEventsEv) referenced from .\build\main.o(.constdata)
 <LI><a href="#[fc]">Gap::disconnect(Gap::DisconnectionReason_t)</a> from .\build\nrf5xn.o(i._ZN3Gap10disconnectENS_21DisconnectionReason_tE) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[fe]">Gap::setTxPower(signed char)</a> from .\build\nrf5xn.o(i._ZN3Gap10setTxPowerEa) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[fd]">Gap::setDeviceName(const unsigned char*)</a> from .\build\nrf5xn.o(i._ZN3Gap13setDeviceNameEPKh) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[fb]">Gap::stopAdvertising()</a> from .\build\nrf5xn.o(i._ZN3Gap15stopAdvertisingEv) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[ff]">Gap::reset()</a> from .\build\nrf5xn.o(i._ZN3Gap5resetEv) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[129]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[129]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[129]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[129]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[129]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[c2]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
 <LI><a href="#[c2]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
 <LI><a href="#[c3]">__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIwEE13_C_maker_funcEiPKcj) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E)
 <LI><a href="#[c4]">__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt7codecvtIccSt11__mbstate_tEE13_C_maker_funcEiPKcj) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZSt9use_facetISt7codecvtIccSt11__mbstate_tEERKT_RKSt6locale)
 <LI><a href="#[c5]">__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt7codecvtIwcSt11__mbstate_tEE13_C_maker_funcEiPKcj) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZSt9use_facetISt7codecvtIwcSt11__mbstate_tEERKT_RKSt6locale)
 <LI><a href="#[75]">__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i.__sti___10_rwcats_cpp_64e8068e)
 <LI><a href="#[73]">__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZSt13__rw_get_catsv)
 <LI><a href="#[1b]">__rw::__rw_throw_exception_noex(int, char*)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwthrowproc_impl_noex.o)(i._ZN4__rw25__rw_throw_exception_noexEiPc) referenced 2 times from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwthrowproc_noex.o)(.data)
 <LI><a href="#[114]">mbed::FileHandle::size()</a> from .\build\filehandle.o(i._ZN4mbed10FileHandle4sizeEv) referenced from .\build\filehandle.o(.constdata__ZTVN4mbed10FileHandleE)
 <LI><a href="#[114]">mbed::FileHandle::size()</a> from .\build\filehandle.o(i._ZN4mbed10FileHandle4sizeEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed8FileLikeE)
 <LI><a href="#[113]">mbed::FileHandle::isatty()</a> from .\build\filehandle.o(i._ZN4mbed10FileHandle6isattyEv) referenced from .\build\filehandle.o(.constdata__ZTVN4mbed10FileHandleE)
 <LI><a href="#[113]">mbed::FileHandle::isatty()</a> from .\build\filehandle.o(i._ZN4mbed10FileHandle6isattyEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed8FileLikeE)
 <LI><a href="#[6f]">mbed::SerialBase::_irq_handler(unsigned, SerialIrq)</a> from .\build\serialbase.o(i._ZN4mbed10SerialBase12_irq_handlerEj9SerialIrq) referenced from .\build\serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i)
 <LI><a href="#[d2]">mbed::SerialBase::interrupt_handler_asynch()</a> from .\build\serialbase.o(i._ZN4mbed10SerialBase24interrupt_handler_asynchEv) referenced from .\build\serialbase.o(.constdata)
 <LI><a href="#[70]">mbed::TimerEvent::irq(unsigned)</a> from .\build\timerevent.o(i._ZN4mbed10TimerEvent3irqEj) referenced from .\build\timerevent.o(i._ZN4mbed10TimerEventC2Ev)
 <LI><a href="#[115]">mbed::TimerEvent::~TimerEvent__sub_object()</a> from .\build\timerevent.o(i._ZN4mbed10TimerEventD2Ev) referenced from .\build\timerevent.o(.constdata__ZTVN4mbed10TimerEventE)
 <LI><a href="#[116]">mbed::Serial::lock()</a> from .\build\serial.o(i._ZN4mbed6Serial4lockEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[118]">mbed::Serial::_putc(int)</a> from .\build\serial.o(i._ZN4mbed6Serial5_putcEi) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[117]">mbed::Serial::unlock()</a> from .\build\serial.o(i._ZN4mbed6Serial6unlockEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[77]">mbed::Serial::~Serial()</a> from .\build\serial.o(i._ZN4mbed6SerialD1Ev) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[77]">mbed::Serial::~Serial()</a> from .\build\serial.o(i._ZN4mbed6SerialD1Ev) referenced from .\build\main.o(i.__sti___8_main_cpp_pc)
 <LI><a href="#[122]">mbed::Stream::lock()</a> from .\build\stream.o(i._ZN4mbed6Stream4lockEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[11a]">mbed::Stream::seek(long, int)</a> from .\build\stream.o(i._ZN4mbed6Stream4seekEli) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[11a]">mbed::Stream::seek(long, int)</a> from .\build\stream.o(i._ZN4mbed6Stream4seekEli) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[11d]">mbed::Stream::size()</a> from .\build\stream.o(i._ZN4mbed6Stream4sizeEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[11d]">mbed::Stream::size()</a> from .\build\stream.o(i._ZN4mbed6Stream4sizeEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[11b]">mbed::Stream::close()</a> from .\build\stream.o(i._ZN4mbed6Stream5closeEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[11b]">mbed::Stream::close()</a> from .\build\stream.o(i._ZN4mbed6Stream5closeEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[119]">mbed::Stream::write(const void*, unsigned)</a> from .\build\stream.o(i._ZN4mbed6Stream5writeEPKvj) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[119]">mbed::Stream::write(const void*, unsigned)</a> from .\build\stream.o(i._ZN4mbed6Stream5writeEPKvj) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[11c]">mbed::Stream::isatty()</a> from .\build\stream.o(i._ZN4mbed6Stream6isattyEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[11c]">mbed::Stream::isatty()</a> from .\build\stream.o(i._ZN4mbed6Stream6isattyEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[123]">mbed::Stream::unlock()</a> from .\build\stream.o(i._ZN4mbed6Stream6unlockEv) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[121]">mbed::Stream::~Stream__sub_object()</a> from .\build\stream.o(i._ZN4mbed6StreamD2Ev) referenced from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[124]">mbed::Ticker::handler()</a> from .\build\ticker.o(i._ZN4mbed6Ticker7handlerEv) referenced from .\build\ticker.o(.constdata__ZTVN4mbed6TickerE)
 <LI><a href="#[125]">mbed::Timeout::handler()</a> from .\build\timeout.o(i._ZN4mbed7Timeout7handlerEv) referenced from .\build\timeout.o(.constdata__ZTVN4mbed7TimeoutE)
 <LI><a href="#[14d]">void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_call&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(const void*, EddystoneService::FrameType)</a> from .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE13function_callINS4_14method_contextIS1_MS1_FvS2_EEEEEvPKvS2_) referenced from .\build\eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE8generateINS4_14method_contextIS1_MS1_FvS2_EEEEEvRKT_E3ops)
 <LI><a href="#[14f]">void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_dtor&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE13function_dtorINS4_14method_contextIS1_MS1_FvS2_EEEEEvPv) referenced from .\build\eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE8generateINS4_14method_contextIS1_MS1_FvS2_EEEEEvRKT_E3ops)
 <LI><a href="#[14e]">void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_move&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(void*, const void*)</a> from .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE13function_moveINS4_14method_contextIS1_MS1_FvS2_EEEEEvPvPKv) referenced from .\build\eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE8generateINS4_14method_contextIS1_MS1_FvS2_EEEEEvRKT_E3ops)
 <LI><a href="#[150]">void mbed::Callback&lang;void(int)&rang;::function_call&lang;void(*)(int)&rang;(const void*, int)</a> from .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEE13function_callIPS1_EEvPKvi) referenced from .\build\eventqueue.o(.constdata__ZZN4mbed8CallbackIFviEE8generateIPS1_EEvRKT_E3ops)
 <LI><a href="#[152]">void mbed::Callback&lang;void(int)&rang;::function_dtor&lang;void(*)(int)&rang;(void*)</a> from .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEE13function_dtorIPS1_EEvPv) referenced from .\build\eventqueue.o(.constdata__ZZN4mbed8CallbackIFviEE8generateIPS1_EEvRKT_E3ops)
 <LI><a href="#[151]">void mbed::Callback&lang;void(int)&rang;::function_move&lang;void(*)(int)&rang;(void*, const void*)</a> from .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEE13function_moveIPS1_EEvPvPKv) referenced from .\build\eventqueue.o(.constdata__ZZN4mbed8CallbackIFviEE8generateIPS1_EEvRKT_E3ops)
 <LI><a href="#[153]">void mbed::Callback&lang;void()&rang;::function_call&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(const void*)</a> from .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvPKv) referenced from .\build\eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvRKT_E3ops)
 <LI><a href="#[156]">void mbed::Callback&lang;void()&rang;::function_call&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(const void*)</a> from .\build\main.o(t._ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextI3BLEMS5_FvvEEEEEvPKv) referenced from .\build\main.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops)
 <LI><a href="#[159]">void mbed::Callback&lang;void()&rang;::function_call&lang;void(*)()&rang;(const void*)</a> from .\build\atcmdparser.o(t._ZN4mbed8CallbackIFvvEE13function_callIPS1_EEvPKv) referenced from .\build\atcmdparser.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops)
 <LI><a href="#[155]">void mbed::Callback&lang;void()&rang;::function_dtor&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvPv) referenced from .\build\eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvRKT_E3ops)
 <LI><a href="#[158]">void mbed::Callback&lang;void()&rang;::function_dtor&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(void*)</a> from .\build\main.o(t._ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextI3BLEMS5_FvvEEEEEvPv) referenced from .\build\main.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops)
 <LI><a href="#[15b]">void mbed::Callback&lang;void()&rang;::function_dtor&lang;void(*)()&rang;(void*)</a> from .\build\atcmdparser.o(t._ZN4mbed8CallbackIFvvEE13function_dtorIPS1_EEvPv) referenced from .\build\atcmdparser.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops)
 <LI><a href="#[154]">void mbed::Callback&lang;void()&rang;::function_move&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(void*, const void*)</a> from .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvPvPKv) referenced from .\build\eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvRKT_E3ops)
 <LI><a href="#[157]">void mbed::Callback&lang;void()&rang;::function_move&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(void*, const void*)</a> from .\build\main.o(t._ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextI3BLEMS5_FvvEEEEEvPvPKv) referenced from .\build\main.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops)
 <LI><a href="#[15a]">void mbed::Callback&lang;void()&rang;::function_move&lang;void(*)()&rang;(void*, const void*)</a> from .\build\atcmdparser.o(t._ZN4mbed8CallbackIFvvEE13function_moveIPS1_EEvPvPKv) referenced from .\build\atcmdparser.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops)
 <LI><a href="#[71]">mbed::Callback&lang;void()&rang;::~Callback()</a> from .\build\equeue_mbed.o(t._ZN4mbed8CallbackIFvvEED1Ev) referenced from .\build\serial.o(i._ZN4mbed6SerialD1Ev)
 <LI><a href="#[126]">mbed::FileBase::~FileBase()</a> from .\build\filebase.o(i._ZN4mbed8FileBaseD1Ev) referenced from .\build\filebase.o(.constdata__ZTVN4mbed8FileBaseE)
 <LI><a href="#[127]">mbed::FileLike::~FileLike__sub_object()</a> from .\build\stream.o(i._ZN4mbed8FileLikeD2Ev) referenced from .\build\stream.o(.constdata__ZTVN4mbed8FileLikeE)
 <LI><a href="#[6e]">mbed::donothing()</a> from .\build\serialbase.o(i._ZN4mbed9donothingEv) referenced from .\build\serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i)
 <LI><a href="#[bd]">CThunk&lang;mbed::SerialBase&rang;::trampoline(mbed::SerialBase*, void*, void(mbed::SerialBase::**)(void*))</a> from .\build\serialbase.o(t._ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E) referenced from .\build\serialbase.o(t._ZN6CThunkIN4mbed10SerialBaseEE4initEPS1_MS1_FvPvES4_)
 <LI><a href="#[c1]">void events::EventQueue::function_call&lang;mbed::Callback&lang;void()&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_callIN4mbed8CallbackIFvvEEEEEvPv) referenced from .\build\main.o(t._ZN6events10EventQueue4callIN4mbed8CallbackIFvvEEEEEiT_)
 <LI><a href="#[c1]">void events::EventQueue::function_call&lang;mbed::Callback&lang;void()&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_callIN4mbed8CallbackIFvvEEEEEvPv) referenced from .\build\eddystoneservice.o(t._ZN6events10EventQueue7call_inIN4mbed8CallbackIFvvEEEEEiiT_)
 <LI><a href="#[bf]">void events::EventQueue::function_call&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_callINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEvPv) referenced from .\build\eddystoneservice.o(t._ZN6events10EventQueue10call_everyINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEiiT_)
 <LI><a href="#[60]">void events::EventQueue::function_call&lang;void(*)()&rang;(void*)</a> from .\build\main.o(t._ZN6events10EventQueue13function_callIPFvvEEEvPv) referenced from .\build\main.o(i._Z6blinkyv)
 <LI><a href="#[60]">void events::EventQueue::function_call&lang;void(*)()&rang;(void*)</a> from .\build\main.o(t._ZN6events10EventQueue13function_callIPFvvEEEvPv) referenced from .\build\main.o(t._ZN6events10EventQueue10call_everyIPFvvEEEiiT_)
 <LI><a href="#[60]">void events::EventQueue::function_call&lang;void(*)()&rang;(void*)</a> from .\build\main.o(t._ZN6events10EventQueue13function_callIPFvvEEEvPv) referenced from .\build\main.o(t._ZN6events10EventQueue7call_inIPFvvEEEiiT_)
 <LI><a href="#[c0]">void events::EventQueue::function_dtor&lang;mbed::Callback&lang;void()&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_dtorIN4mbed8CallbackIFvvEEEEEvPv) referenced from .\build\main.o(t._ZN6events10EventQueue4callIN4mbed8CallbackIFvvEEEEEiT_)
 <LI><a href="#[c0]">void events::EventQueue::function_dtor&lang;mbed::Callback&lang;void()&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_dtorIN4mbed8CallbackIFvvEEEEEvPv) referenced from .\build\eddystoneservice.o(t._ZN6events10EventQueue7call_inIN4mbed8CallbackIFvvEEEEEiiT_)
 <LI><a href="#[be]">void events::EventQueue::function_dtor&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*)</a> from .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_dtorINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEvPv) referenced from .\build\eddystoneservice.o(t._ZN6events10EventQueue10call_everyINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEiiT_)
 <LI><a href="#[5f]">void events::EventQueue::function_dtor&lang;void(*)()&rang;(void*)</a> from .\build\main.o(t._ZN6events10EventQueue13function_dtorIPFvvEEEvPv) referenced from .\build\main.o(i._Z6blinkyv)
 <LI><a href="#[5f]">void events::EventQueue::function_dtor&lang;void(*)()&rang;(void*)</a> from .\build\main.o(t._ZN6events10EventQueue13function_dtorIPFvvEEEvPv) referenced from .\build\main.o(t._ZN6events10EventQueue10call_everyIPFvvEEEiiT_)
 <LI><a href="#[5f]">void events::EventQueue::function_dtor&lang;void(*)()&rang;(void*)</a> from .\build\main.o(t._ZN6events10EventQueue13function_dtorIPFvvEEEvPv) referenced from .\build\main.o(t._ZN6events10EventQueue7call_inIPFvvEEEiiT_)
 <LI><a href="#[78]">events::EventQueue::~EventQueue()</a> from .\build\eventqueue.o(i._ZN6events10EventQueueD1Ev) referenced from .\build\main.o(i.__sti___8_main_cpp_pc)
 <LI><a href="#[105]">nRF5xn::getGattClient()</a> from .\build\nrf5xn.o(i._ZN6nRF5xn13getGattClientEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[104]">nRF5xn::getGattServer()</a> from .\build\nrf5xn.o(i._ZN6nRF5xn13getGattServerEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[107]">nRF5xn::processEvents()</a> from .\build\nrf5xn.o(i._ZN6nRF5xn13processEventsEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[106]">nRF5xn::getSecurityManager()</a> from .\build\nrf5xn.o(i._ZN6nRF5xn18getSecurityManagerEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[100]">nRF5xn::init(unsigned, FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)</a> from .\build\nrf5xn.o(i._ZN6nRF5xn4initEj26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[103]">nRF5xn::getGap()</a> from .\build\nrf5xn.o(i._ZN6nRF5xn6getGapEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[102]">nRF5xn::shutdown()</a> from .\build\nrf5xn.o(i._ZN6nRF5xn8shutdownEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[5d]">nRF5xn::~nRF5xn()</a> from .\build\nrf5xn.o(i._ZN6nRF5xnD1Ev) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[5d]">nRF5xn::~nRF5xn()</a> from .\build\nrf5xn.o(i._ZN6nRF5xnD1Ev) referenced from .\build\nrf5xn.o(i._Z17getDeviceInstancev)
 <LI><a href="#[10d]">nRF5xGap::disconnect(Gap::DisconnectionReason_t)</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap10disconnectEN3Gap21DisconnectionReason_tE) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[10c]">nRF5xGap::disconnect(unsigned short, Gap::DisconnectionReason_t)</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap10disconnectEtN3Gap21DisconnectionReason_tE) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[10f]">nRF5xGap::setTxPower(signed char)</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap10setTxPowerEa) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[10e]">nRF5xGap::setDeviceName(const unsigned char*)</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap13setDeviceNameEPKh) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[10b]">nRF5xGap::stopAdvertising()</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap15stopAdvertisingEv) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[111]">nRF5xGap::startAdvertising(const GapAdvertisingParams&)</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap16startAdvertisingERK20GapAdvertisingParams) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[110]">nRF5xGap::setAdvertisingData(const GapAdvertisingData&, const GapAdvertisingData&)</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap18setAdvertisingDataERK18GapAdvertisingDataS2_) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[112]">nRF5xGap::reset()</a> from .\build\nrf5xgap.o(i._ZN8nRF5xGap5resetEv) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[f1]">nRF5xServiceDiscovery::isActive() const</a> from .\build\nrf5xn.o(i._ZNK21nRF5xServiceDiscovery8isActiveEv) referenced from .\build\nrf5xn.o(.constdata__ZTV21nRF5xServiceDiscovery)
 <LI><a href="#[fa]">Gap::getMaxAdvertisingInterval() const</a> from .\build\nrf5xn.o(i._ZNK3Gap25getMaxAdvertisingIntervalEv) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[f8]">Gap::getMinAdvertisingInterval() const</a> from .\build\nrf5xn.o(i._ZNK3Gap25getMinAdvertisingIntervalEv) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[f9]">Gap::getMinNonConnectableAdvertisingInterval() const</a> from .\build\nrf5xn.o(i._ZNK3Gap39getMinNonConnectableAdvertisingIntervalEv) referenced from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[101]">nRF5xn::hasInitialized() const</a> from .\build\nrf5xn.o(i._ZNK6nRF5xn14hasInitializedEv) referenced from .\build\nrf5xn.o(.constdata__ZTV6nRF5xn)
 <LI><a href="#[10a]">nRF5xGap::getMaxAdvertisingInterval() const</a> from .\build\nrf5xgap.o(i._ZNK8nRF5xGap25getMaxAdvertisingIntervalEv) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[108]">nRF5xGap::getMinAdvertisingInterval() const</a> from .\build\nrf5xgap.o(i._ZNK8nRF5xGap25getMinAdvertisingIntervalEv) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[109]">nRF5xGap::getMinNonConnectableAdvertisingInterval() const</a> from .\build\nrf5xgap.o(i._ZNK8nRF5xGap39getMinNonConnectableAdvertisingIntervalEv) referenced from .\build\nrf5xgap.o(.constdata__ZTV8nRF5xGap)
 <LI><a href="#[c6]">SafeBool_::base::trueTag() const</a> from .\build\ble.o(i._ZNK9SafeBool_4base7trueTagEv) referenced 6 times from .\build\ble.o(.constdata)
 <LI><a href="#[135]">std::__rw_exception::what() const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNKSt14__rw_exception4whatEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[12d]">std::ctype&lang;char&rang;::do_widen(char) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNKSt5ctypeIcE8do_widenEc) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[12d]">std::ctype&lang;char&rang;::do_widen(char) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNKSt5ctypeIcE8do_widenEc) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[13e]">std::ctype&lang;wchar_t&rang;::do_widen(char) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt5ctypeIwE8do_widenEc) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[142]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_encoding() const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE11do_encodingEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[143]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_always_noconv() const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE16do_always_noconvEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[141]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE6do_outERS0_PKcS4_RS4_PcS6_RS6_) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[148]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_encoding() const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE11do_encodingEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[147]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_always_noconv() const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE16do_always_noconvEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[146]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[14c]">std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE6do_getEiiiRKSs) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[14b]">std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[6b]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSsD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[6b]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSsD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
 <LI><a href="#[12b]">std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[12a]">std::ctype_byname&lang;char&rang;::~ctype_byname()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[130]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE4syncEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[12e]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE6setbufEPcl) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[12f]">std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE8overflowEi) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
 <LI><a href="#[133]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE4syncEv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[131]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE6setbufEPwl) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[132]">std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE8overflowEi) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
 <LI><a href="#[134]">std::__rw_exception::~__rw_exception()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[136]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[137]">std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
 <LI><a href="#[138]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6setbufEPwl) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[139]">std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE8overflowEi) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
 <LI><a href="#[bc]">std::__rw_open_cat_data::__rw_open_cat_data()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataC1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[bb]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[bb]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
 <LI><a href="#[12c]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[12c]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[13b]">std::ctype&lang;char&rang;::~ctype__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[13a]">std::ctype&lang;char&rang;::~ctype()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[13d]">std::ctype&lang;wchar_t&rang;::~ctype__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[13c]">std::ctype&lang;wchar_t&rang;::~ctype()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt5ctypeIwE)
 <LI><a href="#[128]">std::locale::facet::~facet__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6locale5facetD0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[72]">std::locale::~locale()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeD1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6locale7classicEv)
 <LI><a href="#[140]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[13f]">std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
 <LI><a href="#[145]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[144]">std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
 <LI><a href="#[76]">std::ios_base::Init::~Init()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev) referenced from .\build\ibeacon.o(i.__sti___11_iBeacon_cpp_99d959d6)
 <LI><a href="#[76]">std::ios_base::Init::~Init()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev) referenced from .\build\eddystoneservice.o(i.__sti___20_EddystoneService_cpp_a18ae07d)
 <LI><a href="#[76]">std::ios_base::Init::~Init()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev) referenced from .\build\configparamspersistence.o(i.__sti___27_ConfigParamsPersistence_cpp)
 <LI><a href="#[76]">std::ios_base::Init::~Init()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev) referenced from .\build\nrfconfigparamspersistence.o(i.__sti___30_nrfConfigParamsPersistence_cpp_119b80b5)
 <LI><a href="#[76]">std::ios_base::Init::~Init()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev) referenced from .\build\main.o(i.__sti___8_main_cpp_pc)
 <LI><a href="#[14a]">std::messages&lang;char&rang;::~messages__deallocating()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED0Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[149]">std::messages&lang;char&rang;::~messages()</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED1Ev) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[11f]">thunk{-152} to mbed::Serial::lock()</a> from .\build\serial.o(i._ZThn152_N4mbed6Serial4lockEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[11e]">thunk{-152} to mbed::Serial::_putc(int)</a> from .\build\serial.o(i._ZThn152_N4mbed6Serial5_putcEi) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[120]">thunk{-152} to mbed::Serial::unlock()</a> from .\build\serial.o(i._ZThn152_N4mbed6Serial6unlockEv) referenced from .\build\serial.o(.constdata__ZTVN4mbed6SerialE)
 <LI><a href="#[74]">operator delete[] (void*)</a> from .\build\mbed_retarget.o(i._ZdaPv) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(cxa_vec_new.o)(i.__cxa_vec_new)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 13 times from .\build\bleinstancebase.o(.constdata__ZTV15BLEInstanceBase)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 4 times from .\build\nrf5xn.o(.constdata__ZTV16ServiceDiscovery)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 2 times from .\build\nrf5xn.o(.constdata__ZTV3Gap)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 4 times from .\build\filehandle.o(.constdata__ZTVN4mbed10FileHandleE)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced from .\build\timerevent.o(.constdata__ZTVN4mbed10TimerEventE)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 2 times from .\build\stream.o(.constdata__ZTVN4mbed6StreamE)
 <LI><a href="#[e8]">__cxa_pure_virtual</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual) referenced 4 times from .\build\stream.o(.constdata__ZTVN4mbed8FileLikeE)
 <LI><a href="#[164]">__main</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__main.o)(!!!main) referenced from .\build\startup_nrf52832.o(.text)
 <LI><a href="#[162]">__sti___10_locale_cpp_ff99fc7b</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.__sti___10_locale_cpp_ff99fc7b) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(.init_array)
 <LI><a href="#[163]">__sti___10_rwcats_cpp_64e8068e</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i.__sti___10_rwcats_cpp_64e8068e) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(.init_array)
 <LI><a href="#[15e]">__sti___11_iBeacon_cpp_99d959d6</a> from .\build\ibeacon.o(i.__sti___11_iBeacon_cpp_99d959d6) referenced from .\build\ibeacon.o(.init_array)
 <LI><a href="#[15d]">__sti___20_EddystoneService_cpp_a18ae07d</a> from .\build\eddystoneservice.o(i.__sti___20_EddystoneService_cpp_a18ae07d) referenced from .\build\eddystoneservice.o(.init_array)
 <LI><a href="#[15c]">__sti___27_ConfigParamsPersistence_cpp</a> from .\build\configparamspersistence.o(i.__sti___27_ConfigParamsPersistence_cpp) referenced from .\build\configparamspersistence.o(.init_array)
 <LI><a href="#[160]">__sti___30_nrfConfigParamsPersistence_cpp_119b80b5</a> from .\build\nrfconfigparamspersistence.o(i.__sti___30_nrfConfigParamsPersistence_cpp_119b80b5) referenced from .\build\nrfconfigparamspersistence.o(.init_array)
 <LI><a href="#[161]">__sti___8_char_cpp_a3dc957a</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i.__sti___8_char_cpp_a3dc957a) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(.init_array)
 <LI><a href="#[15f]">__sti___8_main_cpp_pc</a> from .\build\main.o(i.__sti___8_main_cpp_pc) referenced from .\build\main.o(.init_array)
 <LI><a href="#[57]">_fputc$unlocked</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fputc.o)(i.fputc) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_file_locked.o)(.text)
 <LI><a href="#[50]">_get_lc_ctype</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lc_ctype_c.o)(locale$$code) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_ctype_table.o)(.text)
 <LI><a href="#[54]">_printf_input_char</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text)
 <LI><a href="#[53]">_sbackspace</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sscanf.o)(.text)
 <LI><a href="#[55]">_scanf_char_input</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text)
 <LI><a href="#[52]">_sgetc</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sscanf.o)(.text)
 <LI><a href="#[51]">_snputc</a> from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_snputc.o)(.text) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(vsnprintf.o)(.text)
 <LI><a href="#[1a]">default_idle_hook</a> from .\build\rtos_idle.o(i.default_idle_hook) referenced 2 times from .\build\rtos_idle.o(.data)
 <LI><a href="#[a1]">fds_evt_handler</a> from .\build\peer_data_storage.o(i.fds_evt_handler) referenced from .\build\peer_data_storage.o(i.pds_register)
 <LI><a href="#[1c]">fs_event_handler</a> from .\build\fds.o(i.fs_event_handler) referenced 2 times from .\build\fds.o(fs_data)
 <LI><a href="#[80]">gccm_evt_handler</a> from .\build\gatt_cache_manager.o(i.gccm_evt_handler) referenced from .\build\gatt_cache_manager.o(i.gcm_init)
 <LI><a href="#[a4]">gcm_evt_handler</a> from .\build\peer_manager.o(i.gcm_evt_handler) referenced from .\build\peer_manager.o(i.pm_init)
 <LI><a href="#[83]">gpiote_irq_handler</a> from .\build\gpio_api.o(i.gpiote_irq_handler) referenced from .\build\gpio_api.o(i.gpio_apply_config)
 <LI><a href="#[7f]">gscm_evt_handler</a> from .\build\gatt_cache_manager.o(i.gscm_evt_handler) referenced from .\build\gatt_cache_manager.o(i.gcm_init)
 <LI><a href="#[81]">im_evt_handler</a> from .\build\gatt_cache_manager.o(i.im_evt_handler) referenced from .\build\gatt_cache_manager.o(i.gcm_init)
 <LI><a href="#[a5]">im_evt_handler</a> from .\build\peer_manager.o(i.im_evt_handler) referenced from .\build\peer_manager.o(i.pm_init)
 <LI><a href="#[56]">isspace</a> from .\build\greentea_test_env.o(i.isspace) referenced from C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text)
 <LI><a href="#[cb]">lp_ticker_clear_interrupt</a> from .\build\lp_ticker.o(i.lp_ticker_clear_interrupt) referenced from .\build\mbed_lp_ticker_api.o(.constdata)
 <LI><a href="#[ca]">lp_ticker_disable_interrupt</a> from .\build\lp_ticker.o(i.lp_ticker_disable_interrupt) referenced from .\build\mbed_lp_ticker_api.o(.constdata)
 <LI><a href="#[c8]">lp_ticker_init</a> from .\build\lp_ticker.o(i.lp_ticker_init) referenced from .\build\mbed_lp_ticker_api.o(.constdata)
 <LI><a href="#[c9]">lp_ticker_read</a> from .\build\lp_ticker.o(i.lp_ticker_read) referenced from .\build\mbed_lp_ticker_api.o(.constdata)
 <LI><a href="#[cc]">lp_ticker_set_interrupt</a> from .\build\lp_ticker.o(i.lp_ticker_set_interrupt) referenced from .\build\mbed_lp_ticker_api.o(.constdata)
 <LI><a href="#[4e]">nrf_reloc_vector_table</a> from .\build\reloc_vector_table.o(i.nrf_reloc_vector_table) referenced from .\build\startup_nrf52832.o(.text)
 <LI><a href="#[ab]">osRtxEventFlagsPostProcess</a> from .\build\rtx_evflags.o(i.osRtxEventFlagsPostProcess) referenced from .\build\rtx_evflags.o(i.svcRtxEventFlagsNew)
 <LI><a href="#[ac]">osRtxIdleThread</a> from .\build\mbed_rtx_handlers.o(i.osRtxIdleThread) referenced from .\build\rtx_kernel.o(i.svcRtxKernelStart)
 <LI><a href="#[ae]">osRtxMessageQueuePostProcess</a> from .\build\rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) referenced from .\build\rtx_msgqueue.o(i.svcRtxMessageQueueNew)
 <LI><a href="#[b0]">osRtxThreadPostProcess</a> from .\build\rtx_thread.o(i.osRtxThreadPostProcess) referenced from .\build\rtx_thread.o(i.svcRtxThreadNew)
 <LI><a href="#[ad]">osRtxTimerThread</a> from .\build\rtx_timer.o(i.osRtxTimerThread) referenced from .\build\rtx_kernel.o(i.svcRtxKernelStart)
 <LI><a href="#[9b]">osRtxTimerTick</a> from .\build\rtx_timer.o(i.osRtxTimerTick) referenced from .\build\rtx_timer.o(i.osRtxTimerThread)
 <LI><a href="#[af]">osThreadExit</a> from .\build\rtx_thread.o(i.osThreadExit) referenced from .\build\rtx_thread.o(i.svcRtxThreadNew)
 <LI><a href="#[7e]">pdb_evt_handler</a> from .\build\gattc_cache_manager.o(i.pdb_evt_handler) referenced from .\build\gattc_cache_manager.o(i.gccm_init)
 <LI><a href="#[85]">pdb_evt_handler</a> from .\build\gatts_cache_manager.o(i.pdb_evt_handler) referenced from .\build\gatts_cache_manager.o(i.gscm_init)
 <LI><a href="#[86]">pdb_evt_handler</a> from .\build\id_manager.o(i.pdb_evt_handler) referenced from .\build\id_manager.o(i.im_register)
 <LI><a href="#[a2]">pdb_evt_handler</a> from .\build\peer_manager.o(i.pdb_evt_handler) referenced from .\build\peer_manager.o(i.pm_init)
 <LI><a href="#[a7]">pdb_evt_handler</a> from .\build\security_manager.o(i.pdb_evt_handler) referenced from .\build\security_manager.o(i.sm_register)
 <LI><a href="#[a9]">pdb_evt_handler</a> from .\build\security_dispatcher.o(i.pdb_evt_handler) referenced from .\build\security_dispatcher.o(i.smd_register)
 <LI><a href="#[a0]">pds_evt_handler</a> from .\build\peer_database.o(i.pds_evt_handler) referenced from .\build\peer_database.o(i.pdb_register)
 <LI><a href="#[8b]">pre_main</a> from .\build\mbed_boot.o(i.pre_main) referenced from .\build\mbed_boot.o(i.mbed_start_main)
 <LI><a href="#[a3]">sm_evt_handler</a> from .\build\peer_manager.o(i.sm_evt_handler) referenced from .\build\peer_manager.o(i.pm_init)
 <LI><a href="#[82]">smd_evt_handler</a> from .\build\gatt_cache_manager.o(i.smd_evt_handler) referenced from .\build\gatt_cache_manager.o(i.gcm_init)
 <LI><a href="#[a8]">smd_evt_handler</a> from .\build\security_manager.o(i.smd_evt_handler) referenced from .\build\security_manager.o(i.sm_register)
 <LI><a href="#[aa]">softdevice_fault_handler</a> from .\build\softdevice_handler.o(i.softdevice_fault_handler) referenced from .\build\softdevice_handler.o(i.softdevice_handler_init)
 <LI><a href="#[8c]">svcRtxDelay</a> from .\build\rtx_delay.o(i.svcRtxDelay) referenced from .\build\rtx_delay.o(i.osDelay)
 <LI><a href="#[8d]">svcRtxEventFlagsDelete</a> from .\build\rtx_evflags.o(i.svcRtxEventFlagsDelete) referenced from .\build\rtx_evflags.o(i.osEventFlagsDelete)
 <LI><a href="#[8e]">svcRtxEventFlagsNew</a> from .\build\rtx_evflags.o(i.svcRtxEventFlagsNew) referenced from .\build\rtx_evflags.o(i.osEventFlagsNew)
 <LI><a href="#[8f]">svcRtxEventFlagsSet</a> from .\build\rtx_evflags.o(i.svcRtxEventFlagsSet) referenced from .\build\rtx_evflags.o(i.osEventFlagsSet)
 <LI><a href="#[90]">svcRtxEventFlagsWait</a> from .\build\rtx_evflags.o(i.svcRtxEventFlagsWait) referenced from .\build\rtx_evflags.o(i.osEventFlagsWait)
 <LI><a href="#[91]">svcRtxKernelGetState</a> from .\build\rtx_kernel.o(i.svcRtxKernelGetState) referenced from .\build\rtx_kernel.o(i.osKernelGetState)
 <LI><a href="#[92]">svcRtxKernelInitialize</a> from .\build\rtx_kernel.o(i.svcRtxKernelInitialize) referenced from .\build\rtx_kernel.o(i.osKernelInitialize)
 <LI><a href="#[93]">svcRtxKernelStart</a> from .\build\rtx_kernel.o(i.svcRtxKernelStart) referenced from .\build\rtx_kernel.o(i.osKernelStart)
 <LI><a href="#[94]">svcRtxMessageQueueGet</a> from .\build\rtx_msgqueue.o(i.svcRtxMessageQueueGet) referenced from .\build\rtx_msgqueue.o(i.osMessageQueueGet)
 <LI><a href="#[95]">svcRtxMessageQueueNew</a> from .\build\rtx_msgqueue.o(i.svcRtxMessageQueueNew) referenced from .\build\rtx_msgqueue.o(i.osMessageQueueNew)
 <LI><a href="#[96]">svcRtxMessageQueuePut</a> from .\build\rtx_msgqueue.o(i.svcRtxMessageQueuePut) referenced from .\build\rtx_msgqueue.o(i.osMessageQueuePut)
 <LI><a href="#[97]">svcRtxMutexAcquire</a> from .\build\rtx_mutex.o(i.svcRtxMutexAcquire) referenced from .\build\rtx_mutex.o(i.osMutexAcquire)
 <LI><a href="#[98]">svcRtxMutexDelete</a> from .\build\rtx_mutex.o(i.svcRtxMutexDelete) referenced from .\build\rtx_mutex.o(i.osMutexDelete)
 <LI><a href="#[99]">svcRtxMutexNew</a> from .\build\rtx_mutex.o(i.svcRtxMutexNew) referenced from .\build\rtx_mutex.o(i.osMutexNew)
 <LI><a href="#[9a]">svcRtxMutexRelease</a> from .\build\rtx_mutex.o(i.svcRtxMutexRelease) referenced from .\build\rtx_mutex.o(i.osMutexRelease)
 <LI><a href="#[9d]">svcRtxThreadExit</a> from .\build\rtx_thread.o(i.svcRtxThreadExit) referenced from .\build\rtx_thread.o(i.osThreadExit)
 <LI><a href="#[9e]">svcRtxThreadGetId</a> from .\build\rtx_thread.o(i.svcRtxThreadGetId) referenced from .\build\rtx_thread.o(i.osThreadGetId)
 <LI><a href="#[9f]">svcRtxThreadGetName</a> from .\build\rtx_thread.o(i.svcRtxThreadGetName) referenced from .\build\rtx_thread.o(i.osThreadGetName)
 <LI><a href="#[9c]">svcRtxThreadNew</a> from .\build\rtx_thread.o(i.svcRtxThreadNew) referenced from .\build\rtx_thread.o(i.osThreadContextNew)
 <LI><a href="#[d0]">us_ticker_clear_interrupt</a> from .\build\us_ticker.o(i.us_ticker_clear_interrupt) referenced from .\build\mbed_us_ticker_api.o(.constdata)
 <LI><a href="#[cf]">us_ticker_disable_interrupt</a> from .\build\us_ticker.o(i.us_ticker_disable_interrupt) referenced from .\build\mbed_us_ticker_api.o(.constdata)
 <LI><a href="#[cd]">us_ticker_init</a> from .\build\us_ticker.o(i.us_ticker_init) referenced from .\build\mbed_us_ticker_api.o(.constdata)
 <LI><a href="#[ce]">us_ticker_read</a> from .\build\us_ticker.o(i.us_ticker_read) referenced from .\build\mbed_us_ticker_api.o(.constdata)
 <LI><a href="#[d1]">us_ticker_set_interrupt</a> from .\build\us_ticker.o(i.us_ticker_set_interrupt) referenced from .\build\mbed_us_ticker_api.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[164]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__main.o)(!!!main))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = __main &rArr; __rt_entry &rArr; mbed_start_main &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[169]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[16b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[656]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter), UNUSED)

<P><STRONG><a name="[657]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter.o)(!!!scatter), UNUSED)

<P><STRONG><a name="[658]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__dczerorl2.o)(!!dczerorl2), UNUSED)

<P><STRONG><a name="[659]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__dczerorl2.o)(!!dczerorl2), UNUSED)

<P><STRONG><a name="[65a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__scatter_zi.o)(!!handler_zi), UNUSED)

<P><STRONG><a name="[16c]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_n.o)(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[1b7]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_percent.o)(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[16e]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_p.o)(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[170]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_f.o)(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[172]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_e.o)(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[173]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_g.o)(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[174]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_a.o)(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[65b]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_ll.o)(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[176]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_i.o)(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[178]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_d.o)(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[179]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_u.o)(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[17a]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_o.o)(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[17c]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_x.o)(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[17e]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_lli.o)(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[180]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_lld.o)(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[181]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_llu.o)(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[182]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_llo.o)(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[184]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_llx.o)(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[65c]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_l.o)(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[186]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_c.o)(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[188]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_s.o)(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[18a]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_lc.o)(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[18c]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_ls.o)(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[65d]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_percent_end.o)(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[5d2]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit.o)(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[18e]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[190]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __Heap_Initialize &rArr; _mutex_initialize &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[65e]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[65f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[192]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_common &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[660]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[661]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[662]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[194]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[663]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[664]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[195]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[665]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[666]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[667]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[668]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[669]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[66a]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[66b]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[197]"></a>__rt_lib_init_stdio_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000024))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_stdio_2 &rArr; _initio &rArr; freopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[66c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[66d]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[199]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[66e]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[66f]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[670]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[671]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libinit2.o)(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[672]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[673]"></a>__rt_lib_shutdown_heap_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[674]"></a>__rt_lib_shutdown_stdio_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libshutdown2.o)(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[239]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
</UL>

<P><STRONG><a name="[675]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[236]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>

<P><STRONG><a name="[237]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>

<P><STRONG><a name="[676]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[677]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_inc32_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[678]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[679]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[67a]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[67b]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[67c]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)

<P><STRONG><a name="[19a]"></a>__asm___13_rtx_evflags_c_736f7bde__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_736f7bde__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_736f7bde__atomic_link_put
</UL>

<P><STRONG><a name="[67d]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[67e]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[67f]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[680]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[681]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[682]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[56e]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc32_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[683]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[684]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[572]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[685]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text), UNUSED)

<P><STRONG><a name="[56f]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[19b]"></a>__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, .\build\rtx_mempool.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put
</UL>

<P><STRONG><a name="[241]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
</UL>

<P><STRONG><a name="[686]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[687]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[688]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[689]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[243]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
</UL>

<P><STRONG><a name="[68a]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc32_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[68b]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[68c]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[240]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
</UL>

<P><STRONG><a name="[68d]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[68e]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)

<P><STRONG><a name="[19c]"></a>__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_link_put
</UL>

<P><STRONG><a name="[68f]"></a>__asm___12_rtx_system_c_024f2f18__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[690]"></a>__asm___12_rtx_system_c_024f2f18__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[691]"></a>__asm___12_rtx_system_c_024f2f18__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[692]"></a>__asm___12_rtx_system_c_024f2f18__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[693]"></a>__asm___12_rtx_system_c_024f2f18__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[694]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[695]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc32_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[513]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_put
</UL>

<P><STRONG><a name="[511]"></a>__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_put
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_get
</UL>

<P><STRONG><a name="[696]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[510]"></a>__asm___12_rtx_system_c_024f2f18__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_get
</UL>

<P><STRONG><a name="[697]"></a>__asm___12_rtx_system_c_024f2f18__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)

<P><STRONG><a name="[19d]"></a>__asm___12_rtx_system_c_024f2f18__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, .\build\rtx_system.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_link_put
</UL>

<P><STRONG><a name="[698]"></a>__asm___12_rtx_thread_c_add96be5__atomic_wr8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[699]"></a>__asm___12_rtx_thread_c_add96be5__atomic_set32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[69a]"></a>__asm___12_rtx_thread_c_add96be5__atomic_clr32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[253]"></a>__asm___12_rtx_thread_c_add96be5__atomic_chk32_all</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>

<P><STRONG><a name="[254]"></a>__asm___12_rtx_thread_c_add96be5__atomic_chk32_any</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>

<P><STRONG><a name="[69b]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[69c]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc32_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[69d]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc16_lt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[69e]"></a>__asm___12_rtx_thread_c_add96be5__atomic_inc16_lim</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[69f]"></a>__asm___12_rtx_thread_c_add96be5__atomic_dec32_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[6a0]"></a>__asm___12_rtx_thread_c_add96be5__atomic_dec16_nz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[6a1]"></a>__asm___12_rtx_thread_c_add96be5__atomic_link_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)

<P><STRONG><a name="[19e]"></a>__asm___12_rtx_thread_c_add96be5__atomic_link_put</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, .\build\rtx_thread.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_link_put
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_link_put
</UL>

<P><STRONG><a name="[3c8]"></a>__asm___11_iBeacon_cpp_99d959d6___Z7__REV16j</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\build\ibeacon.o(.rev16_text))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[6a2]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(maybetermalloc2.o)(.emb_text), UNUSED)

<P><STRONG><a name="[24]"></a>SVC_Handler</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, .\build\irq_cm4f.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PendSV_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\irq_cm4f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = PendSV_Handler &rArr; osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\irq_cm4f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = SysTick_Handler &rArr; osRtxTick_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MemoryManagement_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DebugMonitor_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>COMP_LPCOMP_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>FPU_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>GPIOTE_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2S_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>MWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>NFCT_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>PDM_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>PWM0_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>PWM1_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>PWM2_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>QDEC_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RTC1_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>RTC2_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SAADC_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPIM2_SPIS2_SPI2_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SWI0_EGU0_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SWI1_EGU1_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SWI2_EGU2_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SWI3_EGU3_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SWI4_EGU4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SWI5_EGU5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TEMP_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIMER0_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIMER1_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIMER2_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIMER3_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIMER4_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UARTE0_UART0_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>WDT_IRQHandler_v</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\startup_nrf52832.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(RESET)
</UL>
<P><STRONG><a name="[1a1]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_ctype_table.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
</UL>

<P><STRONG><a name="[1a2]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_open_errors(int, unsigned)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_seek
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_close
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::Stream__sub_object(const char*)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[6a3]"></a>__errno$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)(.text), UNUSED)

<P><STRONG><a name="[6a4]"></a>__rt_errno_addr$twolibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_errno_addr_twolibspace.o)(.text), UNUSED)

<P><STRONG><a name="[1a4]"></a>_malloc_internal</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_alloc_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heap1_SizeAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[1a7]"></a>malloc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_alloc_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::allocateLongWriteRequest(unsigned short)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[1a9]"></a>_free_internal</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_free_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[1aa]"></a>free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_free_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_destroy
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::releaseLongWriteRequest(unsigned short)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::releaseAllWriteRequests()
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[39e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lludivv7m.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_ms()
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_64bit_us_get
</UL>

<P><STRONG><a name="[6a5]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lludivv7m.o)(.text), UNUSED)

<P><STRONG><a name="[1ab]"></a>vsnprintf</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(vsnprintf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = vsnprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[1af]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_pad.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[1b0]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_pad.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[1ae]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_str.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[177]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[1b4]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[17d]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[185]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[16f]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_hex_int_ll_ptr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[1b5]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__printf_flags_ss_wp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[1b8]"></a>sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sscanf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[1ba]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_int.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1bc]"></a>setbuf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(setbuf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = setbuf &rArr; setvbuf &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::mbed_set_unbuffered_stream(std::__FILE*)
</UL>

<P><STRONG><a name="[6a6]"></a>_fclose$unlocked</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fclose.o)(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>_fclose_internal</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fclose.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_close
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
</UL>

<P><STRONG><a name="[1c2]"></a>fclose</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fclose_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = fclose &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::~Stream__sub_object()
</UL>

<P><STRONG><a name="[1c6]"></a>freopen</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fopen_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = freopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[1c7]"></a>fopen</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fopen_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = fopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::mbed_fdopen(mbed::FileHandle*, const char*)
</UL>

<P><STRONG><a name="[3cf]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(memcmp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_address_resolve
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_duplicate_bonding_data
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_master_ids_compare
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addr_compare
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
</UL>

<P><STRONG><a name="[380]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strcpy.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[324]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strlen.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::lookup(const char*, unsigned)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::setDeviceName(const unsigned char*)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigScanResponse()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::encodeURL(const char*)
</UL>

<P><STRONG><a name="[3ab]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strncmp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::lookup(const char*, unsigned)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::encodeURL(const char*)
</UL>

<P><STRONG><a name="[1cc]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addToConvertedUUIDTable(const unsigned char*, unsigned char)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredServices(const ble_gattc_evt_prim_srvc_disc_rsp_t*)
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_whitelist_create
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const UUID&)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(unsigned char)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateScanResponse(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::URLFrame(unsigned char*, unsigned char)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::setEncodedURLData(const unsigned char*, unsigned char)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::constructURLFrame(unsigned char*, signed char)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::constructiBeacon(unsigned char*)
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEddystoneServiceConfigParams(const EddystoneService::EddystoneParams_t*)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*)
</UL>

<P><STRONG><a name="[1c9]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[6a7]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_v6.o)(.text), UNUSED)

<P><STRONG><a name="[219]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_v6.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
</UL>

<P><STRONG><a name="[1cb]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_v6.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
</UL>

<P><STRONG><a name="[6a8]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_v6.o)(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_purge_disconnected
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::operator =(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func6&rang;
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateServiceDiscovery()
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::encodeURL(const char*)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadPersistentParams()
</UL>

<P><STRONG><a name="[6a9]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text), UNUSED)

<P><STRONG><a name="[6aa]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text), UNUSED)

<P><STRONG><a name="[6ab]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memcpy_w.o)(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(aeabi_memset.o)(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>

<P><STRONG><a name="[29e]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_init
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::clear()
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::reset()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::GapAdvertisingData()
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::nRF5xGattServer()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const unsigned char*, UUID::ByteOrder_t)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::URLFrame()
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::encodeURL(const char*)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*)
</UL>

<P><STRONG><a name="[1d0]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[1cf]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1c1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr_w.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_add_in_descriptor
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_add_in_characteristic
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ah
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_advance
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_get_next_free
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::constructor(const char*)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_evt_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_evt_handler
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::startAdvertising(const GapAdvertisingParams&)
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::reset()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateServiceDiscovery()
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::nRF5xGattServer()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[6ac]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr_w.o)(.text), UNUSED)

<P><STRONG><a name="[6ad]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr_w.o)(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memclr_w.o)(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[3e6]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strcmpv7m.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[6ae]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(heapauxi.o)(.text), UNUSED)

<P><STRONG><a name="[d]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(heapauxi.o)(.text), UNUSED)

<P><STRONG><a name="[c]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(heapauxi.o)(.text), UNUSED)

<P><STRONG><a name="[168]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_aeabi.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[3a3]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_dtor_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::~Serial()
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>

<P><STRONG><a name="[6af]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libspace.o)(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(libspace.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>

<P><STRONG><a name="[1a8]"></a>__rt_heap_descriptor</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_heap_descriptor_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_heap_descriptor
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_alloc
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[193]"></a>__rt_locale</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_locale_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_mixed
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[6b0]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(hguard.o)(.text), UNUSED)

<P><STRONG><a name="[6b1]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(hguard.o)(.text), UNUSED)

<P><STRONG><a name="[14]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text), UNUSED)

<P><STRONG><a name="[f]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[1d4]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[191]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(init_alloc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _init_alloc &rArr; __Heap_Initialize &rArr; _mutex_initialize &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[1d6]"></a>__Heap_Initialize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_init_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = __Heap_Initialize &rArr; _mutex_initialize &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[e]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_init_mt.o)(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>fprintf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fprintf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = fprintf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
</UL>

<P><STRONG><a name="[1b1]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_truncate.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1b2]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_truncate.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1b3]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_intcommon.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[16d]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_charcount.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[1ac]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[1ad]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sputc.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[51]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_snputc.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> vsnprintf.o(.text)
</UL>
<P><STRONG><a name="[1d9]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[187]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[189]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[1da]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wctomb.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[17f]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_longlong_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[1dd]"></a>_printf_longlong_oct</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_oct_int_ll.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[17b]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_oct_int_ll.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[183]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_oct_int_ll.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[1bb]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_chval.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>

<P><STRONG><a name="[1de]"></a>_scanf_longlong</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_longlong.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_longlong
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[208]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_str.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1b9]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
</UL>

<P><STRONG><a name="[52]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_sgetc.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[1e0]"></a>_scanf_mbtowc</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_mbtowc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _scanf_mbtowc &rArr; _mbrtowc &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mbrtowc
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1e2]"></a>_scanf_wctomb</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_wctomb.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _scanf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1e4]"></a>_scanf_wstring</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_wstr.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _scanf_wstring &rArr; _scanf_wcharmap
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1e5]"></a>__flsbuf</STRONG> (Thumb, 470 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(flsbuf.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[211]"></a>__flsbuf_byte</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(flsbuf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __flsbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fputc$unlocked
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
</UL>

<P><STRONG><a name="[6b2]"></a>__flsbuf_wide</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(flsbuf.o)(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>_fseek</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fseek.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = _fseek &rArr; _sys_istty &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_istty
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_flen
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
</UL>

<P><STRONG><a name="[6b3]"></a>_fseek$unlocked</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fseek.o)(.text), UNUSED)

<P><STRONG><a name="[6b4]"></a>_ftell$unlocked</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(ftell.o)(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>_ftell_internal</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(ftell.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>

<P><STRONG><a name="[1e7]"></a>_seterr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(stdio.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[1ea]"></a>_writebuf</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(stdio.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_seek
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_seterr
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[1bf]"></a>_fflush</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(stdio.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deferredlazyseek
</UL>

<P><STRONG><a name="[1e6]"></a>_deferredlazyseek</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(stdio.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fflush
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[1ee]"></a>ftell</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(ftell_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = ftell &rArr; _ftell_internal &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ftell_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>

<P><STRONG><a name="[1ef]"></a>fseek</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fseek_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = fseek &rArr; _fseek &rArr; _sys_istty &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>

<P><STRONG><a name="[1bd]"></a>setvbuf</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(setvbuf_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = setvbuf &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setbuf
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[198]"></a>_initio</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(initio_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = _initio &rArr; freopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_stdio_2
</UL>

<P><STRONG><a name="[1f1]"></a>_terminateio</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(initio_locked.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_free
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[1f2]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(abort.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to arm_exceptions_c]::__default_terminate_handler()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[1f5]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_pvfn_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[353]"></a>strrchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strrchr.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[1f8]"></a>wmemmove</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(wmemmove.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wmemmove &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)
</UL>

<P><STRONG><a name="[3ea]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(strcat.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[6b5]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)

<P><STRONG><a name="[6b6]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1cd]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[6b7]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_memmove_w.o)(.text), UNUSED)

<P><STRONG><a name="[405]"></a>__cxa_rethrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_rethrow_noexceptions.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[1fb]"></a>__aeabi_vec_delete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_delete_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
</UL>

<P><STRONG><a name="[1f4]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sys_exit.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[1d3]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_extend_mt.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[1dc]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lludiv10.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[6b8]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_dec.o)(.text), UNUSED)

<P><STRONG><a name="[202]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[205]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_hex.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[1d8]"></a>_printf_char_file</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_file_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fprintf
</UL>

<P><STRONG><a name="[206]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wchar.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[18b]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wchar.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[18d]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_wchar.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[1df]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[20c]"></a>_scanf_really_real</STRONG> (Thumb, 684 bytes, Stack size 120 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_fp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[1e3]"></a>_scanf_wcharmap</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_scanf_wcharmap.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scanf_wcharmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
</UL>

<P><STRONG><a name="[210]"></a>fwrite</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fwritefast_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = fwrite &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[212]"></a>setlocale</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = setlocale &rArr; _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>

<P><STRONG><a name="[1e1]"></a>_mbrtowc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_mbrtowc.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _mbrtowc &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc
</UL>

<P><STRONG><a name="[1db]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_wcrtomb.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[1f7]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_exit.o)(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[1f3]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_abrt_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[1f0]"></a>__rt_SIGRTRED</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_rtred_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTRED &rArr; __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
</UL>

<P><STRONG><a name="[1d5]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_rtmem_outer.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[1f6]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_pvfn_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[218]"></a>memcpy</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(memcpy.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1f9]"></a>memmove</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(memmove.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmemmove
</UL>

<P><STRONG><a name="[21a]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_terminate.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[21b]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[6b9]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(use_no_semi.o)(.text), UNUSED)

<P><STRONG><a name="[6ba]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(use_no_semi.o)(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(rt_eh_globals_addr_twolibspace.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_eh_globals_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[6bb]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(indicate_semi.o)(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>_terminate_alloc</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(term_alloc.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Finalize
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>

<P><STRONG><a name="[204]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_infnan.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[1fe]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(bigflt0.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[213]"></a>_setlocale_r</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _setlocale_r &rArr; _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
</UL>

<P><STRONG><a name="[217]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_general.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED_inner
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
</UL>

<P><STRONG><a name="[214]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_abrt_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[215]"></a>__rt_SIGRTRED_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_rtred_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTRED_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTRED
</UL>

<P><STRONG><a name="[216]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(defsig_rtmem_inner.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[21d]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_mem.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[6bc]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_mem.o)(.text), UNUSED)

<P><STRONG><a name="[6bd]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_mem.o)(.text), UNUSED)

<P><STRONG><a name="[223]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(sys_wrch.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[21f]"></a>__Heap_Finalize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_final_mt.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_free
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminate_alloc
</UL>

<P><STRONG><a name="[224]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_rserrno.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[225]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_rserrno.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[226]"></a>_scanf_really_hex_real</STRONG> (Thumb, 786 bytes, Stack size 80 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_hexfp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[655]"></a>_scanf_really_infnan</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_infnan.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[227]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(llshl.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[6be]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(llshl.o)(.text), UNUSED)

<P><STRONG><a name="[404]"></a>__ARM_vec_cleanup</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(ARM_vec_cleanup_noexceptions.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_vec_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[1ff]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[22a]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[229]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[22d]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[22b]"></a>_e2d</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[22c]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[200]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[20b]"></a>_btod_edivd</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[201]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[20a]"></a>_btod_emuld</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[22e]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(btod.o)(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[22f]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\mbed_boot.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = main &rArr; $Super$$main &rArr; int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_main
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[5f4]"></a>EvrRtxEventFlagsCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsCreated))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
</UL>

<P><STRONG><a name="[541]"></a>EvrRtxEventFlagsDelete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsDelete))
<BR><BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>

<P><STRONG><a name="[5f3]"></a>EvrRtxEventFlagsDestroyed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsDestroyed))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
</UL>

<P><STRONG><a name="[503]"></a>EvrRtxEventFlagsError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsError))
<BR><BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
</UL>

<P><STRONG><a name="[545]"></a>EvrRtxEventFlagsNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsNew))
<BR><BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[546]"></a>EvrRtxEventFlagsSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsSet))
<BR><BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[547]"></a>EvrRtxEventFlagsSetDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsSetDone))
<BR><BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
</UL>

<P><STRONG><a name="[548]"></a>EvrRtxEventFlagsWait</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsWait))
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[504]"></a>EvrRtxEventFlagsWaitCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
</UL>

<P><STRONG><a name="[505]"></a>EvrRtxEventFlagsWaitNotCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsWaitNotCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
</UL>

<P><STRONG><a name="[5f5]"></a>EvrRtxEventFlagsWaitPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsWaitPending))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
</UL>

<P><STRONG><a name="[581]"></a>EvrRtxEventFlagsWaitTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxEventFlagsWaitTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[550]"></a>EvrRtxKernelError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxKernelError))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[54d]"></a>EvrRtxKernelGetState</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxKernelGetState))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetState
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[54f]"></a>EvrRtxKernelInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxKernelInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[5f6]"></a>EvrRtxKernelInitializeCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxKernelInitializeCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[551]"></a>EvrRtxKernelStart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxKernelStart))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[5fa]"></a>EvrRtxKernelStarted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxKernelStarted))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[568]"></a>EvrRtxMemoryAlloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryAlloc))
<BR><BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>

<P><STRONG><a name="[56d]"></a>EvrRtxMemoryBlockAlloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryBlockAlloc))
<BR><BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
</UL>

<P><STRONG><a name="[571]"></a>EvrRtxMemoryBlockFree</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryBlockFree))
<BR><BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
</UL>

<P><STRONG><a name="[574]"></a>EvrRtxMemoryBlockInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryBlockInit))
<BR><BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
</UL>

<P><STRONG><a name="[56a]"></a>EvrRtxMemoryFree</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryFree))
<BR><BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>

<P><STRONG><a name="[56c]"></a>EvrRtxMemoryInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryInit))
<BR><BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
</UL>

<P><STRONG><a name="[584]"></a>EvrRtxMemoryPoolAllocTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMemoryPoolAllocTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[5fc]"></a>EvrRtxMessageQueueCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueCreated))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
</UL>

<P><STRONG><a name="[507]"></a>EvrRtxMessageQueueError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueError))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
</UL>

<P><STRONG><a name="[553]"></a>EvrRtxMessageQueueGet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueGet))
<BR><BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[5fb]"></a>EvrRtxMessageQueueGetPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueGetPending))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[585]"></a>EvrRtxMessageQueueGetTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueGetTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[50e]"></a>EvrRtxMessageQueueInsertPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueInsertPending))
<BR><BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
</UL>

<P><STRONG><a name="[578]"></a>EvrRtxMessageQueueInserted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueInserted))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[558]"></a>EvrRtxMessageQueueNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueNew))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>

<P><STRONG><a name="[50d]"></a>EvrRtxMessageQueueNotInserted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueNotInserted))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
</UL>

<P><STRONG><a name="[50a]"></a>EvrRtxMessageQueueNotRetrieved</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueNotRetrieved))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
</UL>

<P><STRONG><a name="[55a]"></a>EvrRtxMessageQueuePut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueuePut))
<BR><BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[5fd]"></a>EvrRtxMessageQueuePutPending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueuePutPending))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
</UL>

<P><STRONG><a name="[586]"></a>EvrRtxMessageQueuePutTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueuePutTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[508]"></a>EvrRtxMessageQueueRetrieved</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMessageQueueRetrieved))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
</UL>

<P><STRONG><a name="[55b]"></a>EvrRtxMutexAcquire</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexAcquire))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[5fe]"></a>EvrRtxMutexAcquirePending</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexAcquirePending))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[582]"></a>EvrRtxMutexAcquireTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexAcquireTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[57b]"></a>EvrRtxMutexAcquired</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexAcquired))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
</UL>

<P><STRONG><a name="[601]"></a>EvrRtxMutexCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexCreated))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
</UL>

<P><STRONG><a name="[560]"></a>EvrRtxMutexDelete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexDelete))
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[600]"></a>EvrRtxMutexDestroyed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexDestroyed))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
</UL>

<P><STRONG><a name="[55f]"></a>EvrRtxMutexError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexError))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[561]"></a>EvrRtxMutexNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexNew))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[5ff]"></a>EvrRtxMutexNotAcquired</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexNotAcquired))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[562]"></a>EvrRtxMutexRelease</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexRelease))
<BR><BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[57a]"></a>EvrRtxMutexReleased</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxMutexReleased))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
</UL>

<P><STRONG><a name="[583]"></a>EvrRtxSemaphoreAcquireTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxSemaphoreAcquireTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[594]"></a>EvrRtxThreadBlocked</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadBlocked))
<BR><BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>

<P><STRONG><a name="[605]"></a>EvrRtxThreadCreated</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadCreated))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[53f]"></a>EvrRtxThreadDelay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadDelay))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[57e]"></a>EvrRtxThreadDelayCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadDelayCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[604]"></a>EvrRtxThreadDestroyed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadDestroyed))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[540]"></a>EvrRtxThreadError</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadError))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadContextNew
</UL>

<P><STRONG><a name="[5a0]"></a>EvrRtxThreadExit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadExit))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
</UL>

<P><STRONG><a name="[590]"></a>EvrRtxThreadFlagsWaitCompleted</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[57f]"></a>EvrRtxThreadFlagsWaitTimeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadFlagsWaitTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[5a1]"></a>EvrRtxThreadGetId</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadGetId))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
</UL>

<P><STRONG><a name="[5a2]"></a>EvrRtxThreadGetName</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadGetName))
<BR><BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetName
</UL>

<P><STRONG><a name="[602]"></a>EvrRtxThreadJoined</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadJoined))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[59c]"></a>EvrRtxThreadNew</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadNew))
<BR><BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadContextNew
</UL>

<P><STRONG><a name="[592]"></a>EvrRtxThreadSwitch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
</UL>

<P><STRONG><a name="[587]"></a>EvrRtxThreadUnblocked</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxThreadUnblocked))
<BR><BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[598]"></a>EvrRtxTimerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\rtx_evr.o(i.EvrRtxTimerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[84]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 420 bytes, Stack size 64 bytes, .\build\nrf_drv_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GPIOTE_IRQHandler &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_handler_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_api.o(i.gpio_init)
</UL>
<P><STRONG><a name="[447]"></a>NVIC_SetVector</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\cmsis_nvic.o(i.NVIC_SetVector))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
</UL>

<P><STRONG><a name="[7d]"></a>RTC1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RTC1_IRQHandler &rArr; lp_ticker_irq_handler &rArr; ticker_irq_handler &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_ticker_irq_handler
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_irq_handler
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ovf_event_check
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> us_ticker.o(i.common_rtc_init)
</UL>
<P><STRONG><a name="[79]"></a>SWI2_EGU2_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, .\build\softdevice_handler.o(i.SWI2_EGU2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SWI2_EGU2_IRQHandler &rArr; intern_softdevice_events_execute &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> btle.o(i.btle_init)
</UL>
<P><STRONG><a name="[251]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 546 bytes, Stack size 8 bytes, .\build\system_nrf52.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_66
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_57
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_37
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_36
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_32
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_31
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errata_16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>UARTE0_UART0_IRQHandler</STRONG> (Thumb, 442 bytes, Stack size 16 bytes, .\build\serial_api.o(i.UARTE0_UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTE0_UART0_IRQHandler &rArr; end_asynch_tx
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txd_set
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable_check
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_asynch_tx
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_asynch_rx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial_api.o(i.serial_init)
</UL>
<P><STRONG><a name="[44e]"></a>btle_gap_init()</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, .\build\btle_gap.o(i._Z13btle_gap_initv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = btle_gap_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[c7]"></a>createBLEInstance()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._Z17createBLEInstancev))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = createBLEInstance() &rArr; nRF5xn::Instance(unsigned) &rArr; getDeviceInstance() &rArr; nRF5xn::nRF5xn() &rArr; mbed::Ticker::Ticker() &rArr; mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>updateSensorValue()</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, .\build\main.o(i._Z17updateSensorValuev))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = updateSensorValue() &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[262]"></a>bleGattcEventHandler(const ble_evt_t*)</STRONG> (Thumb, 430 bytes, Stack size 56 bytes, .\build\btle_discovery.o(i._Z20bleGattcEventHandlerPK9ble_evt_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = bleGattcEventHandler(const ble_evt_t*) &rArr; nRF5xServiceDiscovery::progressCharacteristicDiscovery() &rArr; nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t) &rArr; operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(unsigned short, ble_error_t)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::operator ()(const GattWriteCallbackParams*) const
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::operator ()(const GattReadCallbackParams*) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::processHVXEvent(const GattHVXCallbackParams*)
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredCharacteristics(const ble_gattc_evt_char_disc_rsp_t*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredServices(const ble_gattc_evt_prim_srvc_disc_rsp_t*)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[290]"></a>loadPersistentParams()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, .\build\nrfconfigparamspersistence.o(i._Z20loadPersistentParamsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = loadPersistentParams() &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*)
</UL>

<P><STRONG><a name="[5e]"></a>updatetempSensorValue()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\main.o(i._Z21updatetempSensorValuev))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = updatetempSensorValue() &rArr; EddystoneService::updatetemperatureValues(unsigned char) &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::authentificationcondition(unsigned char)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updatetemperatureValues(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z6blinkyv)
</UL>
<P><STRONG><a name="[295]"></a>btle_matchAddressAndIrk(const ble_gap_addr_t*, const ble_gap_irk_t*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\btle_security_pm.o(i._Z23btle_matchAddressAndIrkPK14ble_gap_addr_tPK13ble_gap_irk_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = btle_matchAddressAndIrk(const ble_gap_addr_t*, const ble_gap_irk_t*) &rArr; im_address_resolve &rArr; ah &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_address_resolve
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&)
</UL>

<P><STRONG><a name="[2a3]"></a>btle_hasInitializedSecurity()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\btle_security_pm.o(i._Z27btle_hasInitializedSecurityv))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_createWhitelistFromBondTable(ble_gap_whitelist_t*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&)
</UL>

<P><STRONG><a name="[89]"></a>scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext*)</STRONG> (Thumb, 108 bytes, Stack size 80 bytes, .\build\main.o(i._Z27scheduleBleEventsProcessingPN3BLE32OnEventsToProcessCallbackContextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext*) &rArr; int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[26e]"></a>loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, .\build\nrfconfigparamspersistence.o(i._Z32loadEddystoneServiceConfigParamsPN16EddystoneService17EddystoneParams_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*) &rArr; fs_init
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadPersistentParams()
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[29f]"></a>saveEddystoneServiceConfigParams(const EddystoneService::EddystoneParams_t*)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, .\build\nrfconfigparamspersistence.o(i._Z32saveEddystoneServiceConfigParamsPKN16EddystoneService17EddystoneParams_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = saveEddystoneServiceConfigParams(const EddystoneService::EddystoneParams_t*) &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
</UL>

<P><STRONG><a name="[2a2]"></a>btle_createWhitelistFromBondTable(ble_gap_whitelist_t*)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\btle_security_pm.o(i._Z33btle_createWhitelistFromBondTableP19ble_gap_whitelist_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = btle_createWhitelistFromBondTable(ble_gap_whitelist_t*) &rArr; pm_whitelist_create &rArr; im_whitelist_create &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_whitelist_create
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_hasInitializedSecurity()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&)
</UL>

<P><STRONG><a name="[2a8]"></a>catgets(__rw::__rw_cat*, int, int, const char*)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i._Z7catgetsPN4__rw8__rw_catEiiPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
</UL>

<P><STRONG><a name="[2aa]"></a>catopen(const char*, int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i._Z7catopenPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = catopen(const char*, int) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[28b]"></a>GattClient::processHVXEvent(const GattHVXCallbackParams*)</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, .\build\btle_discovery.o(i._ZN10GattClient15processHVXEventEPK21GattHVXCallbackParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GattClient::processHVXEvent(const GattHVXCallbackParams*) &rArr; CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::operator ()(const GattHVXCallbackParams*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::operator ()(const GattHVXCallbackParams*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[e3]"></a>GattClient::reset()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN10GattClient5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GattClient::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::call(const GattClient*)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::clear()
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::clear()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::clear()
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattClient::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV10GattClient)
</UL>
<P><STRONG><a name="[2b5]"></a>GattClient::GattClient()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN10GattClientC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GattClient::GattClient()
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::CallChainOfFunctionPointersWithContext()
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::CallChainOfFunctionPointersWithContext()
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getGattClient()
</UL>

<P><STRONG><a name="[6bf]"></a>GattClient::GattClient__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN10GattClientC1Ev), UNUSED)

<P><STRONG><a name="[e4]"></a>GattServer::addService(GattService&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN10GattServer10addServiceER11GattService))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV10GattServer)
</UL>
<P><STRONG><a name="[2b8]"></a>GattServer::handleEvent(GattServerEvents::gattEvent_e, unsigned short)</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, .\build\nrf5xgattserver.o(i._ZN10GattServer11handleEventEN16GattServerEvents11gattEvent_eEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GattServer::handleEvent(GattServerEvents::gattEvent_e, unsigned short) &rArr; FunctionPointerWithContext&lang;unsigned short&rang;::operator ()(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SafeBool&lang;FunctionPointerWithContext&lang;unsigned short&rang;&rang;::operator void(SafeBool_::base::*)() const() const
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::operator ()(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
</UL>

<P><STRONG><a name="[2bb]"></a>GattServer::handleDataWrittenEvent(const GattWriteCallbackParams*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xgattserver.o(i._ZN10GattServer22handleDataWrittenEventEPK23GattWriteCallbackParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GattServer::handleDataWrittenEvent(const GattWriteCallbackParams*) &rArr; CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::call(const GattWriteCallbackParams*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::call(const GattWriteCallbackParams*)
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
</UL>

<P><STRONG><a name="[e6]"></a>GattServer::reset()</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, .\build\nrf5xn.o(i._ZN10GattServer5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GattServer::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::operator =(const FunctionPointerWithContext&lang;unsigned short&rang;&)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::call(const GattServer*)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::FunctionPointerWithContext(void(*)(unsigned short))
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::clear()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::clear()
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::clear()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV10GattServer)
</UL>
<P><STRONG><a name="[e5]"></a>GattServer::write(unsigned short, const unsigned char*, unsigned short, bool)</STRONG> (Thumb, 10 bytes, Stack size 12 bytes, .\build\nrf5xn.o(i._ZN10GattServer5writeEtPKhtb))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GattServer::write(unsigned short, const unsigned char*, unsigned short, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV10GattServer)
</UL>
<P><STRONG><a name="[2c2]"></a>GattServer::GattServer()</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN10GattServerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GattServer::GattServer()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::FunctionPointerWithContext(void(*)(unsigned short))
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::CallChainOfFunctionPointersWithContext()
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::CallChainOfFunctionPointersWithContext()
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::nRF5xGattServer()
</UL>

<P><STRONG><a name="[6c0]"></a>GattServer::GattServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN10GattServerC1Ev), UNUSED)

<P><STRONG><a name="[2c3]"></a>GattService::GattService(const UUID&, GattCharacteristic**, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN11GattServiceC1ERK4UUIDPP18GattCharacteristicj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GattService::GattService(const UUID&, GattCharacteristic**, unsigned) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const UUID&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
</UL>

<P><STRONG><a name="[6c1]"></a>GattService::GattService__sub_object(const UUID&, GattCharacteristic**, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN11GattServiceC1ERK4UUIDPP18GattCharacteristicj), UNUSED)

<P><STRONG><a name="[2cc]"></a>GattAttribute::getValuePtr()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZN13GattAttribute11getValuePtrEv))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[2d2]"></a>GattAttribute::setHandle(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZN13GattAttribute9setHandleEt))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[e1]"></a>BatteryService::basicAuthorizationCallback(GattReadAuthCallbackParams*)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\main.o(i._ZN14BatteryService26basicAuthorizationCallbackEP26GattReadAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[272]"></a>BatteryService::BatteryService(BLE&, unsigned char)</STRONG> (Thumb, 176 bytes, Stack size 120 bytes, .\build\main.o(i._ZN14BatteryServiceC1ER3BLEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = BatteryService::BatteryService(BLE&, unsigned char) &rArr; BLE::addService(GattService&) &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattService::GattService(const UUID&, GattCharacteristic**, unsigned)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::addService(GattService&)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[6c2]"></a>BatteryService::BatteryService__sub_object(BLE&, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 120 bytes, .\build\main.o(i._ZN14BatteryServiceC1ER3BLEh), UNUSED)

<P><STRONG><a name="[25f]"></a>BLEInstanceBase::signalEventsToProcess(unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\bleinstancebase.o(i._ZN15BLEInstanceBase21signalEventsToProcessEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = BLEInstanceBase::signalEventsToProcess(unsigned) &rArr; BLE::Instance(unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::signalEventsToProcess()
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;signalEvent()
</UL>

<P><STRONG><a name="[6c3]"></a>BLEInstanceBase::~BLEInstanceBase()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\bleinstancebase.o(i._ZN15BLEInstanceBaseD2Ev), UNUSED)

<P><STRONG><a name="[e7]"></a>BLEInstanceBase::~BLEInstanceBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\bleinstancebase.o(i._ZN15BLEInstanceBaseD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::~nRF5xn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bleinstancebase.o(.constdata__ZTV15BLEInstanceBase)
</UL>
<P><STRONG><a name="[e9]"></a>SecurityManager::reset()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN15SecurityManager5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SecurityManager::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::clear()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::call(const SecurityManager*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xSecurityManager::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV15SecurityManager)
</UL>
<P><STRONG><a name="[ea]"></a>nRF5xGattClient::reset()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\nrf5xgattclient.o(i._ZN15nRF5xGattClient5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nRF5xGattClient::reset() &rArr; nRF5xServiceDiscovery::reset() &rArr; ServiceDiscovery::reset() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::reset()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattclient.o(.constdata__ZTV15nRF5xGattClient)
</UL>
<P><STRONG><a name="[eb]"></a>nRF5xGattServer::addService(GattService&)</STRONG> (Thumb, 610 bytes, Stack size 112 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer10addServiceER11GattService))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = nRF5xGattServer::addService(GattService&) &rArr; custom_add_in_characteristic &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_convert_to_nordic_uuid
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_add_in_descriptor
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_add_in_characteristic
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getProperties() const
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattAttribute::getLength() const
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getDescriptor(unsigned char)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattAttribute::setHandle(unsigned short)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattAttribute::getValuePtr()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
</UL>
<P><STRONG><a name="[268]"></a>nRF5xGattServer::hwCallback(ble_evt_t*)</STRONG> (Thumb, 1228 bytes, Stack size 128 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer10hwCallbackEP9ble_evt_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = nRF5xGattServer::hwCallback(ble_evt_t*) &rArr; nRF5xGattServer::allocateLongWriteRequest(unsigned short) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::call(unsigned)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getProperties() const
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::resolveValueHandleToCharIndex(unsigned short) const
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::authorizeWrite(GattWriteAuthCallbackParams*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::handleDataWrittenEvent(const GattWriteCallbackParams*)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::handleEvent(GattServerEvents::gattEvent_e, unsigned short)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::getBiggestCharacteristicSize() const
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::allocateLongWriteRequest(unsigned short)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::releaseLongWriteRequest(unsigned short)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::findLongWriteRequest(unsigned short)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[2d9]"></a>nRF5xGattServer::findLongWriteRequest(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer20findLongWriteRequestEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nRF5xGattServer::findLongWriteRequest(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::releaseLongWriteRequest(unsigned short)
</UL>

<P><STRONG><a name="[2db]"></a>nRF5xGattServer::releaseAllWriteRequests()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer23releaseAllWriteRequestsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nRF5xGattServer::releaseAllWriteRequests() &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::reset()
</UL>

<P><STRONG><a name="[2d8]"></a>nRF5xGattServer::releaseLongWriteRequest(unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer23releaseLongWriteRequestEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nRF5xGattServer::releaseLongWriteRequest(unsigned short) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::findLongWriteRequest(unsigned short)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
</UL>

<P><STRONG><a name="[2d5]"></a>nRF5xGattServer::allocateLongWriteRequest(unsigned short)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer24allocateLongWriteRequestEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nRF5xGattServer::allocateLongWriteRequest(unsigned short) &rArr; malloc &rArr; _malloc_internal &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::getBiggestCharacteristicSize() const
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
</UL>

<P><STRONG><a name="[ee]"></a>nRF5xGattServer::reset()</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = nRF5xGattServer::reset() &rArr; GattServer::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::releaseAllWriteRequests()
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
</UL>
<P><STRONG><a name="[ec]"></a>nRF5xGattServer::write(unsigned short, const unsigned char*, unsigned short, bool)</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer5writeEtPKhtb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xGattServer::write(unsigned short, const unsigned char*, unsigned short, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
</UL>
<P><STRONG><a name="[ed]"></a>nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool)</STRONG> (Thumb, 394 bytes, Stack size 72 bytes, .\build\nrf5xgattserver.o(i._ZN15nRF5xGattServer5writeEttPKhtb))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool) &rArr; nRF5xn::Instance(unsigned) &rArr; getDeviceInstance() &rArr; nRF5xn::nRF5xn() &rArr; mbed::Ticker::Ticker() &rArr; mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::getConnectionHandle()
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getProperties() const
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::resolveValueHandleToCharIndex(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattserver.o(.constdata__ZTV15nRF5xGattServer)
</UL>
<P><STRONG><a name="[2dd]"></a>nRF5xGattServer::nRF5xGattServer()</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN15nRF5xGattServerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nRF5xGattServer::nRF5xGattServer() &rArr; GattServer::GattServer()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::GattServer()
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getGattServer()
</UL>

<P><STRONG><a name="[6c4]"></a>nRF5xGattServer::nRF5xGattServer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN15nRF5xGattServerC1Ev), UNUSED)

<P><STRONG><a name="[29b]"></a>EddystoneService::setTLMData(unsigned char)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService10setTLMDataEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EddystoneService::setTLMData(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::setTLMData(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
</UL>

<P><STRONG><a name="[29a]"></a>EddystoneService::setUIDData(const unsigned char(&)[10], const unsigned char(&)[6])</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService10setUIDDataERA10_KhRA6_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EddystoneService::setUIDData(const unsigned char(&)[10], const unsigned char(&)[6])
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::setUIDData(const unsigned char(&)[10], const unsigned char(&)[6])
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
</UL>

<P><STRONG><a name="[299]"></a>EddystoneService::setURLData(const char*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService10setURLDataEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EddystoneService::setURLData(const char*) &rArr; URLFrame::setURLData(const char*) &rArr; URLFrame::encodeURL(const char*) &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::setURLData(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
</UL>

<P><STRONG><a name="[29c]"></a>EddystoneService::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService10setiBeaconEPhttht))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = EddystoneService::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short) &rArr; iBeacon::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short) &rArr; iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
</UL>

<P><STRONG><a name="[d5]"></a>EddystoneService::manageRadio()</STRONG> (Thumb, 278 bytes, Stack size 88 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService11manageRadioEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = EddystoneService::manageRadio() &rArr; int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_ms()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::pop(EddystoneService::FrameType&)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::startAdvertising()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::updatePduCount()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::enqueueFrame(EddystoneService::FrameType)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>EddystoneService::enqueueFrame(EddystoneService::FrameType)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService12enqueueFrameENS_9FrameTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = EddystoneService::enqueueFrame(EddystoneService::FrameType) &rArr; EddystoneService::manageRadio() &rArr; int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::push(const EddystoneService::FrameType&)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>EddystoneService::bleInitComplete(BLE::InitializationCompleteCallbackContext*)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService15bleInitCompleteEPN3BLE37InitializationCompleteCallbackContextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = EddystoneService::bleInitComplete(BLE::InitializationCompleteCallbackContext*) &rArr; EddystoneService::setupConfigService() &rArr; EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[2eb]"></a>EddystoneService::stopBeaconService()</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService17stopBeaconServiceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EddystoneService::stopBeaconService() &rArr; events::EventQueue::cancel(int) &rArr; equeue_cancel &rArr; equeue_dealloc &rArr; equeue_mem_dealloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::cancel(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
</UL>

<P><STRONG><a name="[2ed]"></a>EddystoneService::updateRawTLMFrame()</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService17updateRawTLMFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EddystoneService::updateRawTLMFrame() &rArr; mbed::Timer::read_ms() &rArr; mbed::Timer::read_high_resolution_us() &rArr; mbed::Timer::slicetime() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_ms()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::getBeaconTemperature() const
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::getBatteryVoltage() const
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::updateBeaconTemperature(unsigned short)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::updateBatteryVoltage(unsigned short)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::updateTimeSinceBoot(unsigned)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::constructTLMFrame(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
</UL>

<P><STRONG><a name="[2ae]"></a>EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService18getEddystoneParamsERNS_17EddystoneParams_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLDataLength() const
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::getTLMVersion() const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLData()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::getUIDNamespaceID()
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::getUIDInstanceID()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::GetminorNumber()
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::GetmajorNumber()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::GetcompanyID()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::GetrawFrame()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::GettxPower()
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
</UL>

<P><STRONG><a name="[2e9]"></a>EddystoneService::setupBeaconService()</STRONG> (Thumb, 522 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService18setupBeaconServiceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = EddystoneService::setupBeaconService() &rArr; EddystoneService::manageRadio() &rArr; int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback&lang;EddystoneService, EddystoneService&rang;(T2*, void(T1::*)(EddystoneService::FrameType))
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::push(const EddystoneService::FrameType&)
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::setAdvertisingInterval(unsigned short)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::setAdvertisingType(GapAdvertisingParams::AdvertisingType_t)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getRawFrameSize() const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::getRawFrameSize() const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::getRawFrameSize() const
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::getRawFrameSize() const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::constructURLFrame(unsigned char*, signed char)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::constructUIDFrame(unsigned char*, signed char)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::constructiBeacon(unsigned char*)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[2e8]"></a>EddystoneService::setupConfigService()</STRONG> (Thumb, 1670 bytes, Stack size 216 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService18setupConfigServiceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = EddystoneService::setupConfigService() &rArr; EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOnlyArrayGattCharacteristic&lang;unsigned char, (unsigned)16&rang;::WriteOnlyArrayGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteGattCharacteristic&lang;unsigned short&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned short*, unsigned char, GattAttribute**, unsigned)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteGattCharacteristic&lang;unsigned char&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GattCharacteristic::setWriteAuthorizationCallback&lang;EddystoneService&rang;(T1*, void(T1::*)(GattWriteAuthCallbackParams*))
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GattCharacteristic::setReadAuthorizationCallback&lang;EddystoneService&rang;(T1*, void(T1::*)(GattReadAuthCallbackParams*))
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GattServer::onDataWritten&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const unsigned char*, UUID::ByteOrder_t)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattService::GattService(const UUID&, GattCharacteristic**, unsigned)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLData()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues2()
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues()
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updatetemperatureValues(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigServiceafterdeconnexion()
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[2ac]"></a>EddystoneService::startBeaconService()</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService18startBeaconServiceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = EddystoneService::startBeaconService() &rArr; EddystoneService::setupBeaconService() &rArr; EddystoneService::manageRadio() &rArr; int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::hasInitialized() const
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::shutdown()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_t BLE::init&lang;EddystoneService&rang;(T1*, void(T1::*)(BLE::InitializationCompleteCallbackContext*))
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::freeConfigCharacteristics()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
</UL>

<P><STRONG><a name="[274]"></a>EddystoneService::startConfigService()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService18startConfigServiceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = EddystoneService::startConfigService() &rArr; EddystoneService::setupConfigService() &rArr; EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::hasInitialized() const
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::shutdown()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_t BLE::init&lang;EddystoneService&rang;(T1*, void(T1::*)(BLE::InitializationCompleteCallbackContext*))
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::stopBeaconService()
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[d7]"></a>EddystoneService::basicAuthorCallback(GattReadAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService19basicAuthorCallbackEP26GattReadAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[2e3]"></a>EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService19swapAdvertisedFrameENS_9FrameTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType) &rArr; EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned) &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(unsigned char)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::clearAdvertisingPayload()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::setAdvertisingInterval(unsigned short)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::startAdvertising()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getRawFrameSize() const
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::getRawFrameSize() const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::getRawFrameSize() const
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::getRawFrameSize() const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::constructiBeacon(unsigned char*)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>

<P><STRONG><a name="[df]"></a>EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)</STRONG> (Thumb, 1358 bytes, Stack size 64 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService21onDataWrittenCallbackEPK23GattWriteCallbackParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*) &rArr; EddystoneService::correctAdvertisementPeriod(unsigned short) const &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLDataLength() const
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::setEncodedURLData(const unsigned char*, unsigned char)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLData()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::setURLData(const char*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::correctAdvertisementPeriod(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[293]"></a>EddystoneService::updatetemperatureValues(unsigned char)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService23updatetemperatureValuesEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = EddystoneService::updatetemperatureValues(unsigned char) &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatetempSensorValue()
</UL>

<P><STRONG><a name="[292]"></a>EddystoneService::authentificationcondition(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService25authentificationconditionEh))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updatetempSensorValue()
</UL>

<P><STRONG><a name="[318]"></a>EddystoneService::freeConfigCharacteristics()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService25freeConfigCharacteristicsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EddystoneService::freeConfigCharacteristics() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
</UL>

<P><STRONG><a name="[d6]"></a>EddystoneService::lockAuthorizationCallback(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService25lockAuthorizationCallbackEP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[31b]"></a>EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService25updateAdvertisementPacketEPKhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned) &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(unsigned char)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::clearAdvertisingPayload()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
</UL>

<P><STRONG><a name="[321]"></a>EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned)</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService26eddystoneConstructorHelperERA4_KaS2_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned) &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::start()
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[314]"></a>EddystoneService::updateCharacteristicValues()</STRONG> (Thumb, 360 bytes, Stack size 56 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService26updateCharacteristicValuesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = EddystoneService::updateCharacteristicValues() &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLDataLength() const
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::getEncodedURLData()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[d8]"></a>EddystoneService::unlockAuthorizationCallback(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService27unlockAuthorizationCallbackEP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[316]"></a>EddystoneService::updateCharacteristicValues2()</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService27updateCharacteristicValues2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = EddystoneService::updateCharacteristicValues2() &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[dc]"></a>EddystoneService::powerModeAuthorizationCallback(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService30powerModeAuthorizationCallbackEP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[322]"></a>EddystoneService::setupEddystoneConfigScanResponse()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService32setupEddystoneConfigScanResponseEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::clear()
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateScanResponse(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
</UL>

<P><STRONG><a name="[d9]"></a>EddystoneService::urlDataWriteAuthorizationCallback(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService33urlDataWriteAuthorizationCallbackEP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[315]"></a>EddystoneService::setupEddystoneConfigAdvertisements()</STRONG> (Thumb, 248 bytes, Stack size 88 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService34setupEddystoneConfigAdvertisementsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(unsigned char)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::clearAdvertisingPayload()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::setAdvertisingInterval(unsigned short)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::setAdvertisingType(GapAdvertisingParams::AdvertisingType_t)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::startAdvertising()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigScanResponse()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[2ad]"></a>EddystoneService::startConfigServiceafterdeconnexion()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneService34startConfigServiceafterdeconnexionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = EddystoneService::startConfigServiceafterdeconnexion() &rArr; EddystoneService::setupConfigService() &rArr; EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
</UL>

<P><STRONG><a name="[298]"></a>EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneServiceC1ER3BLERA4_KaS4_RN6events10EventQueueEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned) &rArr; EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned) &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::Timer()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::CircularBuffer()
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::URLFrame()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::UIDFrame()
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::TLMFrame(unsigned char, unsigned short, unsigned short, unsigned, unsigned)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::iBeacon()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
</UL>

<P><STRONG><a name="[6c5]"></a>EddystoneService::EddystoneService__sub_object(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneServiceC1ER3BLERA4_KaS4_RN6events10EventQueueEj), UNUSED)

<P><STRONG><a name="[271]"></a>EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneServiceC1ER3BLERNS_17EddystoneParams_tERA4_KaRN6events10EventQueueEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned) &rArr; EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned) &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::Timer()
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::CircularBuffer()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::URLFrame(unsigned char*, unsigned char)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UIDFrame::UIDFrame(const unsigned char*, const unsigned char*)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TLMFrame::TLMFrame(unsigned char, unsigned short, unsigned short, unsigned, unsigned)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::iBeacon()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::correctAdvertisementPeriod(unsigned short) const
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[6c6]"></a>EddystoneService::EddystoneService__sub_object(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN16EddystoneServiceC1ER3BLERNS_17EddystoneParams_tERA4_KaRN6events10EventQueueEj), UNUSED)

<P><STRONG><a name="[ef]"></a>ServiceDiscovery::reset()</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, .\build\nrf5xn.o(i._ZN16ServiceDiscovery5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ServiceDiscovery::reset() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator =(const FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::FunctionPointerWithContext(void(*)(const DiscoveredCharacteristic*))
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredService*&rang;::operator =(const FunctionPointerWithContext&lang;const DiscoveredService*&rang;&)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredService*&rang;::FunctionPointerWithContext(void(*)(const DiscoveredService*))
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV16ServiceDiscovery)
</UL>
<P><STRONG><a name="[64]"></a>DiscoveredService::DiscoveredService()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN17DiscoveredServiceC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DiscoveredService::DiscoveredService() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(i._ZN21nRF5xServiceDiscoveryC1EP15nRF5xGattClient)
</UL>
<P><STRONG><a name="[6c7]"></a>DiscoveredService::DiscoveredService__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN17DiscoveredServiceC1Ev), UNUSED)

<P><STRONG><a name="[333]"></a>GapScanningParams::MSEC_TO_SCAN_DURATION_UNITS(unsigned)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\gapscanningparams.o(i._ZN17GapScanningParams27MSEC_TO_SCAN_DURATION_UNITSEj))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapScanningParams::GapScanningParams(unsigned short, unsigned short, unsigned short, bool)
</UL>

<P><STRONG><a name="[332]"></a>GapScanningParams::GapScanningParams(unsigned short, unsigned short, unsigned short, bool)</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, .\build\gapscanningparams.o(i._ZN17GapScanningParamsC1Etttb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GapScanningParams::GapScanningParams(unsigned short, unsigned short, unsigned short, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapScanningParams::MSEC_TO_SCAN_DURATION_UNITS(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
</UL>

<P><STRONG><a name="[6c8]"></a>GapScanningParams::GapScanningParams__sub_object(unsigned short, unsigned short, unsigned short, bool)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\gapscanningparams.o(i._ZN17GapScanningParamsC1Etttb), UNUSED)

<P><STRONG><a name="[334]"></a>GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZN18GapAdvertisingData11appendFieldENS_10DataType_tEPKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*)
</UL>

<P><STRONG><a name="[335]"></a>GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*)</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(i._ZN18GapAdvertisingData11updateFieldENS_10DataType_tEPKhhPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*)
</UL>

<P><STRONG><a name="[323]"></a>GapAdvertisingData::clear()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\nrf5xgap.o(i._ZN18GapAdvertisingData5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GapAdvertisingData::clear()
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::clearAdvertisingPayload()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigScanResponse()
</UL>

<P><STRONG><a name="[326]"></a>GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN18GapAdvertisingData7addDataENS_10DataType_tEPKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char) &rArr; GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(unsigned char)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::accumulateScanResponse(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
</UL>

<P><STRONG><a name="[336]"></a>GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*)</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(i._ZN18GapAdvertisingData8addFieldENS_10DataType_tEPKhhPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>

<P><STRONG><a name="[337]"></a>GapAdvertisingData::GapAdvertisingData()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN18GapAdvertisingDataC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GapAdvertisingData::GapAdvertisingData()
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
</UL>

<P><STRONG><a name="[6c9]"></a>GapAdvertisingData::GapAdvertisingData__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN18GapAdvertisingDataC1Ev), UNUSED)

<P><STRONG><a name="[2cf]"></a>GattCharacteristic::getDescriptor(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZN18GattCharacteristic13getDescriptorEh))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[2da]"></a>GattCharacteristic::authorizeWrite(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\nrf5xgattserver.o(i._ZN18GattCharacteristic14authorizeWriteEP27GattWriteAuthCallbackParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GattCharacteristic::authorizeWrite(GattWriteAuthCallbackParams*)
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
</UL>

<P><STRONG><a name="[2c6]"></a>GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN18GattCharacteristicC1ERK4UUIDPhtthPP13GattAttributejb))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const UUID&)
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteOnlyArrayGattCharacteristic&lang;unsigned char, (unsigned)16&rang;::WriteOnlyArrayGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteGattCharacteristic&lang;unsigned short&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned short*, unsigned char, GattAttribute**, unsigned)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWriteGattCharacteristic&lang;unsigned char&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
</UL>

<P><STRONG><a name="[6ca]"></a>GattCharacteristic::GattCharacteristic__sub_object(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(i._ZN18GattCharacteristicC1ERK4UUIDPhtthPP13GattAttributejb), UNUSED)

<P><STRONG><a name="[3d0]"></a>GapAdvertisingParams::ADVERTISEMENT_DURATION_UNITS_TO_MS(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\nrf5xgap.o(i._ZN20GapAdvertisingParams34ADVERTISEMENT_DURATION_UNITS_TO_MSEt))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::getMinNonConnectableAdvertisingInterval() const
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::getMinAdvertisingInterval() const
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::getMaxAdvertisingInterval() const
</UL>

<P><STRONG><a name="[371]"></a>GapAdvertisingParams::GapAdvertisingParams(GapAdvertisingParams::AdvertisingType_t, unsigned short, unsigned short)</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN20GapAdvertisingParamsC1ENS_17AdvertisingType_tEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GapAdvertisingParams::GapAdvertisingParams(GapAdvertisingParams::AdvertisingType_t, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
</UL>

<P><STRONG><a name="[6cb]"></a>GapAdvertisingParams::GapAdvertisingParams__sub_object(GapAdvertisingParams::AdvertisingType_t, unsigned short, unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN20GapAdvertisingParamsC1ENS_17AdvertisingType_tEtt), UNUSED)

<P><STRONG><a name="[f0]"></a>nRF5xSecurityManager::reset()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN20nRF5xSecurityManager5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nRF5xSecurityManager::reset() &rArr; SecurityManager::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurityManager::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV20nRF5xSecurityManager)
</UL>
<P><STRONG><a name="[3c1]"></a>nRF5xSecurityManager::nRF5xSecurityManager()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN20nRF5xSecurityManagerC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getSecurityManager()
</UL>

<P><STRONG><a name="[6cc]"></a>nRF5xSecurityManager::nRF5xSecurityManager__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN20nRF5xSecurityManagerC1Ev), UNUSED)

<P><STRONG><a name="[338]"></a>nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::triggerFirst()</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery22CharUUIDDiscoveryQueue12triggerFirstEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::triggerFirst() &rArr; nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredCharacteristic::getDeclHandle() const
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredCharacteristics(const ble_gattc_evt_char_disc_rsp_t*)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
</UL>

<P><STRONG><a name="[33a]"></a>nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::dequeue()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery22CharUUIDDiscoveryQueue7dequeueEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::triggerFirst()
</UL>

<P><STRONG><a name="[285]"></a>nRF5xServiceDiscovery::setupDiscoveredServices(const ble_gattc_evt_prim_srvc_disc_rsp_t*)</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery23setupDiscoveredServicesEPK34ble_gattc_evt_prim_srvc_disc_rsp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = nRF5xServiceDiscovery::setupDiscoveredServices(const ble_gattc_evt_prim_srvc_disc_rsp_t*) &rArr; nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst() &rArr; nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst()
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[28f]"></a>nRF5xServiceDiscovery::progressServiceDiscovery()</STRONG> (Thumb, 476 bytes, Stack size 104 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery24progressServiceDiscoveryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = nRF5xServiceDiscovery::progressServiceDiscovery() &rArr; nRF5xServiceDiscovery::launchCharacteristicDiscovery(unsigned short, unsigned short, unsigned short) &rArr; nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t) &rArr; operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SafeBool&lang;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&rang;::operator void(SafeBool_::base::*)() const() const
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredService::getEndHandle() const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::launchCharacteristicDiscovery(unsigned short, unsigned short, unsigned short)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateServiceDiscovery()
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[33b]"></a>nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst()</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery25ServiceUUIDDiscoveryQueue12triggerFirstEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst() &rArr; nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredService::getEndHandle() const
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredServices(const ble_gattc_evt_prim_srvc_disc_rsp_t*)
</UL>

<P><STRONG><a name="[340]"></a>nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery25ServiceUUIDDiscoveryQueue7dequeueEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst()
</UL>

<P><STRONG><a name="[33f]"></a>nRF5xServiceDiscovery::terminateServiceDiscovery()</STRONG> (Thumb, 166 bytes, Stack size 96 bytes, .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscovery25terminateServiceDiscoveryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nRF5xServiceDiscovery::terminateServiceDiscovery() &rArr; nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminate()
</UL>

<P><STRONG><a name="[288]"></a>nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery27processDiscoverUUIDResponseEPK15ble_gattc_evt_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*) &rArr; nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst() &rArr; nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::setupLong(const unsigned char*, UUID::ByteOrder_t)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::dequeue()
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::dequeue()
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::triggerFirst()
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[33e]"></a>nRF5xServiceDiscovery::launchCharacteristicDiscovery(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery29launchCharacteristicDiscoveryEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = nRF5xServiceDiscovery::launchCharacteristicDiscovery(unsigned short, unsigned short, unsigned short) &rArr; nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t) &rArr; operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
</UL>

<P><STRONG><a name="[286]"></a>nRF5xServiceDiscovery::setupDiscoveredCharacteristics(const ble_gattc_evt_char_disc_rsp_t*)</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery30setupDiscoveredCharacteristicsEPK29ble_gattc_evt_char_disc_rsp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = nRF5xServiceDiscovery::setupDiscoveredCharacteristics(const ble_gattc_evt_char_disc_rsp_t*) &rArr; nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::triggerFirst()
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[28e]"></a>nRF5xServiceDiscovery::progressCharacteristicDiscovery()</STRONG> (Thumb, 574 bytes, Stack size 144 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery31progressCharacteristicDiscoveryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = nRF5xServiceDiscovery::progressCharacteristicDiscovery() &rArr; nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t) &rArr; operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SafeBool&lang;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&rang;::operator void(SafeBool_::base::*)() const() const
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator ()(const DiscoveredCharacteristic*) const
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator !=(const UUID&) const
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredCharacteristic::getDeclHandle() const
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredService::getEndHandle() const
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::setLastHandle(unsigned short)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[287]"></a>nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)</STRONG> (Thumb, 258 bytes, Stack size 168 bytes, .\build\nrf5xservicediscovery.o(i._ZN21nRF5xServiceDiscovery32terminateCharacteristicDiscoveryE11ble_error_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t) &rArr; operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SafeBool&lang;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&rang;::operator void(SafeBool_::base::*)() const() const
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator ()(const DiscoveredCharacteristic*) const
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator !=(const UUID&) const
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredService::getEndHandle() const
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::setLastHandle(unsigned short)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::launchCharacteristicDiscovery(unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[f3]"></a>nRF5xServiceDiscovery::reset()</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscovery5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = nRF5xServiceDiscovery::reset() &rArr; ServiceDiscovery::reset() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::operator =(const FunctionPointerWithContext&lang;unsigned short&rang;&)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::FunctionPointerWithContext(void(*)(unsigned short))
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattClient::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV21nRF5xServiceDiscovery)
</UL>
<P><STRONG><a name="[f2]"></a>nRF5xServiceDiscovery::terminate()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscovery9terminateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = nRF5xServiceDiscovery::terminate() &rArr; nRF5xServiceDiscovery::terminateServiceDiscovery() &rArr; nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateServiceDiscovery()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV21nRF5xServiceDiscovery)
</UL>
<P><STRONG><a name="[348]"></a>nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscoveryC1EP15nRF5xGattClient))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*) &rArr; nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::FunctionPointerWithContext(void(*)(const DiscoveredCharacteristic*))
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;unsigned short&rang;::FunctionPointerWithContext(void(*)(unsigned short))
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const DiscoveredService*&rang;::FunctionPointerWithContext(void(*)(const DiscoveredService*))
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getGattClient()
</UL>

<P><STRONG><a name="[6cd]"></a>nRF5xServiceDiscovery::nRF5xServiceDiscovery__sub_object(nRF5xGattClient*)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN21nRF5xServiceDiscoveryC1EP15nRF5xGattClient), UNUSED)

<P><STRONG><a name="[e0]"></a>AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, .\build\main.o(i._ZN23AuthentificationService21onDataWrittenCallbackEPK23GattWriteCallbackParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 908 + Unknown Stack Size
<LI>Call Chain = AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*) &rArr; std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&) &rArr; std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::getValueHandle() const
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::operator [](unsigned)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::clear()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[270]"></a>AuthentificationService::AuthentificationService(BLE&)</STRONG> (Thumb, 198 bytes, Stack size 120 bytes, .\build\main.o(i._ZN23AuthentificationServiceC1ER3BLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = AuthentificationService::AuthentificationService(BLE&) &rArr; FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;AuthentificationService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*)) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattService::GattService(const UUID&, GattCharacteristic**, unsigned)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::vector(const std::allocator&lang;unsigned char&rang;&)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;AuthentificationService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::addService(GattService&)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[6ce]"></a>AuthentificationService::AuthentificationService__sub_object(BLE&)</STRONG> (Thumb, 0 bytes, Stack size 120 bytes, .\build\main.o(i._ZN23AuthentificationServiceC1ER3BLE), UNUSED)

<P><STRONG><a name="[350]"></a>DiscoveredCharacteristic::DiscoveredCharacteristic(const DiscoveredCharacteristic&)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN24DiscoveredCharacteristicC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DiscoveredCharacteristic::DiscoveredCharacteristic(const DiscoveredCharacteristic&) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const UUID&)
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
</UL>

<P><STRONG><a name="[6cf]"></a>DiscoveredCharacteristic::DiscoveredCharacteristic__sub_object(const DiscoveredCharacteristic&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN24DiscoveredCharacteristicC1ERKS_), UNUSED)

<P><STRONG><a name="[345]"></a>nRF5xDiscoveredCharacteristic::setLastHandle(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\build\nrf5xservicediscovery.o(i._ZN29nRF5xDiscoveredCharacteristic13setLastHandleEt))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>

<P><STRONG><a name="[342]"></a>nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, .\build\nrf5xdiscoveredcharacteristic.o(i._ZN29nRF5xDiscoveredCharacteristic5setupEP15nRF5xGattClientt21ble_gatt_char_props_ttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredCharacteristics(const ble_gattc_evt_char_disc_rsp_t*)
</UL>

<P><STRONG><a name="[343]"></a>nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, .\build\nrf5xdiscoveredcharacteristic.o(i._ZN29nRF5xDiscoveredCharacteristic5setupEP15nRF5xGattClienttt21ble_gatt_char_props_ttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nRF5xDiscoveredCharacteristic::setup(nRF5xGattClient*, unsigned short, unsigned short, ble_gatt_char_props_t, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredCharacteristics(const ble_gattc_evt_char_disc_rsp_t*)
</UL>

<P><STRONG><a name="[234]"></a>nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\btle_discovery.o(i._ZN29nRF5xDiscoveredCharacteristicC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func6&rang;
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateServiceDiscovery()
</UL>

<P><STRONG><a name="[6d0]"></a>nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\btle_discovery.o(i._ZN29nRF5xDiscoveredCharacteristicC1Ev), UNUSED)

<P><STRONG><a name="[357]"></a>nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer20findRunningDiscoveryEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short) &rArr; nRF5xCharacteristicDescriptorDiscoverer::Discovery::isEmpty() const &rArr; operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&) &rArr; operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::isEmpty() const
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::getCharacteristic() const
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(unsigned short, ble_error_t)
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
</UL>

<P><STRONG><a name="[35d]"></a>nRF5xCharacteristicDescriptorDiscoverer::gattc_attr_info_discover(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer24gattc_attr_info_discoverEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::gattc_attr_info_discover(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
</UL>

<P><STRONG><a name="[35c]"></a>nRF5xCharacteristicDescriptorDiscoverer::gattc_descriptors_discover(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer26gattc_descriptors_discoverEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::gattc_descriptors_discover(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
</UL>

<P><STRONG><a name="[28d]"></a>nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)</STRONG> (Thumb, 218 bytes, Stack size 80 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer27processAttributeInformationEtRK34ble_gattc_evt_attr_info_disc_rsp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&) &rArr; nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t) &rArr; nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t) &rArr; FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::setupLong(const unsigned char*, UUID::ByteOrder_t)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::getCharacteristic() const
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::process(unsigned short, const UUID&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::gattc_descriptors_discover(unsigned short, unsigned short, unsigned short)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[28c]"></a>nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer7processEtRK29ble_gattc_evt_desc_disc_rsp_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&) &rArr; nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t) &rArr; nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t) &rArr; FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::getCharacteristic() const
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::process(unsigned short, const UUID&)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::gattc_descriptors_discover(unsigned short, unsigned short, unsigned short)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::gattc_attr_info_discover(unsigned short, unsigned short, unsigned short)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[35a]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::process(unsigned short, const UUID&)</STRONG> (Thumb, 74 bytes, Stack size 64 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9Discovery7processEtRK4UUID))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::Discovery::process(unsigned short, const UUID&) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const UUID&)
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
</UL>

<P><STRONG><a name="[35e]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t)</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9Discovery9terminateE11ble_error_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t) &rArr; FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
</UL>

<P><STRONG><a name="[68]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery()</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::isEmpty() const
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscovererC1Ev)
</UL>
<P><STRONG><a name="[6d1]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev), UNUSED)

<P><STRONG><a name="[360]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::operator =(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryaSERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::Discovery::operator =(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&) &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
</UL>

<P><STRONG><a name="[35b]"></a>nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)</STRONG> (Thumb, 78 bytes, Stack size 176 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9terminateEPNS_9DiscoveryE11ble_error_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t) &rArr; nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t) &rArr; FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::FunctionPointerWithContext(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;&)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::FunctionPointerWithContext(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;&)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::operator =(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredCharacteristic::DiscoveredCharacteristic(const DiscoveredCharacteristic&)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery()
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(unsigned short, ble_error_t)
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
</UL>

<P><STRONG><a name="[265]"></a>nRF5xCharacteristicDescriptorDiscoverer::terminate(unsigned short, ble_error_t)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9terminateEt11ble_error_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::terminate(unsigned short, ble_error_t) &rArr; nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t) &rArr; nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t) &rArr; FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[363]"></a>nRF5xCharacteristicDescriptorDiscoverer::nRF5xCharacteristicDescriptorDiscoverer()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscovererC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::nRF5xCharacteristicDescriptorDiscoverer() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getGattClient()
</UL>

<P><STRONG><a name="[6d2]"></a>nRF5xCharacteristicDescriptorDiscoverer::nRF5xCharacteristicDescriptorDiscoverer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscovererC1Ev), UNUSED)

<P><STRONG><a name="[2c7]"></a>BLE::addService(GattService&)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\build\main.o(i._ZN3BLE10addServiceER11GattService))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = BLE::addService(GattService&) &rArr; BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
</UL>

<P><STRONG><a name="[280]"></a>BLE::gattServer()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\ble.o(i._ZN3BLE10gattServerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = BLE::gattServer() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues2()
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues()
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updatetemperatureValues(unsigned char)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::addService(GattService&)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSensorValue()
</UL>

<P><STRONG><a name="[e2]"></a>BLE::processEvents()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\ble.o(i._ZN3BLE13processEventsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = BLE::processEvents() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[523]"></a>BLE::onEventsToProcess(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;&)</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, .\build\ble.o(i._ZN3BLE17onEventsToProcessERK26FunctionPointerWithContextIPNS_32OnEventsToProcessCallbackContextEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BLE::onEventsToProcess(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[365]"></a>BLE::initImplementation(FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, .\build\ble.o(i._ZN3BLE18initImplementationE26FunctionPointerWithContextIPNS_37InitializationCompleteCallbackContextEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BLE::initImplementation(FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_t BLE::init&lang;EddystoneService&rang;(T1*, void(T1::*)(BLE::InitializationCompleteCallbackContext*))
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::init(void(*)(BLE::InitializationCompleteCallbackContext*))
</UL>

<P><STRONG><a name="[2c8]"></a>BLE::signalEventsToProcess()</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, .\build\ble.o(i._ZN3BLE21signalEventsToProcessEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BLE::signalEventsToProcess()
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLEInstanceBase::signalEventsToProcess(unsigned)
</UL>

<P><STRONG><a name="[26c]"></a>BLE::gap()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\ble.o(i._ZN3BLE3gapEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectionCallback(const Gap::DisconnectionCallbackParams_t*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::correctAdvertisementPeriod(unsigned short) const
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigScanResponse()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned)
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[364]"></a>BLE::init(void(*)(BLE::InitializationCompleteCallbackContext*))</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, .\build\main.o(i._ZN3BLE4initEPFvPNS_37InitializationCompleteCallbackContextEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BLE::init(void(*)(BLE::InitializationCompleteCallbackContext*)) &rArr; BLE::initImplementation(FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::initImplementation(FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[291]"></a>BLE::Instance(unsigned)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, .\build\ble.o(i._ZN3BLE8InstanceEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = BLE::Instance(unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::BLE(unsigned)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLEInstanceBase::signalEventsToProcess(unsigned)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::init(unsigned, FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnectionCallback(const Gap::DisconnectionCallbackParams_t*)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext*)
</UL>

<P><STRONG><a name="[317]"></a>BLE::shutdown()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\ble.o(i._ZN3BLE8shutdownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = BLE::shutdown() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
</UL>

<P><STRONG><a name="[366]"></a>BLE::BLE(unsigned)</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, .\build\ble.o(i._ZN3BLEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BLE::BLE(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
</UL>

<P><STRONG><a name="[6d3]"></a>BLE::BLE__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\ble.o(i._ZN3BLEC1Ej), UNUSED)

<P><STRONG><a name="[fc]"></a>Gap::disconnect(Gap::DisconnectionReason_t)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN3Gap10disconnectENS_21DisconnectionReason_tE))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[fe]"></a>Gap::setTxPower(signed char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN3Gap10setTxPowerEa))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[fd]"></a>Gap::setDeviceName(const unsigned char*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN3Gap13setDeviceNameEPKh))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[fb]"></a>Gap::stopAdvertising()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN3Gap15stopAdvertisingEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[2e4]"></a>Gap::startAdvertising()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN3Gap16startAdvertisingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gap::startAdvertising()
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>

<P><STRONG><a name="[306]"></a>Gap::setAdvertisingType(GapAdvertisingParams::AdvertisingType_t)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(i._ZN3Gap18setAdvertisingTypeEN20GapAdvertisingParams17AdvertisingType_tE))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[267]"></a>Gap::processTimeoutEvent(Gap::TimeoutSource_t)</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, .\build\btle.o(i._ZN3Gap19processTimeoutEventENS_15TimeoutSource_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Gap::processTimeoutEvent(Gap::TimeoutSource_t) &rArr; CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::operator ()(Gap::TimeoutSource_t) const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::operator ()(Gap::TimeoutSource_t) const
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[325]"></a>Gap::accumulateScanResponse(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)</STRONG> (Thumb, 84 bytes, Stack size 64 bytes, .\build\eddystoneservice.o(i._ZN3Gap22accumulateScanResponseEN18GapAdvertisingData10DataType_tEPKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Gap::accumulateScanResponse(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char) &rArr; GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char) &rArr; GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigScanResponse()
</UL>

<P><STRONG><a name="[264]"></a>Gap::processConnectionEvent(unsigned short, Gap::Role_t, BLEProtocol::AddressType::Type, const unsigned char*, BLEProtocol::AddressType::Type, const unsigned char*, const Gap::ConnectionParams_t*)</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, .\build\btle.o(i._ZN3Gap22processConnectionEventEtNS_6Role_tEN11BLEProtocol11AddressType4TypeEPKhS3_S5_PKNS_18ConnectionParams_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Gap::processConnectionEvent(unsigned short, Gap::Role_t, BLEProtocol::AddressType::Type, const unsigned char*, BLEProtocol::AddressType::Type, const unsigned char*, const Gap::ConnectionParams_t*) &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::call(const Gap::ConnectionCallbackParams_t*)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::call(const Gap::ConnectionCallbackParams_t*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[307]"></a>Gap::setAdvertisingInterval(unsigned short)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN3Gap22setAdvertisingIntervalEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gap::setAdvertisingInterval(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[31c]"></a>Gap::clearAdvertisingPayload()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i._ZN3Gap23clearAdvertisingPayloadEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Gap::clearAdvertisingPayload() &rArr; GapAdvertisingData::clear()
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
</UL>

<P><STRONG><a name="[31e]"></a>Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)</STRONG> (Thumb, 84 bytes, Stack size 64 bytes, .\build\eddystoneservice.o(i._ZN3Gap28accumulateAdvertisingPayloadEN18GapAdvertisingData10DataType_tEPKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char) &rArr; GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char) &rArr; GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
</UL>

<P><STRONG><a name="[31d]"></a>Gap::accumulateAdvertisingPayload(unsigned char)</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, .\build\eddystoneservice.o(i._ZN3Gap28accumulateAdvertisingPayloadEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = Gap::accumulateAdvertisingPayload(unsigned char) &rArr; GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char) &rArr; GapAdvertisingData::addField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::updateField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char, unsigned char*) &rArr; GapAdvertisingData::appendField(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::addData(GapAdvertisingData::DataType_t, const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupEddystoneConfigAdvertisements()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateAdvertisementPacket(const unsigned char*, unsigned)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
</UL>

<P><STRONG><a name="[ff]"></a>Gap::reset()</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, .\build\nrf5xn.o(i._ZN3Gap5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Gap::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::call(const Gap*)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::clear()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear()
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::clear()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::clear()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::clear()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;bool&rang;::FunctionPointerWithContext(void(*)(bool))
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::FunctionPointerWithContext(void(*)(const Gap::AdvertisementCallbackParams_t*))
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[370]"></a>Gap::Gap__sub_object()</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN3GapC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Gap::Gap__sub_object() &rArr; GapScanningParams::GapScanningParams(unsigned short, unsigned short, unsigned short, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapScanningParams::GapScanningParams(unsigned short, unsigned short, unsigned short, bool)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::clear()
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;bool&rang;::FunctionPointerWithContext(void(*)(bool))
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::FunctionPointerWithContext(void(*)(const Gap::AdvertisementCallbackParams_t*))
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingParams::GapAdvertisingParams(GapAdvertisingParams::AdvertisingType_t, unsigned short, unsigned short)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::GapAdvertisingData()
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::nRF5xn()
</UL>

<P><STRONG><a name="[341]"></a>UUID::setupLong(const unsigned char*, UUID::ByteOrder_t)</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN4UUID9setupLongEPKhNS_11ByteOrder_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UUID::setupLong(const unsigned char*, UUID::ByteOrder_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::processDiscoverUUIDResponse(const ble_gattc_evt_t*)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::UUID(const unsigned char*, UUID::ByteOrder_t)
</UL>

<P><STRONG><a name="[30d]"></a>UUID::UUID(const unsigned char*, UUID::ByteOrder_t)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN4UUIDC1EPKhNS_11ByteOrder_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UUID::UUID(const unsigned char*, UUID::ByteOrder_t) &rArr; UUID::setupLong(const unsigned char*, UUID::ByteOrder_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::setupLong(const unsigned char*, UUID::ByteOrder_t)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[6d4]"></a>UUID::UUID__sub_object(const unsigned char*, UUID::ByteOrder_t)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(i._ZN4UUIDC1EPKhNS_11ByteOrder_tE), UNUSED)

<P><STRONG><a name="[2c4]"></a>UUID::UUID(const UUID&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN4UUIDC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredCharacteristic::DiscoveredCharacteristic(const DiscoveredCharacteristic&)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::process(unsigned short, const UUID&)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattService::GattService(const UUID&, GattCharacteristic**, unsigned)
</UL>

<P><STRONG><a name="[6d5]"></a>UUID::UUID__sub_object(const UUID&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZN4UUIDC1ERKS_), UNUSED)

<P><STRONG><a name="[2c5]"></a>UUID::UUID(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\btle_discovery.o(i._ZN4UUIDC1Et))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::setupDiscoveredServices(const ble_gattc_evt_prim_srvc_disc_rsp_t*)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscoveredService::DiscoveredService()
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
</UL>

<P><STRONG><a name="[6d6]"></a>UUID::UUID__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\btle_discovery.o(i._ZN4UUIDC1Et), UNUSED)

<P><STRONG><a name="[349]"></a>UUID::UUID()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN4UUIDC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
</UL>

<P><STRONG><a name="[6d7]"></a>UUID::UUID__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN4UUIDC1Ev), UNUSED)

<P><STRONG><a name="[372]"></a>__rw::__rw_throw(int, ...)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZN4__rw10__rw_throwEiz))
<BR><BR>[Stack]<UL><LI>Max Depth = 812 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[636]"></a>__rw::__rw_file_t::_C_get_mode(std::__FILE*)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw11__rw_file_t11_C_get_modeEPSt6__FILE))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long)
</UL>

<P><STRONG><a name="[375]"></a>__rw::__rw_file_t::_C_seek(long, int)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw11__rw_file_t7_C_seekEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _sys_istty &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
</UL>

<P><STRONG><a name="[376]"></a>__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw11__rw_file_t8_C_writeEPKvjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = __rw::__rw_file_t::_C_write(const void*, unsigned, unsigned) &rArr; fwrite &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[377]"></a>__rw::__rw_allocate(unsigned, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwalloc.o)(i._ZN4__rw13__rw_allocateEji))
<BR><BR>[Stack]<UL><LI>Max Depth = 828 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[378]"></a>__rw::__rw_deallocate(void*, unsigned, int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwalloc.o)(i._ZN4__rw15__rw_deallocateEPvji))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;unsigned char&rang;::deallocate(unsigned char*, unsigned)
</UL>

<P><STRONG><a name="[129]"></a>__rw::__rw_facet_base::_C_initfacet(const std::locale&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale))
<BR>[Address Reference Count : 5]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
<LI> ios.o(.constdata__ZTVNSt6locale5facetE)
<LI> ios.o(.constdata__ZTVSt5ctypeIwE)
<LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
<LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[379]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[6d8]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const char*, unsigned, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw15__rw_locale_impC1EPKcjj), UNUSED)

<P><STRONG><a name="[37c]"></a>__rw::__rw_locale_imp::~__rw_locale_imp()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_locale_impD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>

<P><STRONG><a name="[6d9]"></a>__rw::__rw_locale_imp::~__rw_locale_imp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZN4__rw15__rw_locale_impD1Ev), UNUSED)

<P><STRONG><a name="[37f]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[6da]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale__sub_object(const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci), UNUSED)

<P><STRONG><a name="[381]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw21__rw_use_c_lib_localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[6db]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZN4__rw21__rw_use_c_lib_localeD1Ev), UNUSED)

<P><STRONG><a name="[1b]"></a>__rw::__rw_throw_exception_noex(int, char*)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwthrowproc_impl_noex.o)(i._ZN4__rw25__rw_throw_exception_noexEiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __rw::__rw_throw_exception_noex(int, char*) &rArr; fprintf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_noex.o(.data)
</UL>
<P><STRONG><a name="[2a9]"></a>__rw::__catfind(__rw::__rw_cat*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i._ZN4__rw9__catfindEPNS_8__rw_catE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[382]"></a>mbed::DigitalOut::DigitalOut(PinName, int)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\build\main.o(i._ZN4mbed10DigitalOutC1E7PinNamei))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = mbed::DigitalOut::DigitalOut(PinName, int) &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_out_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_pc
</UL>

<P><STRONG><a name="[6dc]"></a>mbed::DigitalOut::DigitalOut__sub_object(PinName, int)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\main.o(i._ZN4mbed10DigitalOutC1E7PinNamei), UNUSED)

<P><STRONG><a name="[26a]"></a>mbed::DigitalOut::operator =(int)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, .\build\main.o(i._ZN4mbed10DigitalOutaSEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::DigitalOut::operator =(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[269]"></a>mbed::DigitalOut::operator int()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\main.o(i._ZN4mbed10DigitalOutcviEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::DigitalOut::operator int()
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[114]"></a>mbed::FileHandle::size()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, .\build\filehandle.o(i._ZN4mbed10FileHandle4sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::FileHandle::size()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> filehandle.o(.constdata__ZTVN4mbed10FileHandleE)
<LI> stream.o(.constdata__ZTVN4mbed8FileLikeE)
</UL>
<P><STRONG><a name="[113]"></a>mbed::FileHandle::isatty()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\filehandle.o(i._ZN4mbed10FileHandle6isattyEv))
<BR>[Address Reference Count : 2]<UL><LI> filehandle.o(.constdata__ZTVN4mbed10FileHandleE)
<LI> stream.o(.constdata__ZTVN4mbed8FileLikeE)
</UL>
<P><STRONG><a name="[385]"></a>mbed::SerialBase::_base_putc(int)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\serialbase.o(i._ZN4mbed10SerialBase10_base_putcEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mbed::SerialBase::_base_putc(int) &rArr; serial_putc &rArr; serial_writable
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::_putc(int)
</UL>

<P><STRONG><a name="[6f]"></a>mbed::SerialBase::_irq_handler(unsigned, SerialIrq)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, .\build\serialbase.o(i._ZN4mbed10SerialBase12_irq_handlerEj9SerialIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mbed::SerialBase::_irq_handler(unsigned, SerialIrq)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i)
</UL>
<P><STRONG><a name="[d2]"></a>mbed::SerialBase::interrupt_handler_asynch()</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, .\build\serialbase.o(i._ZN4mbed10SerialBase24interrupt_handler_asynchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mbed::SerialBase::interrupt_handler_asynch() &rArr; mbed::Callback&lang;void(int)&rang;::call(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_irq_handler_asynch
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(int)&rang;::operator bool() const
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(int)&rang;::call(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(.constdata)
</UL>
<P><STRONG><a name="[38a]"></a>mbed::SerialBase::SerialBase(PinName, PinName, int)</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, .\build\serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = mbed::SerialBase::SerialBase(PinName, PinName, int) &rArr; serial_init &rArr; internal_set_hwfc &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::Callback(void(*)())
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_baud
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_irq_handler
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CThunk&lang;mbed::SerialBase&rang;::init(mbed::SerialBase*, void(mbed::SerialBase::*)(void*), void*)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(int)&rang;::Callback(void(*)(int))
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::operator =(const mbed::Callback&lang;void()&rang;&)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::Serial(PinName, PinName, const char*, int)
</UL>

<P><STRONG><a name="[6dd]"></a>mbed::SerialBase::SerialBase__sub_object(PinName, PinName, int)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, .\build\serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i), UNUSED)

<P><STRONG><a name="[38f]"></a>mbed::TimerEvent::insert_absolute(unsigned long long)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, .\build\timerevent.o(i._ZN4mbed10TimerEvent15insert_absoluteEy))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_insert_event_us
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::setup(unsigned long long)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::handler()
</UL>

<P><STRONG><a name="[70]"></a>mbed::TimerEvent::irq(unsigned)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\timerevent.o(i._ZN4mbed10TimerEvent3irqEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::TimerEvent::irq(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timerevent.o(i._ZN4mbed10TimerEventC2Ev)
</UL>
<P><STRONG><a name="[391]"></a>mbed::TimerEvent::remove()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, .\build\timerevent.o(i._ZN4mbed10TimerEvent6removeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mbed::TimerEvent::remove() &rArr; ticker_remove_event &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_remove_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::setup(unsigned long long)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::detach()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::~TimerEvent__sub_object()
</UL>

<P><STRONG><a name="[278]"></a>mbed::TimerEvent::TimerEvent__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\timerevent.o(i._ZN4mbed10TimerEventC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_us_ticker_data
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_set_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::Ticker()
</UL>

<P><STRONG><a name="[6de]"></a>mbed::TimerEvent::~TimerEvent()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\timerevent.o(i._ZN4mbed10TimerEventD2Ev), UNUSED)

<P><STRONG><a name="[115]"></a>mbed::TimerEvent::~TimerEvent__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\timerevent.o(i._ZN4mbed10TimerEventD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mbed::TimerEvent::~TimerEvent__sub_object() &rArr; mbed::TimerEvent::remove() &rArr; ticker_remove_event &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::remove()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timerevent.o(.constdata__ZTVN4mbed10TimerEventE)
</UL>
<P><STRONG><a name="[395]"></a>mbed::mbed_fdopen(mbed::FileHandle*, const char*)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, .\build\mbed_retarget.o(i._ZN4mbed11mbed_fdopenEPNS_10FileHandleEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = mbed::mbed_fdopen(mbed::FileHandle*, const char*) &rArr; fopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::mbed_set_unbuffered_stream(std::__FILE*)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::fdopen(mbed::FileHandle*, const char*)
</UL>

<P><STRONG><a name="[397]"></a>mbed::remove_filehandle(mbed::FileHandle*)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._ZN4mbed17remove_filehandleEPNS_10FileHandleE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mbed::remove_filehandle(mbed::FileHandle*) &rArr; SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::~FileBase()
</UL>

<P><STRONG><a name="[396]"></a>mbed::mbed_set_unbuffered_stream(std::__FILE*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\mbed_retarget.o(i._ZN4mbed26mbed_set_unbuffered_streamEPSt6__FILE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mbed::mbed_set_unbuffered_stream(std::__FILE*) &rArr; setbuf &rArr; setvbuf &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::mbed_fdopen(mbed::FileHandle*, const char*)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::Stream__sub_object(const char*)
</UL>

<P><STRONG><a name="[39b]"></a>mbed::Timer::read_high_resolution_us()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\timer.o(i._ZN4mbed5Timer23read_high_resolution_usEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mbed::Timer::read_high_resolution_us() &rArr; mbed::Timer::slicetime() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::slicetime()
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_ms()
</UL>

<P><STRONG><a name="[283]"></a>mbed::Timer::reset()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, .\build\timer.o(i._ZN4mbed5Timer5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mbed::Timer::reset() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_read_us
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::Timer()
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_update()
</UL>

<P><STRONG><a name="[279]"></a>mbed::Timer::start()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\timer.o(i._ZN4mbed5Timer5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mbed::Timer::start() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_read_us
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::eddystoneConstructorHelper(const signed char(&)[4], const signed char(&)[4], unsigned)
</UL>

<P><STRONG><a name="[282]"></a>mbed::Timer::read_ms()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\timer.o(i._ZN4mbed5Timer7read_msEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mbed::Timer::read_ms() &rArr; mbed::Timer::read_high_resolution_us() &rArr; mbed::Timer::slicetime() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_high_resolution_us()
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_update()
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>

<P><STRONG><a name="[39c]"></a>mbed::Timer::slicetime()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\timer.o(i._ZN4mbed5Timer9slicetimeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mbed::Timer::slicetime() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_read_us
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_high_resolution_us()
</UL>

<P><STRONG><a name="[277]"></a>mbed::Timer::Timer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\timer.o(i._ZN4mbed5TimerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mbed::Timer::Timer() &rArr; mbed::Timer::reset() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::reset()
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_us_ticker_data
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6df]"></a>mbed::Timer::Timer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\timer.o(i._ZN4mbed5TimerC1Ev), UNUSED)

<P><STRONG><a name="[116]"></a>mbed::Serial::lock()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\serial.o(i._ZN4mbed6Serial4lockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mbed::Serial::lock() &rArr; rtos::Mutex::lock(unsigned) &rArr; osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-152} to mbed::Serial::lock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
</UL>
<P><STRONG><a name="[118]"></a>mbed::Serial::_putc(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\serial.o(i._ZN4mbed6Serial5_putcEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mbed::Serial::_putc(int) &rArr; mbed::SerialBase::_base_putc(int) &rArr; serial_putc &rArr; serial_writable
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::_base_putc(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-152} to mbed::Serial::_putc(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
</UL>
<P><STRONG><a name="[117]"></a>mbed::Serial::unlock()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\serial.o(i._ZN4mbed6Serial6unlockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mbed::Serial::unlock() &rArr; rtos::Mutex::unlock() &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-152} to mbed::Serial::unlock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
</UL>
<P><STRONG><a name="[39f]"></a>mbed::Serial::Serial(PinName, PinName, const char*, int)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, .\build\serial.o(i._ZN4mbed6SerialC1E7PinNameS1_PKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = mbed::Serial::Serial(PinName, PinName, const char*, int) &rArr; mbed::Stream::Stream__sub_object(const char*) &rArr; mbed::fdopen(mbed::FileHandle*, const char*) &rArr; mbed::mbed_fdopen(mbed::FileHandle*, const char*) &rArr; fopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::Mutex()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::Stream__sub_object(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_pc
</UL>

<P><STRONG><a name="[6e0]"></a>mbed::Serial::Serial__sub_object(PinName, PinName, const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\serial.o(i._ZN4mbed6SerialC1E7PinNameS1_PKci), UNUSED)

<P><STRONG><a name="[77]"></a>mbed::Serial::~Serial()</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, .\build\serial.o(i._ZN4mbed6SerialD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = mbed::Serial::~Serial() &rArr; mbed::Stream::~Stream__sub_object() &rArr; fclose &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::~Mutex()
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(int)&rang;::~Callback()
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::~Stream__sub_object()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Address Reference Count : 2]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
<LI> main.o(i.__sti___8_main_cpp_pc)
</UL>
<P><STRONG><a name="[6e1]"></a>mbed::Serial::~Serial__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\serial.o(i._ZN4mbed6SerialD1Ev), UNUSED)

<P><STRONG><a name="[122]"></a>mbed::Stream::lock()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\stream.o(i._ZN4mbed6Stream4lockEv))
<BR>[Address Reference Count : 1]<UL><LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[11a]"></a>mbed::Stream::seek(long, int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\stream.o(i._ZN4mbed6Stream4seekEli))
<BR>[Address Reference Count : 2]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
<LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[11d]"></a>mbed::Stream::size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\stream.o(i._ZN4mbed6Stream4sizeEv))
<BR>[Address Reference Count : 2]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
<LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[11b]"></a>mbed::Stream::close()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\stream.o(i._ZN4mbed6Stream5closeEv))
<BR>[Address Reference Count : 2]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
<LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[119]"></a>mbed::Stream::write(const void*, unsigned)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, .\build\stream.o(i._ZN4mbed6Stream5writeEPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mbed::Stream::write(const void*, unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
<LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[11c]"></a>mbed::Stream::isatty()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\stream.o(i._ZN4mbed6Stream6isattyEv))
<BR>[Address Reference Count : 2]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
<LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[123]"></a>mbed::Stream::unlock()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\stream.o(i._ZN4mbed6Stream6unlockEv))
<BR>[Address Reference Count : 1]<UL><LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[3a0]"></a>mbed::Stream::Stream__sub_object(const char*)</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, .\build\stream.o(i._ZN4mbed6StreamC2EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = mbed::Stream::Stream__sub_object(const char*) &rArr; mbed::fdopen(mbed::FileHandle*, const char*) &rArr; mbed::mbed_fdopen(mbed::FileHandle*, const char*) &rArr; fopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::fdopen(mbed::FileHandle*, const char*)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::FileBase(const char*, mbed::PathType)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::mbed_set_unbuffered_stream(std::__FILE*)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::Serial(PinName, PinName, const char*, int)
</UL>

<P><STRONG><a name="[6e2]"></a>mbed::Stream::~Stream()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\stream.o(i._ZN4mbed6StreamD2Ev), UNUSED)

<P><STRONG><a name="[121]"></a>mbed::Stream::~Stream__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, .\build\stream.o(i._ZN4mbed6StreamD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = mbed::Stream::~Stream__sub_object() &rArr; fclose &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileLike::~FileLike__sub_object()
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::~Serial()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stream.o(.constdata__ZTVN4mbed6StreamE)
</UL>
<P><STRONG><a name="[3a7]"></a>mbed::Ticker::setup(unsigned long long)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, .\build\ticker.o(i._ZN4mbed6Ticker5setupEy))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_read_us
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::remove()
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::insert_absolute(unsigned long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long)
</UL>

<P><STRONG><a name="[3a8]"></a>mbed::Ticker::detach()</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, .\build\ticker.o(i._ZN4mbed6Ticker6detachEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mbed::Ticker::detach() &rArr; mbed::TimerEvent::remove() &rArr; ticker_remove_event &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::remove()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>

<P><STRONG><a name="[124]"></a>mbed::Ticker::handler()</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, .\build\ticker.o(i._ZN4mbed6Ticker7handlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mbed::Ticker::handler() &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::insert_absolute(unsigned long long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ticker.o(.constdata__ZTVN4mbed6TickerE)
</UL>
<P><STRONG><a name="[27a]"></a>mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long)</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, .\build\equeue_mbed.o(i._ZN4mbed6Ticker9attach_usENS_8CallbackIFvvEEEy))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::setup(unsigned long long)
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
</UL>

<P><STRONG><a name="[3a9]"></a>mbed::Ticker::Ticker()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN4mbed6TickerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mbed::Ticker::Ticker() &rArr; mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::TimerEvent__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::nRF5xn()
</UL>

<P><STRONG><a name="[6e3]"></a>mbed::Ticker::Ticker__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN4mbed6TickerC1Ev), UNUSED)

<P><STRONG><a name="[3a6]"></a>mbed::fdopen(mbed::FileHandle*, const char*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\filehandle.o(i._ZN4mbed6fdopenEPNS_10FileHandleEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = mbed::fdopen(mbed::FileHandle*, const char*) &rArr; mbed::mbed_fdopen(mbed::FileHandle*, const char*) &rArr; fopen &rArr; _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::mbed_fdopen(mbed::FileHandle*, const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::Stream__sub_object(const char*)
</UL>

<P><STRONG><a name="[125]"></a>mbed::Timeout::handler()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\timeout.o(i._ZN4mbed7Timeout7handlerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::Timeout::handler()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timeout.o(.constdata__ZTVN4mbed7TimeoutE)
</UL>
<P><STRONG><a name="[3ac]"></a>mbed::FileBase::getPathType()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\filebase.o(i._ZN4mbed8FileBase11getPathTypeEv))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::~FileBase()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::isFile()
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::isFileSystem()
</UL>

<P><STRONG><a name="[3aa]"></a>mbed::FileBase::lookup(const char*, unsigned)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, .\build\filebase.o(i._ZN4mbed8FileBase6lookupEPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mbed::FileBase::lookup(const char*, unsigned) &rArr; SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::FilePath(const char*)
</UL>

<P><STRONG><a name="[3a5]"></a>mbed::FileBase::FileBase(const char*, mbed::PathType)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, .\build\filebase.o(i._ZN4mbed8FileBaseC1EPKcNS_8PathTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mbed::FileBase::FileBase(const char*, mbed::PathType) &rArr; SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::Stream__sub_object(const char*)
</UL>

<P><STRONG><a name="[6e4]"></a>mbed::FileBase::FileBase__sub_object(const char*, mbed::PathType)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\filebase.o(i._ZN4mbed8FileBaseC1EPKcNS_8PathTypeE), UNUSED)

<P><STRONG><a name="[126]"></a>mbed::FileBase::~FileBase()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, .\build\filebase.o(i._ZN4mbed8FileBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mbed::FileBase::~FileBase() &rArr; mbed::remove_filehandle(mbed::FileHandle*) &rArr; SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::remove_filehandle(mbed::FileHandle*)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::getPathType()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileLike::~FileLike__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> filebase.o(.constdata__ZTVN4mbed8FileBaseE)
</UL>
<P><STRONG><a name="[6e5]"></a>mbed::FileBase::~FileBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\filebase.o(i._ZN4mbed8FileBaseD1Ev), UNUSED)

<P><STRONG><a name="[6e6]"></a>mbed::FileLike::~FileLike()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\stream.o(i._ZN4mbed8FileLikeD2Ev), UNUSED)

<P><STRONG><a name="[127]"></a>mbed::FileLike::~FileLike__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, .\build\stream.o(i._ZN4mbed8FileLikeD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mbed::FileLike::~FileLike__sub_object() &rArr; mbed::FileBase::~FileBase() &rArr; mbed::remove_filehandle(mbed::FileHandle*) &rArr; SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::~FileBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::~Stream__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stream.o(.constdata__ZTVN4mbed8FileLikeE)
</UL>
<P><STRONG><a name="[3ad]"></a>mbed::FilePath::fileSystem()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, .\build\filepath.o(i._ZN4mbed8FilePath10fileSystemEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::FilePath::fileSystem() &rArr; mbed::FilePath::isFileSystem()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::isFileSystem()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[3ae]"></a>mbed::FilePath::isFileSystem()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\filepath.o(i._ZN4mbed8FilePath12isFileSystemEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::FilePath::isFileSystem()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::getPathType()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::fileSystem()
</UL>

<P><STRONG><a name="[3af]"></a>mbed::FilePath::file()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, .\build\filepath.o(i._ZN4mbed8FilePath4fileEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::FilePath::file() &rArr; mbed::FilePath::isFile()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::isFile()
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[420]"></a>mbed::FilePath::exists()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\filepath.o(i._ZN4mbed8FilePath6existsEv))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[3b0]"></a>mbed::FilePath::isFile()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\filepath.o(i._ZN4mbed8FilePath6isFileEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::FilePath::isFile()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::getPathType()
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::file()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[421]"></a>mbed::FilePath::fileName()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\filepath.o(i._ZN4mbed8FilePath8fileNameEv))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[3b1]"></a>mbed::FilePath::FilePath(const char*)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\filepath.o(i._ZN4mbed8FilePathC1EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mbed::FilePath::FilePath(const char*) &rArr; mbed::FileBase::lookup(const char*, unsigned) &rArr; SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::lookup(const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[6e7]"></a>mbed::FilePath::FilePath__sub_object(const char*)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\filepath.o(i._ZN4mbed8FilePathC1EPKc), UNUSED)

<P><STRONG><a name="[3b2]"></a>rtos::Mutex::constructor(const char*)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, .\build\mutex.o(i._ZN4rtos5Mutex11constructorEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::Mutex()
</UL>

<P><STRONG><a name="[399]"></a>rtos::Mutex::lock(unsigned)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\mutex.o(i._ZN4rtos5Mutex4lockEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtos::Mutex::lock(unsigned) &rArr; osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::~FileBase()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::remove_filehandle(mbed::FileHandle*)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::FileBase(const char*, mbed::PathType)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::lookup(const char*, unsigned)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::lock()
</UL>

<P><STRONG><a name="[39a]"></a>rtos::Mutex::unlock()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\mutex.o(i._ZN4rtos5Mutex6unlockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtos::Mutex::unlock() &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::~FileBase()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::remove_filehandle(mbed::FileHandle*)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::FileBase(const char*, mbed::PathType)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::lookup(const char*, unsigned)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::unlock()
</UL>

<P><STRONG><a name="[3a1]"></a>rtos::Mutex::Mutex()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\mutex.o(i._ZN4rtos5MutexC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::constructor(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::Serial(PinName, PinName, const char*, int)
</UL>

<P><STRONG><a name="[6e8]"></a>rtos::Mutex::Mutex__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\mutex.o(i._ZN4rtos5MutexC1Ev), UNUSED)

<P><STRONG><a name="[3a2]"></a>rtos::Mutex::~Mutex()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\mutex.o(i._ZN4rtos5MutexD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtos::Mutex::~Mutex() &rArr; osMutexDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::~Serial()
</UL>

<P><STRONG><a name="[6e9]"></a>rtos::Mutex::~Mutex__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\mutex.o(i._ZN4rtos5MutexD1Ev), UNUSED)

<P><STRONG><a name="[3b7]"></a>rtos::Thread::wait(unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\thread.o(i._ZN4rtos6Thread4waitEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtos::Thread::wait(unsigned) &rArr; osDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_us
</UL>

<P><STRONG><a name="[2ec]"></a>events::EventQueue::cancel(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\eventqueue.o(i._ZN6events10EventQueue6cancelEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = events::EventQueue::cancel(int) &rArr; equeue_cancel &rArr; equeue_dealloc &rArr; equeue_mem_dealloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::stopBeaconService()
</UL>

<P><STRONG><a name="[3ba]"></a>events::EventQueue::dispatch(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\eventqueue.o(i._ZN6events10EventQueue8dispatchEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = events::EventQueue::dispatch(int) &rArr; equeue_dispatch &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3bc]"></a>events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i._ZN6events10EventQueue9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES5_ED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10() &rArr; mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void events::EventQueue::function_dtor&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2)
</UL>

<P><STRONG><a name="[6ea]"></a>events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i._ZN6events10EventQueue9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES5_ED1Ev), UNUSED)

<P><STRONG><a name="[3bd]"></a>events::EventQueue::EventQueue(unsigned, unsigned char*)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, .\build\eventqueue.o(i._ZN6events10EventQueueC1EjPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = events::EventQueue::EventQueue(unsigned, unsigned char*) &rArr; equeue_create &rArr; equeue_create_inplace &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create_inplace
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_pc
</UL>

<P><STRONG><a name="[6eb]"></a>events::EventQueue::EventQueue__sub_object(unsigned, unsigned char*)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\eventqueue.o(i._ZN6events10EventQueueC1EjPh), UNUSED)

<P><STRONG><a name="[78]"></a>events::EventQueue::~EventQueue()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\eventqueue.o(i._ZN6events10EventQueueD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = events::EventQueue::~EventQueue() &rArr; equeue_destroy &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_destroy
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(int)&rang;::~Callback()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.__sti___8_main_cpp_pc)
</UL>
<P><STRONG><a name="[6ec]"></a>events::EventQueue::~EventQueue__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\eventqueue.o(i._ZN6events10EventQueueD1Ev), UNUSED)

<P><STRONG><a name="[105]"></a>nRF5xn::getGattClient()</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn13getGattClientEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = nRF5xn::getGattClient() &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::nRF5xCharacteristicDescriptorDiscoverer()
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::GattClient()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[104]"></a>nRF5xn::getGattServer()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn13getGattServerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = nRF5xn::getGattServer() &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::nRF5xGattServer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[107]"></a>nRF5xn::processEvents()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn13processEventsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nRF5xn::processEvents() &rArr; intern_softdevice_events_execute &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[106]"></a>nRF5xn::getSecurityManager()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn18getSecurityManagerEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = nRF5xn::getSecurityManager() &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xSecurityManager::nRF5xSecurityManager()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[100]"></a>nRF5xn::init(unsigned, FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn4initEj26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = nRF5xn::init(unsigned, FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;) &rArr; btle_init &rArr; pm_init &rArr; gcm_init &rArr; smd_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::call(BLE::InitializationCompleteCallbackContext*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[103]"></a>nRF5xn::getGap()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn6getGapEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[25e]"></a>nRF5xn::Instance(unsigned)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn8InstanceEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nRF5xn::Instance(unsigned) &rArr; getDeviceInstance() &rArr; nRF5xn::nRF5xn() &rArr; mbed::Ticker::Ticker() &rArr; mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDeviceInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;signalEvent()
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createBLEInstance()
</UL>

<P><STRONG><a name="[102]"></a>nRF5xn::shutdown()</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN6nRF5xn8shutdownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = nRF5xn::shutdown() &rArr; nRF5xGap::reset() &rArr; Gap::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_reset_128bits_uuid_table
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::reset()
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_sd_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[27e]"></a>nRF5xn::nRF5xn()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN6nRF5xnC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = nRF5xn::nRF5xn() &rArr; mbed::Ticker::Ticker() &rArr; mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::Ticker()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDeviceInstance()
</UL>

<P><STRONG><a name="[6ed]"></a>nRF5xn::nRF5xn__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\nrf5xn.o(i._ZN6nRF5xnC1Ev), UNUSED)

<P><STRONG><a name="[5d]"></a>nRF5xn::~nRF5xn()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN6nRF5xnD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = nRF5xn::~nRF5xn() &rArr; nRF5xGap::~nRF5xGap() &rArr; mbed::Ticker::detach() &rArr; mbed::TimerEvent::remove() &rArr; ticker_remove_event &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLEInstanceBase::~BLEInstanceBase__sub_object()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> nrf5xn.o(i._Z17getDeviceInstancev)
<LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[6ee]"></a>nRF5xn::~nRF5xn__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._ZN6nRF5xnD1Ev), UNUSED)

<P><STRONG><a name="[2f9]"></a>iBeacon::GettxPower()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\ibeacon.o(i._ZN7iBeacon10GettxPowerEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[2e1]"></a>iBeacon::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, .\build\ibeacon.o(i._ZN7iBeacon10setiBeaconEPhttht))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = iBeacon::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short) &rArr; iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[2fd]"></a>iBeacon::GetrawFrame()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\ibeacon.o(i._ZN7iBeacon11GetrawFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[2f8]"></a>iBeacon::GetcompanyID()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\ibeacon.o(i._ZN7iBeacon12GetcompanyIDEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[2f6]"></a>iBeacon::GetmajorNumber()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\ibeacon.o(i._ZN7iBeacon14GetmajorNumberEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[2f7]"></a>iBeacon::GetminorNumber()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\ibeacon.o(i._ZN7iBeacon14GetminorNumberEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[305]"></a>iBeacon::constructiBeacon(unsigned char*)</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, .\build\ibeacon.o(i._ZN7iBeacon16constructiBeaconEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iBeacon::constructiBeacon(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[3c7]"></a>iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, .\build\ibeacon.o(i._ZN7iBeacon7PayloadC1EPhttht))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_iBeacon_cpp_99d959d6___Z7__REV16j
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::iBeacon()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[6ef]"></a>iBeacon::Payload::Payload__sub_object(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, .\build\ibeacon.o(i._ZN7iBeacon7PayloadC1EPhttht), UNUSED)

<P><STRONG><a name="[32a]"></a>iBeacon::iBeacon()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\ibeacon.o(i._ZN7iBeaconC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = iBeacon::iBeacon() &rArr; iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iBeacon::Payload::Payload(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6f0]"></a>iBeacon::iBeacon__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\ibeacon.o(i._ZN7iBeaconC1Ev), UNUSED)

<P><STRONG><a name="[2de]"></a>TLMFrame::setTLMData(unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZN8TLMFrame10setTLMDataEh))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setTLMData(unsigned char)
</UL>

<P><STRONG><a name="[2e5]"></a>TLMFrame::updatePduCount()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZN8TLMFrame14updatePduCountEv))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>

<P><STRONG><a name="[2f3]"></a>TLMFrame::constructTLMFrame(unsigned char*)</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, .\build\tlmframe.o(i._ZN8TLMFrame17constructTLMFrameEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TLMFrame::constructTLMFrame(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>

<P><STRONG><a name="[2f2]"></a>TLMFrame::updateTimeSinceBoot(unsigned)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZN8TLMFrame19updateTimeSinceBootEj))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>

<P><STRONG><a name="[2f1]"></a>TLMFrame::updateBatteryVoltage(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZN8TLMFrame20updateBatteryVoltageEt))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>

<P><STRONG><a name="[2ef]"></a>TLMFrame::updateBeaconTemperature(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZN8TLMFrame23updateBeaconTemperatureEt))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>

<P><STRONG><a name="[329]"></a>TLMFrame::TLMFrame(unsigned char, unsigned short, unsigned short, unsigned, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\tlmframe.o(i._ZN8TLMFrameC1Ehttjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TLMFrame::TLMFrame(unsigned char, unsigned short, unsigned short, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6f1]"></a>TLMFrame::TLMFrame__sub_object(unsigned char, unsigned short, unsigned short, unsigned, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\tlmframe.o(i._ZN8TLMFrameC1Ehttjj), UNUSED)

<P><STRONG><a name="[2df]"></a>UIDFrame::setUIDData(const unsigned char(&)[10], const unsigned char(&)[6])</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrame10setUIDDataERA10_KhRA6_S0_))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setUIDData(const unsigned char(&)[10], const unsigned char(&)[6])
</UL>

<P><STRONG><a name="[2fc]"></a>UIDFrame::getUIDInstanceID()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrame16getUIDInstanceIDEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[302]"></a>UIDFrame::constructUIDFrame(unsigned char*, signed char)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, .\build\uidframe.o(i._ZN8UIDFrame17constructUIDFrameEPha))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UIDFrame::constructUIDFrame(unsigned char*, signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2fb]"></a>UIDFrame::getUIDNamespaceID()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrame17getUIDNamespaceIDEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[32d]"></a>UIDFrame::UIDFrame(const unsigned char*, const unsigned char*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrameC1EPKhS1_))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6f2]"></a>UIDFrame::UIDFrame__sub_object(const unsigned char*, const unsigned char*)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrameC1EPKhS1_), UNUSED)

<P><STRONG><a name="[328]"></a>UIDFrame::UIDFrame()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrameC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6f3]"></a>UIDFrame::UIDFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZN8UIDFrameC1Ev), UNUSED)

<P><STRONG><a name="[2e0]"></a>URLFrame::setURLData(const char*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\urlframe.o(i._ZN8URLFrame10setURLDataEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = URLFrame::setURLData(const char*) &rArr; URLFrame::encodeURL(const char*) &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::encodeURL(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setURLData(const char*)
</UL>

<P><STRONG><a name="[300]"></a>URLFrame::constructURLFrame(unsigned char*, signed char)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\urlframe.o(i._ZN8URLFrame17constructURLFrameEPha))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = URLFrame::constructURLFrame(unsigned char*, signed char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2fa]"></a>URLFrame::getEncodedURLData()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\urlframe.o(i._ZN8URLFrame17getEncodedURLDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues()
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[31f]"></a>URLFrame::setEncodedURLData(const unsigned char*, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\urlframe.o(i._ZN8URLFrame17setEncodedURLDataEPKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = URLFrame::setEncodedURLData(const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[3c9]"></a>URLFrame::encodeURL(const char*)</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, .\build\urlframe.o(i._ZN8URLFrame9encodeURLEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = URLFrame::encodeURL(const char*) &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;URLFrame::setURLData(const char*)
</UL>

<P><STRONG><a name="[32c]"></a>URLFrame::URLFrame(unsigned char*, unsigned char)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\urlframe.o(i._ZN8URLFrameC1EPhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = URLFrame::URLFrame(unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6f4]"></a>URLFrame::URLFrame__sub_object(unsigned char*, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\urlframe.o(i._ZN8URLFrameC1EPhh), UNUSED)

<P><STRONG><a name="[327]"></a>URLFrame::URLFrame()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\urlframe.o(i._ZN8URLFrameC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = URLFrame::URLFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[6f5]"></a>URLFrame::URLFrame__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\urlframe.o(i._ZN8URLFrameC1Ev), UNUSED)

<P><STRONG><a name="[10d]"></a>nRF5xGap::disconnect(Gap::DisconnectionReason_t)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap10disconnectEN3Gap21DisconnectionReason_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nRF5xGap::disconnect(Gap::DisconnectionReason_t)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[10c]"></a>nRF5xGap::disconnect(unsigned short, Gap::DisconnectionReason_t)</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap10disconnectEtN3Gap21DisconnectionReason_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xGap::disconnect(unsigned short, Gap::DisconnectionReason_t)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[10f]"></a>nRF5xGap::setTxPower(signed char)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap10setTxPowerEa))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nRF5xGap::setTxPower(signed char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[10e]"></a>nRF5xGap::setDeviceName(const unsigned char*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap13setDeviceNameEPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xGap::setDeviceName(const unsigned char*) &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[10b]"></a>nRF5xGap::stopAdvertising()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap15stopAdvertisingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRF5xGap::stopAdvertising()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[111]"></a>nRF5xGap::startAdvertising(const GapAdvertisingParams&)</STRONG> (Thumb, 250 bytes, Stack size 128 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap16startAdvertisingERK20GapAdvertisingParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = nRF5xGap::startAdvertising(const GapAdvertisingParams&) &rArr; nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&) &rArr; btle_createWhitelistFromBondTable(ble_gap_whitelist_t*) &rArr; pm_whitelist_create &rArr; im_whitelist_create &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingParams::getIntervalInADVUnits() const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingParams::getAdvertisingType() const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[110]"></a>nRF5xGap::setAdvertisingData(const GapAdvertisingData&, const GapAdvertisingData&)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap18setAdvertisingDataERK18GapAdvertisingDataS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nRF5xGap::setAdvertisingData(const GapAdvertisingData&, const GapAdvertisingData&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingData::getPayloadLen() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[2dc]"></a>nRF5xGap::getConnectionHandle()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap19getConnectionHandleEv))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool)
</UL>

<P><STRONG><a name="[263]"></a>nRF5xGap::setConnectionHandle(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap19setConnectionHandleEt))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[3cc]"></a>nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&)</STRONG> (Thumb, 258 bytes, Stack size 88 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap22generateStackWhitelistER19ble_gap_whitelist_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = nRF5xGap::generateStackWhitelist(ble_gap_whitelist_t&) &rArr; btle_createWhitelistFromBondTable(ble_gap_whitelist_t*) &rArr; pm_whitelist_create &rArr; im_whitelist_create &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_createWhitelistFromBondTable(ble_gap_whitelist_t*)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_hasInitializedSecurity()
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_matchAddressAndIrk(const ble_gap_addr_t*, const ble_gap_irk_t*)
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::startAdvertising(const GapAdvertisingParams&)
</UL>

<P><STRONG><a name="[112]"></a>nRF5xGap::reset()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\nrf5xgap.o(i._ZN8nRF5xGap5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = nRF5xGap::reset() &rArr; Gap::reset() &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::shutdown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[3c6]"></a>nRF5xGap::~nRF5xGap()</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, .\build\nrf5xn.o(i._ZN8nRF5xGapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = nRF5xGap::~nRF5xGap() &rArr; mbed::Ticker::detach() &rArr; mbed::TimerEvent::remove() &rArr; ticker_remove_event &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::detach()
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::~TimerEvent__sub_object()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::~CallChainOfFunctionPointersWithContext()
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::~nRF5xn()
</UL>

<P><STRONG><a name="[6f6]"></a>nRF5xGap::~nRF5xGap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, .\build\nrf5xn.o(i._ZN8nRF5xGapD1Ev), UNUSED)

<P><STRONG><a name="[2cd]"></a>GattAttribute::getLength() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZNK13GattAttribute9getLengthEv))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[2d7]"></a>nRF5xGattServer::getBiggestCharacteristicSize() const</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, .\build\nrf5xgattserver.o(i._ZNK15nRF5xGattServer28getBiggestCharacteristicSizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nRF5xGattServer::getBiggestCharacteristicSize() const
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::allocateLongWriteRequest(unsigned short)
</UL>

<P><STRONG><a name="[2d6]"></a>nRF5xGattServer::resolveValueHandleToCharIndex(unsigned short) const</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZNK15nRF5xGattServer29resolveValueHandleToCharIndexEt))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool)
</UL>

<P><STRONG><a name="[320]"></a>EddystoneService::correctAdvertisementPeriod(unsigned short) const</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(i._ZNK16EddystoneService26correctAdvertisementPeriodEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = EddystoneService::correctAdvertisementPeriod(unsigned short) const &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[33d]"></a>DiscoveredService::getEndHandle() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf5xservicediscovery.o(i._ZNK17DiscoveredService12getEndHandleEv))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::ServiceUUIDDiscoveryQueue::triggerFirst()
</UL>

<P><STRONG><a name="[3cd]"></a>GapAdvertisingData::getPayloadLen() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xgap.o(i._ZNK18GapAdvertisingData13getPayloadLenEv))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::setAdvertisingData(const GapAdvertisingData&, const GapAdvertisingData&)
</UL>

<P><STRONG><a name="[2ce]"></a>GattCharacteristic::getProperties() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZNK18GattCharacteristic13getPropertiesEv))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::write(unsigned short, unsigned short, const unsigned char*, unsigned short, bool)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[281]"></a>GattCharacteristic::getValueHandle() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(i._ZNK18GattCharacteristic14getValueHandleEv))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues2()
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues()
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updatetemperatureValues(unsigned char)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSensorValue()
</UL>

<P><STRONG><a name="[3ca]"></a>GapAdvertisingParams::getAdvertisingType() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xgap.o(i._ZNK20GapAdvertisingParams18getAdvertisingTypeEv))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::startAdvertising(const GapAdvertisingParams&)
</UL>

<P><STRONG><a name="[3cb]"></a>GapAdvertisingParams::getIntervalInADVUnits() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xgap.o(i._ZNK20GapAdvertisingParams21getIntervalInADVUnitsEv))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::startAdvertising(const GapAdvertisingParams&)
</UL>

<P><STRONG><a name="[f1]"></a>nRF5xServiceDiscovery::isActive() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZNK21nRF5xServiceDiscovery8isActiveEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV21nRF5xServiceDiscovery)
</UL>
<P><STRONG><a name="[339]"></a>DiscoveredCharacteristic::getDeclHandle() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xservicediscovery.o(i._ZNK24DiscoveredCharacteristic13getDeclHandleEv))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::CharUUIDDiscoveryQueue::triggerFirst()
</UL>

<P><STRONG><a name="[358]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::getCharacteristic() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZNK39nRF5xCharacteristicDescriptorDiscoverer9Discovery17getCharacteristicEv))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::process(unsigned short, const ble_gattc_evt_desc_disc_rsp_t&)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::processAttributeInformation(unsigned short, const ble_gattc_evt_attr_info_disc_rsp_t&)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short)
</UL>

<P><STRONG><a name="[359]"></a>nRF5xCharacteristicDescriptorDiscoverer::Discovery::isEmpty() const</STRONG> (Thumb, 26 bytes, Stack size 88 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZNK39nRF5xCharacteristicDescriptorDiscoverer9Discovery7isEmptyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = nRF5xCharacteristicDescriptorDiscoverer::Discovery::isEmpty() const &rArr; operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&) &rArr; operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::Discovery()
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::findRunningDiscovery(unsigned short)
</UL>

<P><STRONG><a name="[319]"></a>BLE::hasInitialized() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\ble.o(i._ZNK3BLE14hasInitializedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = BLE::hasInitialized() const &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
</UL>

<P><STRONG><a name="[fa]"></a>Gap::getMaxAdvertisingInterval() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZNK3Gap25getMaxAdvertisingIntervalEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[f8]"></a>Gap::getMinAdvertisingInterval() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZNK3Gap25getMinAdvertisingIntervalEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[f9]"></a>Gap::getMinNonConnectableAdvertisingInterval() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZNK3Gap39getMinNonConnectableAdvertisingIntervalEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV3Gap)
</UL>
<P><STRONG><a name="[45f]"></a>UUID::getBaseUUID() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\custom_helper.o(i._ZNK4UUID11getBaseUUIDEv))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_convert_to_nordic_uuid
</UL>

<P><STRONG><a name="[2d0]"></a>UUID::operator ==(const UUID&) const</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, .\build\btle_discovery.o(i._ZNK4UUIDeqERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator !=(const UUID&) const
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>

<P><STRONG><a name="[346]"></a>UUID::operator !=(const UUID&) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\nrf5xservicediscovery.o(i._ZNK4UUIDneERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UUID::operator !=(const UUID&) const &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>

<P><STRONG><a name="[618]"></a>__rw::__rw_file_t::_C_is_open() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNK4__rw11__rw_file_t10_C_is_openEv))
<BR><BR>[Called By]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
</UL>

<P><STRONG><a name="[101]"></a>nRF5xn::hasInitialized() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf5xn.o(i._ZNK6nRF5xn14hasInitializedEv))
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV6nRF5xn)
</UL>
<P><STRONG><a name="[304]"></a>iBeacon::getRawFrameSize() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\ibeacon.o(i._ZNK7iBeacon15getRawFrameSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2f4]"></a>TLMFrame::getTLMVersion() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZNK8TLMFrame13getTLMVersionEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[303]"></a>TLMFrame::getRawFrameSize() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZNK8TLMFrame15getRawFrameSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2f0]"></a>TLMFrame::getBatteryVoltage() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZNK8TLMFrame17getBatteryVoltageEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>

<P><STRONG><a name="[2ee]"></a>TLMFrame::getBeaconTemperature() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\tlmframe.o(i._ZNK8TLMFrame20getBeaconTemperatureEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateRawTLMFrame()
</UL>

<P><STRONG><a name="[301]"></a>UIDFrame::getRawFrameSize() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\uidframe.o(i._ZNK8UIDFrame15getRawFrameSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2fe]"></a>URLFrame::getRawFrameSize() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\urlframe.o(i._ZNK8URLFrame15getRawFrameSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2f5]"></a>URLFrame::getEncodedURLDataLength() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\urlframe.o(i._ZNK8URLFrame23getEncodedURLDataLengthEv))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::updateCharacteristicValues()
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::onDataWrittenCallback(const GattWriteCallbackParams*)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
</UL>

<P><STRONG><a name="[10a]"></a>nRF5xGap::getMaxAdvertisingInterval() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\nrf5xgap.o(i._ZNK8nRF5xGap25getMaxAdvertisingIntervalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRF5xGap::getMaxAdvertisingInterval() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingParams::ADVERTISEMENT_DURATION_UNITS_TO_MS(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[108]"></a>nRF5xGap::getMinAdvertisingInterval() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\nrf5xgap.o(i._ZNK8nRF5xGap25getMinAdvertisingIntervalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRF5xGap::getMinAdvertisingInterval() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingParams::ADVERTISEMENT_DURATION_UNITS_TO_MS(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[109]"></a>nRF5xGap::getMinNonConnectableAdvertisingInterval() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\nrf5xgap.o(i._ZNK8nRF5xGap39getMinNonConnectableAdvertisingIntervalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nRF5xGap::getMinNonConnectableAdvertisingInterval() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GapAdvertisingParams::ADVERTISEMENT_DURATION_UNITS_TO_MS(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgap.o(.constdata__ZTV8nRF5xGap)
</UL>
<P><STRONG><a name="[c6]"></a>SafeBool_::base::trueTag() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\ble.o(i._ZNK9SafeBool_4base7trueTagEv))
<BR>[Address Reference Count : 6]<UL><LI> btle_discovery.o(.constdata)
<LI> ble.o(.constdata)
<LI> btle.o(.constdata)
<LI> nrf5xgattserver.o(.constdata)
<LI> nrf5xservicediscovery.o(.constdata)
<LI> nrf5xn.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>std::__rw_exception::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNKSt14__rw_exception4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[3d1]"></a>std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNKSt18__rw_messages_base11_C_cat_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[3d5]"></a>std::__rw_messages_base::_C_get_locale(int) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNKSt18__rw_messages_base13_C_get_localeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = std::__rw_messages_base::_C_get_locale(int) const &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[3d7]"></a>std::__rw_messages_base::_C_get_message(int, int, int) const</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNKSt18__rw_messages_base14_C_get_messageEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::__rw_messages_base::_C_get_message(int, int, int) const &rArr; catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[3e9]"></a>std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNKSt5ctypeIcE2isENSt10ctype_base4maskEc))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[12d]"></a>std::ctype&lang;char&rang;::do_widen(char) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNKSt5ctypeIcE8do_widenEc))
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[13e]"></a>std::ctype&lang;wchar_t&rang;::do_widen(char) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt5ctypeIwE8do_widenEc))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt5ctypeIwE)
</UL>
<P><STRONG><a name="[3d8]"></a>std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt6locale12_C_use_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 876 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>

<P><STRONG><a name="[3d9]"></a>std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNKSt6locale13_C_make_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 852 + Unknown Stack Size
<LI>Call Chain = std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[3dc]"></a>std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNKSt6locale16_C_install_facetEPN4__rw15__rw_facet_baseERKNS_2idE))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const &rArr; __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[3dd]"></a>std::locale::name() const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNKSt6locale4nameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[142]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_encoding() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE11do_encodingEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[633]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE13always_noconvEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[143]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_always_noconv() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE16do_always_noconvEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[62f]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE3outERS0_PKcS4_RS4_PcS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[141]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE6do_outERS0_PKcS4_RS4_PcS6_RS6_))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[62d]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIccSt11__mbstate_tE8encodingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[148]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_encoding() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE11do_encodingEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[63d]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE13always_noconvEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[147]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_always_noconv() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE16do_always_noconvEv))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[63a]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE3outERS0_PKwS4_RS4_PcS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[146]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE6do_outERS0_PKwS4_RS4_PcS6_RS6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::do_out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[639]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNKSt7codecvtIwcSt11__mbstate_tE8encodingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[3e1]"></a>std::char_traits&lang;char&rang;::eq_int_type(const int&, const int&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIcE11eq_int_typeERKiS2_))
<BR><BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::not_eof(const int&)
</UL>

<P><STRONG><a name="[3de]"></a>std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIcE4copyEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[3df]"></a>std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIcE4moveEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[3e0]"></a>std::char_traits&lang;char&rang;::not_eof(const int&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIcE7not_eofERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;char&rang;::not_eof(const int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[3e4]"></a>std::char_traits&lang;wchar_t&rang;::eq_int_type(const int&, const int&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIwE11eq_int_typeERKiS2_))
<BR><BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
</UL>

<P><STRONG><a name="[3e2]"></a>std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIwE4moveEPwPKwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned) &rArr; wmemmove &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmemmove
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[3e3]"></a>std::char_traits&lang;wchar_t&rang;::not_eof(const int&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt11char_traitsIwE7not_eofERKi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[3e5]"></a>std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcE17_C_get_mask_tableEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[3e7]"></a>std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcEC1EPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[6f7]"></a>std::ctype_byname&lang;char&rang;::ctype_byname__sub_object(const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcEC1EPKcj), UNUSED)

<P><STRONG><a name="[12b]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating() &rArr; std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[12a]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[6f8]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt12ctype_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[374]"></a>std::__rw_exception::_C_vformat(int, std::__va_list)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exception10_C_vformatEiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[373]"></a>std::__rw_exception::__rw_exception()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__rw_exception::__rw_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[6f9]"></a>std::__rw_exception::__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[134]"></a>std::__rw_exception::~__rw_exception()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[6fa]"></a>std::__rw_exception::~__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt14__rw_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[3ec]"></a>std::__rw_messages_base::~__rw_messages_base()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt18__rw_messages_baseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>

<P><STRONG><a name="[6fb]"></a>std::__rw_messages_base::~__rw_messages_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt18__rw_messages_baseD1Ev), UNUSED)

<P><STRONG><a name="[bc]"></a>std::__rw_open_cat_data::__rw_open_cat_data()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
</UL>
<P><STRONG><a name="[6fc]"></a>std::__rw_open_cat_data::__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataC1Ev), UNUSED)

<P><STRONG><a name="[bb]"></a>std::__rw_open_cat_data::~__rw_open_cat_data()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::__rw_open_cat_data::~__rw_open_cat_data() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
<LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
</UL>
<P><STRONG><a name="[6fd]"></a>std::__rw_open_cat_data::~__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataD1Ev), UNUSED)

<P><STRONG><a name="[3ee]"></a>std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZNSt18__rw_open_cat_dataaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&) &rArr; std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>

<P><STRONG><a name="[12c]"></a>std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = std::ctype&lang;char&rang;::_C_initfacet(const std::locale&) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[3e8]"></a>std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[6fe]"></a>std::ctype&lang;char&rang;::ctype__sub_object(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj), UNUSED)

<P><STRONG><a name="[13b]"></a>std::ctype&lang;char&rang;::~ctype__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::ctype&lang;char&rang;::~ctype__deallocating() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[13a]"></a>std::ctype&lang;char&rang;::~ctype()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[6ff]"></a>std::ctype&lang;char&rang;::~ctype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i._ZNSt5ctypeIcED1Ev), UNUSED)

<P><STRONG><a name="[3ef]"></a>std::ctype&lang;wchar_t&rang;::ctype(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::ctype&lang;wchar_t&rang;::ctype(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::facet(unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[700]"></a>std::ctype&lang;wchar_t&rang;::ctype__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwEC1Ej), UNUSED)

<P><STRONG><a name="[13d]"></a>std::ctype&lang;wchar_t&rang;::~ctype__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::ctype&lang;wchar_t&rang;::~ctype__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::~ctype()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt5ctypeIwE)
</UL>
<P><STRONG><a name="[13c]"></a>std::ctype&lang;wchar_t&rang;::~ctype()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::ctype&lang;wchar_t&rang;::~ctype()
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::~ctype__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt5ctypeIwE)
</UL>
<P><STRONG><a name="[701]"></a>std::ctype&lang;wchar_t&rang;::~ctype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt5ctypeIwED1Ev), UNUSED)

<P><STRONG><a name="[3f0]"></a>std::locale::facet::facet(unsigned, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6locale5facetC1Eji))
<BR><BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::ctype(unsigned)
</UL>

<P><STRONG><a name="[702]"></a>std::locale::facet::facet__sub_object(unsigned, int)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6locale5facetC1Eji), UNUSED)

<P><STRONG><a name="[128]"></a>std::locale::facet::~facet__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6locale5facetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::locale::facet::~facet__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[3f1]"></a>std::locale::_C_init()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6locale7_C_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
</UL>

<P><STRONG><a name="[3d6]"></a>std::locale::classic()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6locale7classicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
</UL>

<P><STRONG><a name="[3db]"></a>std::locale::locale(__rw::__rw_locale_imp*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[703]"></a>std::locale::locale__sub_object(__rw::__rw_locale_imp*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE), UNUSED)

<P><STRONG><a name="[3ed]"></a>std::locale::locale(const std::locale&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>

<P><STRONG><a name="[704]"></a>std::locale::locale__sub_object(const std::locale&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeC1ERKS_), UNUSED)

<P><STRONG><a name="[356]"></a>std::locale::locale()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long)
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::ios_base()
</UL>

<P><STRONG><a name="[705]"></a>std::locale::locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeC1Ev), UNUSED)

<P><STRONG><a name="[72]"></a>std::locale::~locale()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZNSt6locale7classicEv)
</UL>
<P><STRONG><a name="[706]"></a>std::locale::~locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt6localeD1Ev), UNUSED)

<P><STRONG><a name="[3d4]"></a>std::locale::operator =(const std::locale&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i._ZNSt6localeaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[3f3]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::facet(unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[707]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tEC1Ej), UNUSED)

<P><STRONG><a name="[140]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[13f]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt()
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIccSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[708]"></a>std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIccSt11__mbstate_tED1Ev), UNUSED)

<P><STRONG><a name="[3f4]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tEC1Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::facet(unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[709]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tEC1Ej), UNUSED)

<P><STRONG><a name="[145]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[144]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt()
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt7codecvtIwcSt11__mbstate_tE)
</UL>
<P><STRONG><a name="[70a]"></a>std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt7codecvtIwcSt11__mbstate_tED1Ev), UNUSED)

<P><STRONG><a name="[3f5]"></a>std::ios_base::Init::Init()</STRONG> (Thumb, 734 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 956 + Unknown Stack Size
<LI>Call Chain = std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___27_ConfigParamsPersistence_cpp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___20_EddystoneService_cpp_a18ae07d
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_pc
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_iBeacon_cpp_99d959d6
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___30_nrfConfigParamsPersistence_cpp_119b80b5
</UL>

<P><STRONG><a name="[70b]"></a>std::ios_base::Init::Init__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitC1Ev), UNUSED)

<P><STRONG><a name="[76]"></a>std::ios_base::Init::~Init()</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::ios_base::Init::~Init()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pubsetbuf(wchar_t*, long)
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsetbuf(char*, long)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> configparamspersistence.o(i.__sti___27_ConfigParamsPersistence_cpp)
<LI> ibeacon.o(i.__sti___11_iBeacon_cpp_99d959d6)
<LI> eddystoneservice.o(i.__sti___20_EddystoneService_cpp_a18ae07d)
<LI> nrfconfigparamspersistence.o(i.__sti___30_nrfConfigParamsPersistence_cpp_119b80b5)
<LI> main.o(i.__sti___8_main_cpp_pc)
</UL>
<P><STRONG><a name="[70c]"></a>std::ios_base::Init::~Init__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_base4InitD1Ev), UNUSED)

<P><STRONG><a name="[400]"></a>std::ios_base::ios_base()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_baseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = std::ios_base::ios_base() &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()
</UL>

<P><STRONG><a name="[70d]"></a>std::ios_base::ios_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(i._ZNSt8ios_baseC1Ev), UNUSED)

<P><STRONG><a name="[14a]"></a>std::messages&lang;char&rang;::~messages__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::messages&lang;char&rang;::~messages__deallocating() &rArr; std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[149]"></a>std::messages&lang;char&rang;::~messages()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[70e]"></a>std::messages&lang;char&rang;::~messages__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZNSt8messagesIcED1Ev), UNUSED)

<P><STRONG><a name="[3eb]"></a>std::exception::exception()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(exception_ctor.o)(i._ZNSt9exceptionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
</UL>

<P><STRONG><a name="[70f]"></a>std::exception::exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(exception_ctor.o)(i._ZNSt9exceptionC1Ev), UNUSED)

<P><STRONG><a name="[3d2]"></a>std::__rw_get_cats()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(i._ZSt13__rw_get_catsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__rw_get_cats()
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[11f]"></a>thunk{-152} to mbed::Serial::lock()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\serial.o(i._ZThn152_N4mbed6Serial4lockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = thunk{-152} to mbed::Serial::lock() &rArr; mbed::Serial::lock() &rArr; rtos::Mutex::lock(unsigned) &rArr; osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::lock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
</UL>
<P><STRONG><a name="[11e]"></a>thunk{-152} to mbed::Serial::_putc(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\serial.o(i._ZThn152_N4mbed6Serial5_putcEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = thunk{-152} to mbed::Serial::_putc(int) &rArr; mbed::Serial::_putc(int) &rArr; mbed::SerialBase::_base_putc(int) &rArr; serial_putc &rArr; serial_writable
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::_putc(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
</UL>
<P><STRONG><a name="[120]"></a>thunk{-152} to mbed::Serial::unlock()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\serial.o(i._ZThn152_N4mbed6Serial6unlockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = thunk{-152} to mbed::Serial::unlock() &rArr; mbed::Serial::unlock() &rArr; rtos::Mutex::unlock() &rArr; osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::unlock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(.constdata__ZTVN4mbed6SerialE)
</UL>
<P><STRONG><a name="[74]"></a>operator delete[] (void*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\mbed_retarget.o(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::stopBeaconService()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_vec_new.o(i.__cxa_vec_new)
</UL>
<P><STRONG><a name="[2ab]"></a>operator delete (void*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\mbed_retarget.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::clear()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear()
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::clear()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::clear()
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::clear()
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::clear()
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::clear()
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::clear()
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::clear()
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::clear()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::clear()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::~codecvt__deallocating()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::~codecvt__deallocating()
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::~facet__deallocating()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::~ctype__deallocating()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::freeConfigCharacteristics()
</UL>

<P><STRONG><a name="[402]"></a>operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, .\build\btle_discovery.o(i._ZeqN24DiscoveredCharacteristic12Properties_tES0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
</UL>

<P><STRONG><a name="[401]"></a>operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZeqRK24DiscoveredCharacteristicS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)
</UL>

<P><STRONG><a name="[3ce]"></a>operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(i._ZeqRKN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = operator ==(const nRF5xCharacteristicDescriptorDiscoverer::Discovery&, const nRF5xCharacteristicDescriptorDiscoverer::Discovery&) &rArr; operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::isEmpty() const
</UL>

<P><STRONG><a name="[2ff]"></a>operator new[] (unsigned)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[344]"></a>operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\btle_discovery.o(i._ZneRK24DiscoveredCharacteristicS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = operator !=(const DiscoveredCharacteristic&, const DiscoveredCharacteristic&) &rArr; UUID::operator ==(const UUID&) const &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator ==(DiscoveredCharacteristic::Properties_t, DiscoveredCharacteristic::Properties_t)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::operator ==(const UUID&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>

<P><STRONG><a name="[26f]"></a>operator new(unsigned)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getSecurityManager()
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getGattServer()
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::getGattClient()
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::add(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;&)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;AuthentificationService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))
</UL>

<P><STRONG><a name="[403]"></a>__ARM_array_new_general</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(array_new_general.o)(i.__ARM_array_new_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>

<P><STRONG><a name="[203]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(fpclassify.o)(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[27f]"></a>__aeabi_atexit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\mbed_retarget.o(i.__aeabi_atexit))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDeviceInstance()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___27_ConfigParamsPersistence_cpp
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___20_EddystoneService_cpp_a18ae07d
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_pc
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___11_iBeacon_cpp_99d959d6
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___30_nrfConfigParamsPersistence_cpp_119b80b5
</UL>

<P><STRONG><a name="[34a]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_ctor_nocookie_nodtor.o)(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::nRF5xCharacteristicDescriptorDiscoverer()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[1fc]"></a>__aeabi_vec_dtor_cookie</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_dtor_cookie.o)(i.__aeabi_vec_dtor_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[37a]"></a>__aeabi_vec_new_cookie</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(aeabi_vec_new_cookie.o)(i.__aeabi_vec_new_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[27d]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(cxa_guard_acquire.o)(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDeviceInstance()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[e8]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(pure_virt.o)(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 7]<UL><LI> bleinstancebase.o(.constdata__ZTV15BLEInstanceBase)
<LI> filehandle.o(.constdata__ZTVN4mbed10FileHandleE)
<LI> nrf5xn.o(.constdata__ZTV3Gap)
<LI> nrf5xn.o(.constdata__ZTV16ServiceDiscovery)
<LI> stream.o(.constdata__ZTVN4mbed8FileLikeE)
<LI> stream.o(.constdata__ZTVN4mbed6StreamE)
<LI> timerevent.o(.constdata__ZTVN4mbed10TimerEventE)
</UL>
<P><STRONG><a name="[406]"></a>__cxa_vec_new</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(cxa_vec_new.o)(i.__cxa_vec_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
</UL>

<P><STRONG><a name="[407]"></a>__hardfp___mathlib_tofloat</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(narrow.o)(i.__hardfp___mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = __hardfp___mathlib_tofloat &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[40c]"></a>__hardfp_ldexp</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(ldexp.o)(i.__hardfp_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[40f]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(dunder.o)(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[40e]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(dunder.o)(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[20f]"></a>__mathlib_narrow</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(narrow.o)(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = __mathlib_narrow &rArr; __hardfp___mathlib_tofloat &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[16a]"></a>__rt_entry</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, .\build\mbed_boot.o(i.__rt_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = __rt_entry &rArr; mbed_start_main &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_sdk_init
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_start_main
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_set_stack_heap
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_cpy_nvic
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[228]"></a>__support_ldexp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(ldexp.o)(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[1a3]"></a>__user_perthread_libspace</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, .\build\rtx_lib.o(i.__user_perthread_libspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[411]"></a>__user_setup_stackheap</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, .\build\sys.o(i.__user_setup_stackheap))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1b6]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(__printf_wp.o)(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[165]"></a>_mutex_acquire</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\rtx_lib.o(i._mutex_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _mutex_acquire &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[166]"></a>_mutex_free</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\rtx_lib.o(i._mutex_free), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _mutex_free &rArr; osMutexDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Finalize
</UL>

<P><STRONG><a name="[1c8]"></a>_mutex_initialize</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, .\build\mbed_boot.o(i._mutex_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _mutex_initialize &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_initio
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
</UL>

<P><STRONG><a name="[167]"></a>_mutex_release</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\rtx_lib.o(i._mutex_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fclose
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwrite
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_terminateio
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setvbuf
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fseek
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftell
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[415]"></a>_platform_post_stackheap_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, .\build\rtx_lib.o(i._platform_post_stackheap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _platform_post_stackheap_init &rArr; osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1c0]"></a>_sys_close</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._sys_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _sys_close &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
</UL>

<P><STRONG><a name="[1e8]"></a>_sys_flen</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._sys_flen))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _sys_flen &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[1e9]"></a>_sys_istty</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._sys_istty))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _sys_istty &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf
</UL>

<P><STRONG><a name="[1c4]"></a>_sys_open</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, .\build\mbed_retarget.o(i._sys_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _sys_open &rArr; handle_open_errors(int, unsigned) &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::FilePath(const char*)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::fileName()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::isFile()
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::exists()
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::file()
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FilePath::fileSystem()
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_open_errors(int, unsigned)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_serial()
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_freopen_locked
</UL>

<P><STRONG><a name="[1ec]"></a>_sys_seek</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, .\build\mbed_retarget.o(i._sys_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = _sys_seek &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[1ed]"></a>_sys_write</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, .\build\mbed_retarget.o(i._sys_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_putc
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_serial()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_writebuf
</UL>

<P><STRONG><a name="[422]"></a>addr_compare</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, .\build\id_manager.o(i.addr_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = addr_compare &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_duplicate_bonding_data
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
</UL>

<P><STRONG><a name="[425]"></a>ah</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\id_manager.o(i.ah))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ah &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_address_resolve
</UL>

<P><STRONG><a name="[426]"></a>app_error_fault_handler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, .\build\app_error_weak.o(i.app_error_fault_handler))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_fault_handler
</UL>

<P><STRONG><a name="[248]"></a>app_error_handler_bare</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, .\build\app_error.o(i.app_error_handler_bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[427]"></a>app_util_critical_region_enter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\app_util_platform.o(i.app_util_critical_region_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_unlock
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_by_mask
</UL>

<P><STRONG><a name="[429]"></a>app_util_critical_region_exit</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, .\build\app_util_platform.o(i.app_util_critical_region_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_util_critical_region_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sd_nvic_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_unlock
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_by_mask
</UL>

<P><STRONG><a name="[42e]"></a>ble_conn_state_conn_handles</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\ble_conn_state.o(i.ble_conn_state_conn_handles))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_conn_state_conn_handles &rArr; sdk_mapped_flags_key_list_get &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;params_reply_pending_process
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
</UL>

<P><STRONG><a name="[43c]"></a>ble_conn_state_encrypted</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\ble_conn_state.o(i.ble_conn_state_encrypted))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_conn_state_encrypted &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
</UL>

<P><STRONG><a name="[43e]"></a>ble_conn_state_mitm_protected</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\ble_conn_state.o(i.ble_conn_state_mitm_protected))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_conn_state_mitm_protected &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
</UL>

<P><STRONG><a name="[260]"></a>ble_conn_state_on_ble_evt</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, .\build\ble_conn_state.o(i.ble_conn_state_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_conn_state_on_ble_evt &rArr; record_purge_disconnected &rArr; sdk_mapped_flags_key_list_get &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_set_disconnected
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_purge_disconnected
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_activate
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[435]"></a>ble_conn_state_role</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, .\build\ble_conn_state.o(i.ble_conn_state_role))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_conn_state_role &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_link_secure
</UL>

<P><STRONG><a name="[443]"></a>ble_conn_state_status</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, .\build\ble_conn_state.o(i.ble_conn_state_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_conn_state_status &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_whitelist_create
</UL>

<P><STRONG><a name="[444]"></a>ble_conn_state_user_flag_acquire</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, .\build\ble_conn_state.o(i.ble_conn_state_user_flag_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_conn_state_user_flag_acquire
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flag_is_acquired
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flag_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_register
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_id_init
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_id_init
</UL>

<P><STRONG><a name="[42c]"></a>ble_conn_state_user_flag_collection</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\ble_conn_state.o(i.ble_conn_state_user_flag_collection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_conn_state_user_flag_collection
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flag_is_acquired
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;params_reply_pending_process
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
</UL>

<P><STRONG><a name="[42f]"></a>ble_conn_state_user_flag_get</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\ble_conn_state.o(i.ble_conn_state_user_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_key
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flag_is_acquired
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_connection
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_connection_by_conn_handle
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_evt_handler
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pairing_failure
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_failure
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;params_reply_pending_process
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
</UL>

<P><STRONG><a name="[437]"></a>ble_conn_state_user_flag_set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\ble_conn_state.o(i.ble_conn_state_user_flag_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_conn_state_user_flag_set &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_flag_is_acquired
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_send_in_evt
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_update_in_evt
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_evt_handler
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_connection
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_evt_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pairing_failure
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_failure
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flags_set_from_err_code
</UL>

<P><STRONG><a name="[3c3]"></a>btle_init</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, .\build\btle.o(i.btle_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = btle_init &rArr; pm_init &rArr; gcm_init &rArr; smd_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVector
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_gap_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::init(unsigned, FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>

<P><STRONG><a name="[53e]"></a>chunk_queue_next</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\fds.o(i.chunk_queue_next))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
</UL>

<P><STRONG><a name="[453]"></a>common_rtc_32bit_ticks_get</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, .\build\us_ticker.o(i.common_rtc_32bit_ticks_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = common_rtc_32bit_ticks_get &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ovf_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_64bit_us_get
</UL>

<P><STRONG><a name="[454]"></a>common_rtc_64bit_us_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\us_ticker.o(i.common_rtc_64bit_us_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_32bit_ticks_get
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_ticker_read
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>

<P><STRONG><a name="[455]"></a>common_rtc_init</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.common_rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = common_rtc_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVector
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_enable
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_disable
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_ticker_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_init
</UL>

<P><STRONG><a name="[45a]"></a>common_rtc_set_interrupt</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, .\build\us_ticker.o(i.common_rtc_set_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = common_rtc_set_interrupt &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_64bit_us_get
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_32bit_ticks_get
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_enable
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_ticker_set_interrupt
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_set_interrupt
</UL>

<P><STRONG><a name="[609]"></a>core_util_are_interrupts_enabled</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\mbed_critical.o(i.core_util_are_interrupts_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_us
</UL>

<P><STRONG><a name="[308]"></a>core_util_critical_section_enter</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\nordic_critical.o(i.core_util_critical_section_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::setup(unsigned long long)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::start()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::reset()
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_remove_event
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_insert_event_us
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::detach()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::slicetime()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_high_resolution_us()
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_32bit_ticks_get
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::push(const EddystoneService::FrameType&)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::pop(EddystoneService::FrameType&)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[309]"></a>core_util_critical_section_exit</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, .\build\nordic_critical.o(i.core_util_critical_section_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = core_util_critical_section_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sd_nvic_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::setup(unsigned long long)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::start()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::reset()
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_remove_event
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_insert_event_us
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::detach()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::slicetime()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_high_resolution_us()
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_32bit_ticks_get
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::push(const EddystoneService::FrameType&)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::pop(EddystoneService::FrameType&)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[2d1]"></a>custom_add_in_characteristic</STRONG> (Thumb, 742 bytes, Stack size 112 bytes, .\build\custom_helper.o(i.custom_add_in_characteristic))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = custom_add_in_characteristic &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[2d3]"></a>custom_add_in_descriptor</STRONG> (Thumb, 168 bytes, Stack size 64 bytes, .\build\custom_helper.o(i.custom_add_in_descriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = custom_add_in_descriptor &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[461]"></a>custom_add_uuid_base</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, .\build\custom_helper.o(i.custom_add_uuid_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = custom_add_uuid_base
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_convert_to_nordic_uuid
</UL>

<P><STRONG><a name="[2cb]"></a>custom_convert_to_nordic_uuid</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, .\build\custom_helper.o(i.custom_convert_to_nordic_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = custom_convert_to_nordic_uuid &rArr; custom_add_uuid_base
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UUID::getBaseUUID() const
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_add_uuid_base
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lookupConvertedUUIDTable(const unsigned char*, unsigned char*)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addToConvertedUUIDTable(const unsigned char*, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::addService(GattService&)
</UL>

<P><STRONG><a name="[3c5]"></a>custom_reset_128bits_uuid_table</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\custom_helper.o(i.custom_reset_128bits_uuid_table))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::shutdown()
</UL>

<P><STRONG><a name="[2a5]"></a>equeue_alloc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\equeue.o(i.equeue_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = equeue_alloc &rArr; equeue_mem_alloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1)
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)
</UL>

<P><STRONG><a name="[3b9]"></a>equeue_cancel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\equeue.o(i.equeue_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = equeue_cancel &rArr; equeue_dealloc &rArr; equeue_mem_dealloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dealloc
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_unqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::cancel(int)
</UL>

<P><STRONG><a name="[3be]"></a>equeue_create</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, .\build\equeue.o(i.equeue_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = equeue_create &rArr; equeue_create_inplace &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create_inplace
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::EventQueue(unsigned, unsigned char*)
</UL>

<P><STRONG><a name="[3bf]"></a>equeue_create_inplace</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, .\build\equeue.o(i.equeue_create_inplace))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = equeue_create_inplace &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_create
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::EventQueue(unsigned, unsigned char*)
</UL>

<P><STRONG><a name="[46a]"></a>equeue_dealloc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\equeue.o(i.equeue_dealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = equeue_dealloc &rArr; equeue_mem_dealloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mem_dealloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_cancel
</UL>

<P><STRONG><a name="[3c0]"></a>equeue_destroy</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, .\build\equeue.o(i.equeue_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = equeue_destroy &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_destroy
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_destroy
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::~EventQueue()
</UL>

<P><STRONG><a name="[3bb]"></a>equeue_dispatch</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, .\build\equeue.o(i.equeue_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = equeue_dispatch &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_wait
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dealloc
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tickdiff
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_incid
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_enqueue
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dequeue
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_clampdiff
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::dispatch(int)
</UL>

<P><STRONG><a name="[615]"></a>equeue_event_delay</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\equeue.o(i.equeue_event_delay))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1)
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)
</UL>

<P><STRONG><a name="[2a6]"></a>equeue_event_dtor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\equeue.o(i.equeue_event_dtor))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1)
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)
</UL>

<P><STRONG><a name="[616]"></a>equeue_event_period</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\equeue.o(i.equeue_event_period))
<BR><BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)
</UL>

<P><STRONG><a name="[46f]"></a>equeue_mutex_create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\equeue_mbed.o(i.equeue_mutex_create))
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create_inplace
</UL>

<P><STRONG><a name="[474]"></a>equeue_mutex_destroy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\equeue_mbed.o(i.equeue_mutex_destroy))
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_destroy
</UL>

<P><STRONG><a name="[472]"></a>equeue_mutex_lock</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(i.equeue_mutex_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_unqueue
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mem_dealloc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mem_alloc
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_enqueue
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dequeue
</UL>

<P><STRONG><a name="[473]"></a>equeue_mutex_unlock</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(i.equeue_mutex_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = equeue_mutex_unlock &rArr; core_util_critical_section_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_unqueue
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mem_dealloc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mem_alloc
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_enqueue
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dequeue
</UL>

<P><STRONG><a name="[2a7]"></a>equeue_post</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, .\build\equeue.o(i.equeue_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_signal
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky()
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1)
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)
</UL>

<P><STRONG><a name="[46e]"></a>equeue_sema_create</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, .\build\equeue_mbed.o(i.equeue_sema_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = equeue_sema_create &rArr; osEventFlagsNew
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create_inplace
</UL>

<P><STRONG><a name="[475]"></a>equeue_sema_destroy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(i.equeue_sema_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = equeue_sema_destroy &rArr; osEventFlagsDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_destroy
</UL>

<P><STRONG><a name="[479]"></a>equeue_sema_signal</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(i.equeue_sema_signal))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = equeue_sema_signal &rArr; osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
</UL>

<P><STRONG><a name="[478]"></a>equeue_sema_wait</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\equeue_mbed.o(i.equeue_sema_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = equeue_sema_wait &rArr; osEventFlagsWait &rArr; isrRtxEventFlagsWait &rArr; EventFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
</UL>

<P><STRONG><a name="[46d]"></a>equeue_tick</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\equeue_mbed.o(i.equeue_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_ms()
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_create_inplace
</UL>

<P><STRONG><a name="[2ea]"></a>error</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\mbed_error.o(i.error))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::hasInitialized() const
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::shutdown()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::processEvents()
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gattServer()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_start_main
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Stream::Stream__sub_object(const char*)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::swapAdvertisedFrame(EddystoneService::FrameType)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[47e]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\mbed_retarget.o(i.exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
</UL>

<P><STRONG><a name="[5c3]"></a>fds_descriptor_from_rec_id</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\fds.o(i.fds_descriptor_from_rec_id))
<BR><BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
</UL>

<P><STRONG><a name="[487]"></a>fds_file_delete</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, .\build\fds.o(i.fds_file_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
</UL>

<P><STRONG><a name="[48b]"></a>fds_init</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, .\build\fds.o(i.fds_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pages_init
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_set
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_clear
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_register
</UL>

<P><STRONG><a name="[490]"></a>fds_record_close</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, .\build\fds.o(i.fds_record_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fds_record_close &rArr; record_find_by_desc &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_read_ptr_get
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>

<P><STRONG><a name="[492]"></a>fds_record_find</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, .\build\fds.o(i.fds_record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_fds_item
</UL>

<P><STRONG><a name="[494]"></a>fds_record_find_by_key</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, .\build\fds.o(i.fds_record_find_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fds_record_find_by_key &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>

<P><STRONG><a name="[495]"></a>fds_record_find_in_file</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, .\build\fds.o(i.fds_record_find_in_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fds_record_find_in_file &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
</UL>

<P><STRONG><a name="[5c4]"></a>fds_record_id_from_desc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\fds.o(i.fds_record_id_from_desc))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepared
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
</UL>

<P><STRONG><a name="[496]"></a>fds_record_open</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, .\build\fds.o(i.fds_record_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fds_record_open &rArr; record_find_by_desc &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_read_ptr_get
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>

<P><STRONG><a name="[497]"></a>fds_record_update</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\build\fds.o(i.fds_record_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = fds_record_update &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
</UL>

<P><STRONG><a name="[499]"></a>fds_record_write</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\fds.o(i.fds_record_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = fds_record_write &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write
</UL>

<P><STRONG><a name="[49a]"></a>fds_record_write_reserved</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\fds.o(i.fds_record_write_reserved))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepared
</UL>

<P><STRONG><a name="[5cb]"></a>fds_register</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\fds.o(i.fds_register))
<BR><BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_register
</UL>

<P><STRONG><a name="[49b]"></a>fds_reserve</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, .\build\fds.o(i.fds_reserve))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fds_reserve &rArr; write_space_reserve
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_space_reserve
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepare
</UL>

<P><STRONG><a name="[49d]"></a>fds_reserve_cancel</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, .\build\fds.o(i.fds_reserve_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fds_reserve_cancel
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_space_free
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepare_cancel
</UL>

<P><STRONG><a name="[57]"></a>_fputc$unlocked</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fputc.o)(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _fputc$unlocked &rArr; __flsbuf_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__flsbuf_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file_locked.o(.text)
</UL>
<P><STRONG><a name="[408]"></a>frexp</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\m_wm.l(frexp.o)(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = frexp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[2a0]"></a>fs_erase</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, .\build\fstorage.o(i.fs_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fs_erase &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_get_next_free
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_config
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_execute
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_swap_erase
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_page_erase
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEddystoneServiceConfigParams(const EddystoneService::EddystoneParams_t*)
</UL>

<P><STRONG><a name="[29d]"></a>fs_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, .\build\fstorage.o(i.fs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fs_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_flash_page_end_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*)
</UL>

<P><STRONG><a name="[2a1]"></a>fs_store</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, .\build\fstorage.o(i.fs_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_get_next_free
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_write_chunk
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_write_id
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_write_finalize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_write_begin
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_flag_dirty
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_tag_write_swap
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_tag_write_data
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_copy
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEddystoneServiceConfigParams(const EddystoneService::EddystoneParams_t*)
</UL>

<P><STRONG><a name="[27b]"></a>fs_sys_event_handler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, .\build\fstorage.o(i.fs_sys_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fs_sys_event_handler &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_operation_success
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_operation_failure
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch(unsigned)
</UL>

<P><STRONG><a name="[4be]"></a>gccm_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\gattc_cache_manager.o(i.gccm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = gccm_init &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
</UL>

<P><STRONG><a name="[4c1]"></a>gcm_ble_evt_handler</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, .\build\gatt_cache_manager.o(i.gcm_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = gcm_ble_evt_handler &rArr; update_pending_flags_check &rArr; local_db_update_in_evt &rArr; gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_db_change_notification_done
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_update_in_evt
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cccd_written
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_on_ble_evt
</UL>

<P><STRONG><a name="[4c9]"></a>gcm_init</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, .\build\gatt_cache_manager.o(i.gcm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = gcm_init &rArr; smd_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_register
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_register
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gccm_init
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
</UL>

<P><STRONG><a name="[4ce]"></a>get_connection_by_conn_handle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, .\build\id_manager.o(i.get_connection_by_conn_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_connection_by_conn_handle &rArr; ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_connection
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_addr_get
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_set
</UL>

<P><STRONG><a name="[4cf]"></a>get_free_connection</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, .\build\id_manager.o(i.get_free_connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_free_connection &rArr; ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_connection
</UL>

<P><STRONG><a name="[393]"></a>get_us_ticker_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, .\build\mbed_us_ticker_api.o(i.get_us_ticker_data))
<BR><BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::Timer()
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::TimerEvent__sub_object()
</UL>

<P><STRONG><a name="[41d]"></a>gpio_dir</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\gpio_api.o(i.gpio_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_pin_uninit
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_apply_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gpio_init_out
</UL>

<P><STRONG><a name="[41b]"></a>gpio_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, .\build\gpio_api.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_init &rArr; nrf_drv_gpiote_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVector
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gpio_init_out
</UL>

<P><STRONG><a name="[4d6]"></a>gpio_init_out</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\mbed_gpio.o(i.gpio_init_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_out_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>

<P><STRONG><a name="[383]"></a>gpio_init_out_ex</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\mbed_gpio.o(i.gpio_init_out_ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gpio_init_out
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_out
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::DigitalOut(PinName, int)
</UL>

<P><STRONG><a name="[41e]"></a>gpio_mode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\gpio_api.o(i.gpio_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = gpio_mode &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_pin_uninit
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_apply_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gpio_init_out
</UL>

<P><STRONG><a name="[384]"></a>gpio_read</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, .\build\gpio_api.o(i.gpio_read))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator int()
</UL>

<P><STRONG><a name="[4c2]"></a>gscm_db_change_notification_done</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\gatts_cache_manager.o(i.gscm_db_change_notification_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = gscm_db_change_notification_done &rArr; pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_raw_store
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_send_in_evt
</UL>

<P><STRONG><a name="[4ca]"></a>gscm_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\gatts_cache_manager.o(i.gscm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = gscm_init &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
</UL>

<P><STRONG><a name="[4db]"></a>gscm_local_db_cache_apply</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, .\build\gatts_cache_manager.o(i.gscm_local_db_cache_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gscm_local_db_cache_apply &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
</UL>

<P><STRONG><a name="[4dd]"></a>gscm_local_db_cache_update</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, .\build\gatts_cache_manager.o(i.gscm_local_db_cache_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_update_in_evt
</UL>

<P><STRONG><a name="[4e0]"></a>gscm_service_changed_ind_needed</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, .\build\gatts_cache_manager.o(i.gscm_service_changed_ind_needed))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gscm_service_changed_ind_needed &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
</UL>

<P><STRONG><a name="[5ee]"></a>gscm_service_changed_ind_send</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, .\build\gatts_cache_manager.o(i.gscm_service_changed_ind_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gscm_service_changed_ind_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_send_in_evt
</UL>

<P><STRONG><a name="[462]"></a>hal_sleep</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, .\build\sleep.o(i.hal_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_isEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;default_idle_hook
</UL>

<P><STRONG><a name="[296]"></a>im_address_resolve</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, .\build\id_manager.o(i.im_address_resolve))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = im_address_resolve &rArr; ah &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ah
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_matchAddressAndIrk(const ble_gap_addr_t*, const ble_gap_irk_t*)
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
</UL>

<P><STRONG><a name="[4e2]"></a>im_ble_addr_get</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, .\build\id_manager.o(i.im_ble_addr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = im_ble_addr_get &rArr; get_connection_by_conn_handle &rArr; ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_connection_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[4e3]"></a>im_ble_evt_handler</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, .\build\id_manager.o(i.im_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = im_ble_evt_handler &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_address_resolve
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_next_peer_id_get
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_connection
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_new_peer_id
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addr_compare
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_on_ble_evt
</UL>

<P><STRONG><a name="[4c7]"></a>im_conn_handle_get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, .\build\id_manager.o(i.im_conn_handle_get))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_evt_handler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_whitelist_create
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_evt_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[4ea]"></a>im_master_id_is_valid</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\id_manager.o(i.im_master_id_is_valid))
<BR><BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_master_ids_compare
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
</UL>

<P><STRONG><a name="[4e9]"></a>im_master_ids_compare</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, .\build\id_manager.o(i.im_master_ids_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = im_master_ids_compare &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_master_id_is_valid
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_master_id
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
</UL>

<P><STRONG><a name="[4e6]"></a>im_new_peer_id</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\id_manager.o(i.im_new_peer_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = im_new_peer_id &rArr; peer_id_set &rArr; get_connection_by_conn_handle &rArr; ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
</UL>

<P><STRONG><a name="[43a]"></a>im_peer_free</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, .\build\id_manager.o(i.im_peer_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_free
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_peer_delete
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pairing_failure
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
</UL>

<P><STRONG><a name="[436]"></a>im_peer_id_get_by_conn_handle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\id_manager.o(i.im_peer_id_get_by_conn_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = im_peer_id_get_by_conn_handle &rArr; get_connection_by_conn_handle &rArr; ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_connection_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_service_changed_ind_needed
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_update
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_apply
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_send_in_evt
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_update_in_evt
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_evt_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_failure
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[4ed]"></a>im_peer_id_get_by_master_id</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, .\build\id_manager.o(i.im_peer_id_get_by_master_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = im_peer_id_get_by_master_id &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_next_peer_id_get
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_master_ids_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
</UL>

<P><STRONG><a name="[4cc]"></a>im_register</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, .\build\id_manager.o(i.im_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = im_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
</UL>

<P><STRONG><a name="[4ef]"></a>im_whitelist_create</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, .\build\id_manager.o(i.im_whitelist_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = im_whitelist_create &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_status
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_valid_irk
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_whitelist_create
</UL>

<P><STRONG><a name="[249]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, .\build\softdevice_handler.o(i.intern_softdevice_events_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = intern_softdevice_events_execute &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_soc_event
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::processEvents()
</UL>

<P><STRONG><a name="[501]"></a>is_duplicate_bonding_data</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, .\build\id_manager.o(i.is_duplicate_bonding_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = is_duplicate_bonding_data &rArr; addr_compare &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_valid_irk
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addr_compare
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[4f0]"></a>is_valid_irk</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\id_manager.o(i.is_valid_irk))
<BR><BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_duplicate_bonding_data
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_whitelist_create
</UL>

<P><STRONG><a name="[56]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\greentea_test_env.o(i.isspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isspace &rArr; __rt_ctype_table &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>lp_ticker_clear_interrupt</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\lp_ticker.o(i.lp_ticker_clear_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lp_ticker_clear_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_lp_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>lp_ticker_disable_interrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\lp_ticker.o(i.lp_ticker_disable_interrupt))
<BR>[Address Reference Count : 1]<UL><LI> mbed_lp_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>lp_ticker_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, .\build\lp_ticker.o(i.lp_ticker_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lp_ticker_init &rArr; common_rtc_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_lp_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[247]"></a>lp_ticker_irq_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\mbed_lp_ticker_api.o(i.lp_ticker_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lp_ticker_irq_handler &rArr; ticker_irq_handler &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_irq_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>lp_ticker_read</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, .\build\lp_ticker.o(i.lp_ticker_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lp_ticker_read &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_64bit_us_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_lp_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>lp_ticker_set_interrupt</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\lp_ticker.o(i.lp_ticker_set_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lp_ticker_set_interrupt &rArr; common_rtc_set_interrupt &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_lp_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[231]"></a>$Super$$main</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, .\build\main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = $Super$$main &rArr; int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::onEventsToProcess(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;&)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::dispatch(int)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setbuf
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::init(void(*)(BLE::InitializationCompleteCallbackContext*))
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[481]"></a>mbed_die</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, .\build\mbed_board.o(i.mbed_die))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_out
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ms
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[230]"></a>mbed_main</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\mbed_boot.o(i.mbed_main))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[414]"></a>mbed_sdk_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\mbed_boot.o(i.mbed_sdk_init))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[412]"></a>mbed_set_stack_heap</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, .\build\mbed_boot.o(i.mbed_set_stack_heap))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[416]"></a>mbed_start_main</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, .\build\mbed_boot.o(i.mbed_start_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = mbed_start_main &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4e5]"></a>new_connection</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, .\build\id_manager.o(i.new_connection))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = new_connection &rArr; ble_conn_state_user_flag_set &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_connection
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_connection_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
</UL>

<P><STRONG><a name="[528]"></a>next_id_get</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, .\build\peer_id.o(i.next_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = next_id_get &rArr; pm_mutex_lock_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_get_next_used
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_get_next_deleted
</UL>

<P><STRONG><a name="[4f5]"></a>nrf_drv_clock_on_soc_event</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, .\build\nrf_drv_clock.o(i.nrf_drv_clock_on_soc_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_clock_on_soc_event
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;item_dequeue
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[459]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, .\build\nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
</UL>

<P><STRONG><a name="[52b]"></a>nrf_drv_gpiote_in_event_disable</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_event_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_in_event_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[4d2]"></a>nrf_drv_gpiote_in_event_enable</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_event_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nrf_drv_gpiote_in_event_enable &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_int_enable
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_handler_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_apply_config
</UL>

<P><STRONG><a name="[4d1]"></a>nrf_drv_gpiote_in_init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_gpiote
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_apply_config
</UL>

<P><STRONG><a name="[4d8]"></a>nrf_drv_gpiote_in_uninit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = nrf_drv_gpiote_in_uninit &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_clear
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_te_default
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_pin_uninit
</UL>

<P><STRONG><a name="[4d5]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_gpiote_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_clear
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_int_enable
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[4d3]"></a>nrf_drv_gpiote_out_init</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_apply_config
</UL>

<P><STRONG><a name="[4d7]"></a>nrf_drv_gpiote_out_uninit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, .\build\nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = nrf_drv_gpiote_out_uninit &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_clear
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_te_default
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_pin_uninit
</UL>

<P><STRONG><a name="[4e]"></a>nrf_reloc_vector_table</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, .\build\reloc_vector_table.o(i.nrf_reloc_vector_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_reloc_vector_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nrf52832.o(.text)
</UL>
<P><STRONG><a name="[3b8]"></a>osDelay</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, .\build\rtx_delay.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Thread::wait(unsigned)
</UL>

<P><STRONG><a name="[47b]"></a>osEventFlagsDelete</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, .\build\rtx_evflags.o(i.osEventFlagsDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osEventFlagsDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsDelete
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_destroy
</UL>

<P><STRONG><a name="[47a]"></a>osEventFlagsNew</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, .\build\rtx_evflags.o(i.osEventFlagsNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osEventFlagsNew
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsNew
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_create
</UL>

<P><STRONG><a name="[47c]"></a>osEventFlagsSet</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, .\build\rtx_evflags.o(i.osEventFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = osEventFlagsSet &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSet
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_signal
</UL>

<P><STRONG><a name="[47d]"></a>osEventFlagsWait</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, .\build\rtx_evflags.o(i.osEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = osEventFlagsWait &rArr; isrRtxEventFlagsWait &rArr; EventFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWait
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_sema_wait
</UL>

<P><STRONG><a name="[549]"></a>osKernelGetState</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, .\build\rtx_kernel.o(i.osKernelGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelGetState
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_CONTROL
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>

<P><STRONG><a name="[41f]"></a>osKernelInitialize</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, .\build\rtx_kernel.o(i.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_CONTROL
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitialize
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
</UL>

<P><STRONG><a name="[527]"></a>osKernelStart</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, .\build\rtx_kernel.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osKernelStart &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_CONTROL
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStart
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_start_main
</UL>

<P><STRONG><a name="[552]"></a>osMessageQueueGet</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, .\build\rtx_msgqueue.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = osMessageQueueGet &rArr; isrRtxMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[557]"></a>osMessageQueueNew</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, .\build\rtx_msgqueue.o(i.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osMessageQueueNew
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNew
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerThread
</UL>

<P><STRONG><a name="[559]"></a>osMessageQueuePut</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, .\build\rtx_msgqueue.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = osMessageQueuePut &rArr; isrRtxMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[3b4]"></a>osMutexAcquire</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, .\build\rtx_mutex.o(i.osMutexAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osMutexAcquire
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::lock(unsigned)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>

<P><STRONG><a name="[3b6]"></a>osMutexDelete</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, .\build\rtx_mutex.o(i.osMutexDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osMutexDelete
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::~Mutex()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_free
</UL>

<P><STRONG><a name="[3b3]"></a>osMutexNew</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, .\build\rtx_mutex.o(i.osMutexNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNew
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::constructor(const char*)
</UL>

<P><STRONG><a name="[3b5]"></a>osMutexRelease</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, .\build\rtx_mutex.o(i.osMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osMutexRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexRelease
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::unlock()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
</UL>

<P><STRONG><a name="[419]"></a>osRtxErrorNotify</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, .\build\mbed_rtx_handlers.o(i.osRtxErrorNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStackCheck
</UL>

<P><STRONG><a name="[ab]"></a>osRtxEventFlagsPostProcess</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, .\build\rtx_evflags.o(i.osRtxEventFlagsPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = osRtxEventFlagsPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.svcRtxEventFlagsNew)
</UL>
<P><STRONG><a name="[ac]"></a>osRtxIdleThread</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\mbed_rtx_handlers.o(i.osRtxIdleThread))
<BR><BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos_idle_loop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.svcRtxKernelStart)
</UL>
<P><STRONG><a name="[567]"></a>osRtxMemoryAlloc</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, .\build\rtx_memory.o(i.osRtxMemoryAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[569]"></a>osRtxMemoryFree</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, .\build\rtx_memory.o(i.osRtxMemoryFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxMemoryFree
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
</UL>

<P><STRONG><a name="[56b]"></a>osRtxMemoryInit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, .\build\rtx_memory.o(i.osRtxMemoryInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxMemoryInit
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryInit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[50c]"></a>osRtxMemoryPoolAlloc</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, .\build\rtx_mempool.o(i.osRtxMemoryPoolAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryPoolAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_get
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_inc32_lt
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsNew
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[570]"></a>osRtxMemoryPoolFree</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, .\build\rtx_mempool.o(i.osRtxMemoryPoolFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_link_put
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_mempool_c_7914b4c7__atomic_dec32_nz
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockFree
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
</UL>

<P><STRONG><a name="[573]"></a>osRtxMemoryPoolInit</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, .\build\rtx_mempool.o(i.osRtxMemoryPoolInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxMemoryPoolInit
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryBlockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueNew
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[ae]"></a>osRtxMessageQueuePostProcess</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, .\build\rtx_msgqueue.o(i.osRtxMessageQueuePostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = osRtxMessageQueuePostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.svcRtxMessageQueueNew)
</UL>
<P><STRONG><a name="[579]"></a>osRtxMutexOwnerRelease</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, .\build\rtx_mutex.o(i.osRtxMutexOwnerRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[19f]"></a>osRtxPendSV_Handler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, .\build\rtx_system.o(i.osRtxPendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_get
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[509]"></a>osRtxPostProcess</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, .\build\rtx_system.o(i.osRtxPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_queue_put
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueuePut
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
</UL>

<P><STRONG><a name="[597]"></a>osRtxSysTimerAckIRQ</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\rtx_system.o(i.osRtxSysTimerAckIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[5f9]"></a>osRtxSysTimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\rtx_system.o(i.osRtxSysTimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[5f7]"></a>osRtxSysTimerSetup</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, .\build\rtx_system.o(i.osRtxSysTimerSetup))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[58b]"></a>osRtxThreadBlock</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osRtxThreadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>

<P><STRONG><a name="[595]"></a>osRtxThreadDelayInsert</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osRtxThreadDelayInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadDelayInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>

<P><STRONG><a name="[596]"></a>osRtxThreadDelayRemove</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadDelayRemove))
<BR><BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
</UL>

<P><STRONG><a name="[57d]"></a>osRtxThreadDelayTick</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.osRtxThreadDelayTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = osRtxThreadDelayTick &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRoot
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitTimeout
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDelayCompleted
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxSemaphoreAcquireTimeout
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquireTimeout
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutTimeout
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetTimeout
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMemoryPoolAllocTimeout
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[57c]"></a>osRtxThreadDispatch</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.osRtxThreadDispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadBlock
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[576]"></a>osRtxThreadListGet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadListGet))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[58f]"></a>osRtxThreadListPut</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, .\build\rtx_thread.o(i.osRtxThreadListPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
</UL>

<P><STRONG><a name="[564]"></a>osRtxThreadListRemove</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[580]"></a>osRtxThreadListRoot</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadListRoot))
<BR><BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[58e]"></a>osRtxThreadListSort</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.osRtxThreadListSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
</UL>

<P><STRONG><a name="[b0]"></a>osRtxThreadPostProcess</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.osRtxThreadPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = osRtxThreadPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadFlagsWaitCompleted
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.svcRtxThreadNew)
</UL>
<P><STRONG><a name="[588]"></a>osRtxThreadReadyPut</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osRtxThreadReadyPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[577]"></a>osRtxThreadRegPtr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadRegPtr))
<BR><BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[591]"></a>osRtxThreadStackCheck</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osRtxThreadStackCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
</UL>

<P><STRONG><a name="[58c]"></a>osRtxThreadSwitch</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osRtxThreadSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStackCheck
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[593]"></a>osRtxThreadWaitEnter</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.osRtxThreadWaitEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayInsert
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadBlocked
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
</UL>

<P><STRONG><a name="[565]"></a>osRtxThreadWaitExit</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, .\build\rtx_thread.o(i.osRtxThreadWaitExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadUnblocked
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsDelete
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[1a0]"></a>osRtxTick_Handler</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, .\build\rtx_system.o(i.osRtxTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = osRtxTick_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSysTimerAckIRQ
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ad]"></a>osRtxTimerThread</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, .\build\rtx_timer.o(i.osRtxTimerThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = osRtxTimerThread &rArr; osMessageQueueGet &rArr; isrRtxMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxTimerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.svcRtxKernelStart)
</UL>
<P><STRONG><a name="[9b]"></a>osRtxTimerTick</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, .\build\rtx_timer.o(i.osRtxTimerTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = osRtxTimerTick &rArr; osMessageQueuePut &rArr; isrRtxMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerUnlink
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInsert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_timer.o(i.osRtxTimerThread)
</UL>
<P><STRONG><a name="[59b]"></a>osThreadContextNew</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, .\build\rtx_thread.o(i.osThreadContextNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osThreadContextNew
</UL>
<BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[af]"></a>osThreadExit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osThreadExit))
<BR><BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.svcRtxThreadNew)
</UL>
<P><STRONG><a name="[418]"></a>osThreadGetId</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osThreadGetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetId
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>

<P><STRONG><a name="[563]"></a>osThreadGetName</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osThreadGetName))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osThreadGetName
</UL>
<BR>[Calls]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_PRIMASK
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_IPSR
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__get_BASEPRI
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetName
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
</UL>

<P><STRONG><a name="[526]"></a>osThreadNew</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osThreadNew &rArr; osThreadContextNew
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadContextNew
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_start_main
</UL>

<P><STRONG><a name="[4e4]"></a>pdb_next_peer_id_get</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\build\peer_database.o(i.pdb_next_peer_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = pdb_next_peer_id_get &rArr; pds_next_peer_id_get &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_next_peer_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_set
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_master_id
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[51c]"></a>pdb_peer_allocate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\peer_database.o(i.pdb_peer_allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = pdb_peer_allocate &rArr; pds_peer_id_allocate &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_new_peer
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[4ec]"></a>pdb_peer_free</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, .\build\peer_database.o(i.pdb_peer_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find_next
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_free
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
</UL>

<P><STRONG><a name="[4d9]"></a>pdb_raw_store</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, .\build\peer_database.o(i.pdb_raw_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_set
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_db_change_notification_done
</UL>

<P><STRONG><a name="[4dc]"></a>pdb_read_buf_get</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, .\build\peer_database.o(i.pdb_read_buf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_read_ptr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_service_changed_ind_needed
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_apply
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_whitelist_create
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_master_id
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
</UL>

<P><STRONG><a name="[4bf]"></a>pdb_register</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, .\build\peer_database.o(i.pdb_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_init
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_register
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_register
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_register
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gccm_init
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_register
</UL>

<P><STRONG><a name="[4de]"></a>pdb_write_buf_get</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, .\build\peer_database.o(i.pdb_write_buf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pdb_write_buf_get &rArr; pds_peer_id_is_allocated &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_release
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_ptr_get
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_block_acquire
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_invalidate
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_get
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_point_to_buffer
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_is_allocated
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_update
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_new_peer
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[4df]"></a>pdb_write_buf_release</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, .\build\peer_database.o(i.pdb_write_buf_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pdb_write_buf_release &rArr; write_buffer_record_release &rArr; pm_buffer_release &rArr; pm_mutex_unlock &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_release
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepare_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_update
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_free
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pairing_failure
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_new_peer
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
</UL>

<P><STRONG><a name="[438]"></a>pdb_write_buf_store</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, .\build\peer_database.o(i.pdb_write_buf_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_ptr_get
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buf_length_words_set
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_const_point_to_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_update
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_evt_handler
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
</UL>

<P><STRONG><a name="[51b]"></a>pdb_write_buf_store_prepare</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, .\build\peer_database.o(i.pdb_write_buf_store_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = pdb_write_buf_store_prepare &rArr; pds_peer_data_write_prepare &rArr; fds_reserve &rArr; write_space_reserve
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_ptr_get
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buf_length_words_set
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_const_point_to_buffer
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepare
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_new_peer
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[5aa]"></a>pds_next_peer_id_get</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\peer_data_storage.o(i.pds_next_peer_id_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pds_next_peer_id_get &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_get_next_used
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_next_peer_id_get
</UL>

<P><STRONG><a name="[5af]"></a>pds_peer_data_read_ptr_get</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, .\build\peer_data_storage.o(i.pds_peer_data_read_ptr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_fds_item
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
</UL>

<P><STRONG><a name="[5c1]"></a>pds_peer_data_update</STRONG> (Thumb, 206 bytes, Stack size 72 bytes, .\build\peer_data_storage.o(i.pds_peer_data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pds_peer_data_update &rArr; fds_record_update &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_id_from_desc
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_descriptor_from_rec_id
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_to_file_id
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_id_to_record_key
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_parts_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
</UL>

<P><STRONG><a name="[5c5]"></a>pds_peer_data_write</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, .\build\peer_data_storage.o(i.pds_peer_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = pds_peer_data_write &rArr; fds_record_write &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_id_from_desc
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_to_file_id
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_id_to_record_key
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_parts_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
</UL>

<P><STRONG><a name="[5bd]"></a>pds_peer_data_write_prepare</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, .\build\peer_data_storage.o(i.pds_peer_data_write_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pds_peer_data_write_prepare &rArr; fds_reserve &rArr; write_space_reserve
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_reserve
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
</UL>

<P><STRONG><a name="[5b9]"></a>pds_peer_data_write_prepare_cancel</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, .\build\peer_data_storage.o(i.pds_peer_data_write_prepare_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pds_peer_data_write_prepare_cancel &rArr; fds_reserve_cancel
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_reserve_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
</UL>

<P><STRONG><a name="[5c6]"></a>pds_peer_data_write_prepared</STRONG> (Thumb, 198 bytes, Stack size 80 bytes, .\build\peer_data_storage.o(i.pds_peer_data_write_prepared))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write_reserved
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_id_from_desc
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_to_file_id
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_id_to_record_key
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_parts_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_or_update
</UL>

<P><STRONG><a name="[5ab]"></a>pds_peer_id_allocate</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\peer_data_storage.o(i.pds_peer_id_allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pds_peer_id_allocate &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_allocate
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_allocate
</UL>

<P><STRONG><a name="[5ad]"></a>pds_peer_id_free</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, .\build\peer_data_storage.o(i.pds_peer_id_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_delete
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_free
</UL>

<P><STRONG><a name="[5b2]"></a>pds_peer_id_is_allocated</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, .\build\peer_data_storage.o(i.pds_peer_id_is_allocated))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pds_peer_id_is_allocated &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_is_allocated
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
</UL>

<P><STRONG><a name="[5b0]"></a>pds_register</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, .\build\peer_data_storage.o(i.pds_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_register
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_init
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
</UL>

<P><STRONG><a name="[5c2]"></a>peer_data_parts_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\peer_data.o(i.peer_data_parts_get))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepared
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
</UL>

<P><STRONG><a name="[5c7]"></a>peer_id_allocate</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\peer_id.o(i.peer_id_allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;claim
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_allocate
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
</UL>

<P><STRONG><a name="[5c8]"></a>peer_id_delete</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\peer_id.o(i.peer_id_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = peer_id_delete &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;claim
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_free
</UL>

<P><STRONG><a name="[484]"></a>peer_id_free</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\peer_id.o(i.peer_id_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = peer_id_free &rArr; release &rArr; pm_mutex_unlock &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_evt_handler
</UL>

<P><STRONG><a name="[5cc]"></a>peer_id_get_next_deleted</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\peer_id.o(i.peer_id_get_next_deleted))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = peer_id_get_next_deleted &rArr; next_id_get &rArr; pm_mutex_lock_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
</UL>

<P><STRONG><a name="[5c0]"></a>peer_id_get_next_used</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\peer_id.o(i.peer_id_get_next_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = peer_id_get_next_used &rArr; next_id_get &rArr; pm_mutex_lock_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_id_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_next_peer_id_get
</UL>

<P><STRONG><a name="[5ca]"></a>peer_id_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\peer_id.o(i.peer_id_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = peer_id_init &rArr; pm_mutex_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_init
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_register
</UL>

<P><STRONG><a name="[5c9]"></a>peer_id_is_allocated</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\peer_id.o(i.peer_id_is_allocated))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = peer_id_is_allocated &rArr; pm_mutex_lock_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_is_allocated
</UL>

<P><STRONG><a name="[5b6]"></a>pm_buffer_block_acquire</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, .\build\pm_buffer.o(i.pm_buffer_block_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pm_buffer_block_acquire &rArr; pm_mutex_lock &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_release
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
</UL>

<P><STRONG><a name="[5b1]"></a>pm_buffer_init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, .\build\pm_buffer.o(i.pm_buffer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pm_buffer_init &rArr; pm_mutex_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
</UL>

<P><STRONG><a name="[5b7]"></a>pm_buffer_ptr_get</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, .\build\pm_buffer.o(i.pm_buffer_ptr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pm_buffer_ptr_get &rArr; pm_mutex_lock_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
</UL>

<P><STRONG><a name="[5b4]"></a>pm_buffer_release</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\pm_buffer.o(i.pm_buffer_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pm_buffer_release &rArr; pm_mutex_unlock &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_unlock
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_block_acquire
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_release
</UL>

<P><STRONG><a name="[44b]"></a>pm_init</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, .\build\peer_manager.o(i.pm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = pm_init &rArr; gcm_init &rArr; smd_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_register
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_register
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[5ce]"></a>pm_mutex_init</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\pm_mutex.o(i.pm_mutex_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pm_mutex_init
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_init
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_init
</UL>

<P><STRONG><a name="[452]"></a>pm_mutex_lock</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\pm_mutex.o(i.pm_mutex_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pm_mutex_lock &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_by_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;claim
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_block_acquire
</UL>

<P><STRONG><a name="[451]"></a>pm_mutex_lock_first_available</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, .\build\pm_mutex.o(i.pm_mutex_lock_first_available))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_by_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;claim
</UL>

<P><STRONG><a name="[529]"></a>pm_mutex_lock_status_get</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, .\build\pm_mutex.o(i.pm_mutex_lock_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pm_mutex_lock_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_id_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_release
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_ptr_get
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_is_allocated
</UL>

<P><STRONG><a name="[5cf]"></a>pm_mutex_unlock</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, .\build\pm_mutex.o(i.pm_mutex_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pm_mutex_unlock &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_release
</UL>

<P><STRONG><a name="[261]"></a>pm_on_ble_evt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, .\build\peer_manager.o(i.pm_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = pm_on_ble_evt &rArr; gcm_ble_evt_handler &rArr; update_pending_flags_check &rArr; local_db_update_in_evt &rArr; gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ble_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[4e8]"></a>pm_peer_delete</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, .\build\peer_manager.o(i.pm_peer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pm_peer_delete &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
</UL>

<P><STRONG><a name="[2a4]"></a>pm_whitelist_create</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\peer_manager.o(i.pm_whitelist_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = pm_whitelist_create &rArr; im_whitelist_create &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_whitelist_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_createWhitelistFromBondTable(ble_gap_whitelist_t*)
</UL>

<P><STRONG><a name="[8b]"></a>pre_main</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, .\build\mbed_boot.o(i.pre_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = pre_main &rArr; main &rArr; $Super$$main &rArr; int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_boot.o(i.mbed_start_main)
</UL>
<P><STRONG><a name="[566]"></a>rtos_idle_loop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\rtos_idle.o(i.rtos_idle_loop))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxIdleThread
</UL>

<P><STRONG><a name="[5df]"></a>sdk_mapped_flags_bulk_update_by_key</STRONG> (Thumb, 118 bytes, Stack size 28 bytes, .\build\sdk_mapped_flags.o(i.sdk_mapped_flags_bulk_update_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_invalidate
</UL>

<P><STRONG><a name="[5d9]"></a>sdk_mapped_flags_first_key_index_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\sdk_mapped_flags.o(i.sdk_mapped_flags_first_key_index_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sdk_mapped_flags_first_key_index_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_index
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_activate
</UL>

<P><STRONG><a name="[43d]"></a>sdk_mapped_flags_get_by_key</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, .\build\sdk_mapped_flags.o(i.sdk_mapped_flags_get_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_index
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_status
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_role
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_mitm_protected
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_encrypted
</UL>

<P><STRONG><a name="[43b]"></a>sdk_mapped_flags_key_list_get</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, .\build\sdk_mapped_flags.o(i.sdk_mapped_flags_key_list_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sdk_mapped_flags_key_list_get &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_index
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_conn_handles
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_purge_disconnected
</UL>

<P><STRONG><a name="[441]"></a>sdk_mapped_flags_update_by_key</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, .\build\sdk_mapped_flags.o(i.sdk_mapped_flags_update_by_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_set_disconnected
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_activate
</UL>

<P><STRONG><a name="[25d]"></a>serial_baud</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, .\build\serial_api.o(i.serial_baud))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = serial_baud
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_serial()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[25c]"></a>serial_init</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, .\build\serial_api.o(i.serial_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = serial_init &rArr; internal_set_hwfc &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVector
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_writable
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txrx_pins_set
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txrx_pins_disconnect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txd_set
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_task_trigger
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_disable
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_hwfc_pins_set
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_enable
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_disable
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_configure
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_baudrate_set
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_set_hwfc
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_serial()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[38e]"></a>serial_irq_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\serial_api.o(i.serial_irq_handler))
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[387]"></a>serial_irq_handler_asynch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\serial_api.o(i.serial_irq_handler_asynch))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::interrupt_handler_asynch()
</UL>

<P><STRONG><a name="[386]"></a>serial_putc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\serial_api.o(i.serial_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = serial_putc &rArr; serial_writable
</UL>
<BR>[Calls]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_writable
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txd_set
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::_base_putc(int)
</UL>

<P><STRONG><a name="[5e7]"></a>serial_writable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\serial_api.o(i.serial_writable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = serial_writable
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_putc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[5d1]"></a>sm_ble_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, .\build\security_manager.o(i.sm_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = sm_ble_evt_handler &rArr; link_secure_pending_process &rArr; link_secure &rArr; smd_link_secure &rArr; link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_on_ble_evt
</UL>

<P><STRONG><a name="[5d0]"></a>sm_register</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, .\build\security_manager.o(i.sm_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = sm_register &rArr; smd_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_register
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_id_init
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
</UL>

<P><STRONG><a name="[5ef]"></a>smd_ble_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, .\build\security_dispatcher.o(i.smd_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = smd_ble_evt_handler &rArr; auth_status_process &rArr; auth_status_success_process &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_request_process
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_params_request_process
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnect_process
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_process
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ble_evt_handler
</UL>

<P><STRONG><a name="[515]"></a>smd_link_secure</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.smd_link_secure))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = smd_link_secure &rArr; link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_role
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_peripheral
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure
</UL>

<P><STRONG><a name="[5f1]"></a>smd_params_reply</STRONG> (Thumb, 302 bytes, Stack size 88 bytes, .\build\security_dispatcher.o(i.smd_params_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = smd_params_reply &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_role
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_addr_get
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_allocate
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_start_send
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
</UL>

<P><STRONG><a name="[4cd]"></a>smd_register</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, .\build\security_dispatcher.o(i.smd_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = smd_register &rArr; pdb_register &rArr; pds_register &rArr; fds_init &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_id_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_register
</UL>

<P><STRONG><a name="[44c]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\softdevice_handler.o(i.softdevice_ble_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[44a]"></a>softdevice_enable</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, .\build\softdevice_handler.o(i.softdevice_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = softdevice_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[449]"></a>softdevice_enable_get_default_config</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\softdevice_handler.o(i.softdevice_enable_get_default_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = softdevice_enable_get_default_config &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[aa]"></a>softdevice_fault_handler</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\softdevice_handler.o(i.softdevice_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_fault_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(i.softdevice_handler_init)
</UL>
<P><STRONG><a name="[448]"></a>softdevice_handler_init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, .\build\softdevice_handler.o(i.softdevice_handler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = softdevice_handler_init &rArr; sd_nvic_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[4e1]"></a>softdevice_handler_isEnabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\softdevice_handler.o(i.softdevice_handler_isEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep
</UL>

<P><STRONG><a name="[3c4]"></a>softdevice_handler_sd_disable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\softdevice_handler.o(i.softdevice_handler_sd_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = softdevice_handler_sd_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::shutdown()
</UL>

<P><STRONG><a name="[44d]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\softdevice_handler.o(i.softdevice_sys_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_init
</UL>

<P><STRONG><a name="[8c]"></a>svcRtxDelay</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\rtx_delay.o(i.svcRtxDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = svcRtxDelay &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_delay.o(i.osDelay)
</UL>
<P><STRONG><a name="[8d]"></a>svcRtxEventFlagsDelete</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, .\build\rtx_evflags.o(i.svcRtxEventFlagsDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = svcRtxEventFlagsDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsDestroyed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsDelete)
</UL>
<P><STRONG><a name="[8e]"></a>svcRtxEventFlagsNew</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, .\build\rtx_evflags.o(i.svcRtxEventFlagsNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxEventFlagsNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsNew)
</UL>
<P><STRONG><a name="[8f]"></a>svcRtxEventFlagsSet</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, .\build\rtx_evflags.o(i.svcRtxEventFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = svcRtxEventFlagsSet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsSetDone
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsSet
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsSet)
</UL>
<P><STRONG><a name="[90]"></a>svcRtxEventFlagsWait</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, .\build\rtx_evflags.o(i.svcRtxEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = svcRtxEventFlagsWait &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitPending
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_evflags.o(i.osEventFlagsWait)
</UL>
<P><STRONG><a name="[91]"></a>svcRtxKernelGetState</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, .\build\rtx_kernel.o(i.svcRtxKernelGetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelGetState)
</UL>
<P><STRONG><a name="[92]"></a>svcRtxKernelInitialize</STRONG> (Thumb, 668 bytes, Stack size 8 bytes, .\build\rtx_kernel.o(i.svcRtxKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = svcRtxKernelInitialize &rArr; osRtxMemoryPoolInit
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelInitializeCompleted
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelInitialize)
</UL>
<P><STRONG><a name="[93]"></a>svcRtxKernelStart</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, .\build\rtx_kernel.o(i.svcRtxKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = svcRtxKernelStart &rArr; svcRtxThreadNew &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSysTimerSetup
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSysTimerEnable
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtTick_EnableIRQ
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelStarted
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxKernelError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(i.osKernelStart)
</UL>
<P><STRONG><a name="[94]"></a>svcRtxMessageQueueGet</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, .\build\rtx_msgqueue.o(i.svcRtxMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = svcRtxMessageQueueGet &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueRemove
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueGetPending
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.osMessageQueueGet)
</UL>
<P><STRONG><a name="[95]"></a>svcRtxMessageQueueNew</STRONG> (Thumb, 410 bytes, Stack size 48 bytes, .\build\rtx_msgqueue.o(i.svcRtxMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = svcRtxMessageQueueNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueCreated
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.osMessageQueueNew)
</UL>
<P><STRONG><a name="[96]"></a>svcRtxMessageQueuePut</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, .\build\rtx_msgqueue.o(i.svcRtxMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = svcRtxMessageQueuePut &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadRegPtr
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueuePut
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueuePutPending
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInserted
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_msgqueue.o(i.osMessageQueuePut)
</UL>
<P><STRONG><a name="[97]"></a>svcRtxMutexAcquire</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, .\build\rtx_mutex.o(i.svcRtxMutexAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = svcRtxMutexAcquire &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexNotAcquired
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquirePending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexAcquire)
</UL>
<P><STRONG><a name="[98]"></a>svcRtxMutexDelete</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, .\build\rtx_mutex.o(i.svcRtxMutexDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = svcRtxMutexDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexDestroyed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexDelete)
</UL>
<P><STRONG><a name="[99]"></a>svcRtxMutexNew</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, .\build\rtx_mutex.o(i.svcRtxMutexNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxMutexNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexCreated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexNew)
</UL>
<P><STRONG><a name="[9a]"></a>svcRtxMutexRelease</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, .\build\rtx_mutex.o(i.svcRtxMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = svcRtxMutexRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexReleased
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexError
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMutexAcquired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(i.osMutexRelease)
</UL>
<P><STRONG><a name="[9d]"></a>svcRtxThreadExit</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.svcRtxThreadExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = svcRtxThreadExit &rArr; osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSetRunning
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelGetState
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadJoined
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadDestroyed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadExit)
</UL>
<P><STRONG><a name="[9e]"></a>svcRtxThreadGetId</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.svcRtxThreadGetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = svcRtxThreadGetId
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadGetRunning
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadGetId)
</UL>
<P><STRONG><a name="[9f]"></a>svcRtxThreadGetName</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, .\build\rtx_thread.o(i.svcRtxThreadGetName))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = svcRtxThreadGetName
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadGetName
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadGetName)
</UL>
<P><STRONG><a name="[9c]"></a>svcRtxThreadNew</STRONG> (Thumb, 632 bytes, Stack size 64 bytes, .\build\rtx_thread.o(i.svcRtxThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = svcRtxThreadNew &rArr; osRtxThreadDispatch &rArr; osRtxThreadSwitch &rArr; osRtxThreadStackCheck &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadError
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxThreadCreated
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(i.osThreadContextNew)
</UL>
<P><STRONG><a name="[390]"></a>ticker_insert_event_us</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, .\build\mbed_ticker_api.o(i.ticker_insert_event_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_present_time
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_interrupt
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::insert_absolute(unsigned long long)
</UL>

<P><STRONG><a name="[521]"></a>ticker_irq_handler</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, .\build\mbed_ticker_api.o(i.ticker_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ticker_irq_handler &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_present_time
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_ticker_irq_handler
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_irq_handler
</UL>

<P><STRONG><a name="[39d]"></a>ticker_read_us</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\mbed_ticker_api.o(i.ticker_read_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_present_time
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::setup(unsigned long long)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::start()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::reset()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::slicetime()
</UL>

<P><STRONG><a name="[392]"></a>ticker_remove_event</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, .\build\mbed_ticker_api.o(i.ticker_remove_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ticker_remove_event &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_interrupt
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::remove()
</UL>

<P><STRONG><a name="[394]"></a>ticker_set_handler</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\mbed_ticker_api.o(i.ticker_set_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_handler
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::TimerEvent__sub_object()
</UL>

<P><STRONG><a name="[d0]"></a>us_ticker_clear_interrupt</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.us_ticker_clear_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = us_ticker_clear_interrupt &rArr; nrf_rtc_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_us_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>us_ticker_disable_interrupt</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.us_ticker_disable_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = us_ticker_disable_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_us_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>us_ticker_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.us_ticker_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = us_ticker_init &rArr; common_rtc_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_us_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[246]"></a>us_ticker_irq_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\mbed_us_ticker_api.o(i.us_ticker_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = us_ticker_irq_handler &rArr; ticker_irq_handler &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_irq_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>us_ticker_read</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.us_ticker_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = us_ticker_read &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_64bit_us_get
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_init
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_us
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_us_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>us_ticker_set_interrupt</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.us_ticker_set_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = us_ticker_set_interrupt &rArr; common_rtc_set_interrupt &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mbed_us_ticker_api.o(.constdata)
</UL>
<P><STRONG><a name="[525]"></a>wait_ms</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\mbed_wait_api_rtos.o(i.wait_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = wait_ms &rArr; wait_us &rArr; us_ticker_read &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_us
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>

<P><STRONG><a name="[608]"></a>wait_us</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, .\build\mbed_wait_api_rtos.o(i.wait_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = wait_us &rArr; us_ticker_read &rArr; common_rtc_64bit_us_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_are_interrupts_enabled
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_read
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Thread::wait(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ms
</UL>

<P><STRONG><a name="[50]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lc_ctype_c.o)(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[196]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(lc_numeric_c.o)(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
</UL>

<P><STRONG><a name="[313]"></a>void GattServer::onDataWritten&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(t._ZN10GattServer13onDataWrittenI16EddystoneServiceEEvPT_MS2_FvPK23GattWriteCallbackParamsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = void GattServer::onDataWritten&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*)) &rArr; FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*)) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[398]"></a>SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, .\build\fatfilesystem.o(t._ZN12SingletonPtrIN4rtos5MutexEEptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SingletonPtr&lang;rtos::Mutex&rang;::operator -&rang;() &rArr; rtos::Mutex::Mutex() &rArr; rtos::Mutex::constructor(const char*) &rArr; osMutexNew
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtos::Mutex::Mutex()
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::~FileBase()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::remove_filehandle(mbed::FileHandle*)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::FileBase(const char*, mbed::PathType)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::FileBase::lookup(const char*, unsigned)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[db]"></a>void EddystoneService::basicAuthorizationCallback&lang;signed char[4]&rang;(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackIA4_aEEvP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>void EddystoneService::basicAuthorizationCallback&lang;bool&rang;(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackIbEEvP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[da]"></a>void EddystoneService::basicAuthorizationCallback&lang;unsigned char&rang;(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackIhEEvP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>void EddystoneService::basicAuthorizationCallback&lang;unsigned short&rang;(GattWriteAuthCallbackParams*)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN16EddystoneService26basicAuthorizationCallbackItEEvP27GattWriteAuthCallbackParams))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata)
</UL>
<P><STRONG><a name="[312]"></a>void GattCharacteristic::setReadAuthorizationCallback&lang;EddystoneService&rang;(T1*, void(T1::*)(GattReadAuthCallbackParams*))</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(t._ZN18GattCharacteristic28setReadAuthorizationCallbackI16EddystoneServiceEEvPT_MS2_FvP26GattReadAuthCallbackParamsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = void GattCharacteristic::setReadAuthorizationCallback&lang;EddystoneService&rang;(T1*, void(T1::*)(GattReadAuthCallbackParams*))
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[311]"></a>void GattCharacteristic::setWriteAuthorizationCallback&lang;EddystoneService&rang;(T1*, void(T1::*)(GattWriteAuthCallbackParams*))</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(t._ZN18GattCharacteristic29setWriteAuthorizationCallbackI16EddystoneServiceEEvPT_MS2_FvP27GattWriteAuthCallbackParamsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = void GattCharacteristic::setWriteAuthorizationCallback&lang;EddystoneService&rang;(T1*, void(T1::*)(GattWriteAuthCallbackParams*))
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[61]"></a>void FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::membercaller&lang;BatteryService&rang;(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\main.o(t._ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE12membercallerI14BatteryServiceEEvPKS2_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::membercaller&lang;BatteryService&rang;(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._ZN14BatteryServiceC1ER3BLEh)
</UL>
<P><STRONG><a name="[b1]"></a>void FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE12membercallerI16EddystoneServiceEEvPKS2_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(t._ZN18GattCharacteristic28setReadAuthorizationCallbackI16EddystoneServiceEEvPT_MS2_FvP26GattReadAuthCallbackParamsE)
</UL>
<P><STRONG><a name="[62]"></a>FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::functioncaller(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE14functioncallerEPKS2_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;::functioncaller(const FunctionPointerWithContext&lang;GattReadAuthCallbackParams*&rang;*, GattReadAuthCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(i._ZN18GattCharacteristicC1ERK4UUIDPhtthPP13GattAttributejb)
</UL>
<P><STRONG><a name="[b2]"></a>void FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;*, GattWriteAuthCallbackParams*)</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsE12membercallerI16EddystoneServiceEEvPKS2_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;*, GattWriteAuthCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(t._ZN18GattCharacteristic29setWriteAuthorizationCallbackI16EddystoneServiceEEvPT_MS2_FvP27GattWriteAuthCallbackParamsE)
</UL>
<P><STRONG><a name="[63]"></a>FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;::functioncaller(const FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;*, GattWriteAuthCallbackParams*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsE14functioncallerEPKS2_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;::functioncaller(const FunctionPointerWithContext&lang;GattWriteAuthCallbackParams*&rang;*, GattWriteAuthCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(i._ZN18GattCharacteristicC1ERK4UUIDPhtthPP13GattAttributejb)
</UL>
<P><STRONG><a name="[b3]"></a>FunctionPointerWithContext&lang;const DiscoveredService*&rang;::functioncaller(const FunctionPointerWithContext&lang;const DiscoveredService*&rang;*, const DiscoveredService*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceE14functioncallerEPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const DiscoveredService*&rang;::functioncaller(const FunctionPointerWithContext&lang;const DiscoveredService*&rang;*, const DiscoveredService*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceEC1EPFvS2_E)
</UL>
<P><STRONG><a name="[32e]"></a>FunctionPointerWithContext&lang;const DiscoveredService*&rang;::FunctionPointerWithContext(void(*)(const DiscoveredService*))</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceEC1EPFvS2_E))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
</UL>

<P><STRONG><a name="[710]"></a>FunctionPointerWithContext&lang;const DiscoveredService*&rang;::FunctionPointerWithContext__sub_object(void(*)(const DiscoveredService*))</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceEC1EPFvS2_E), UNUSED)

<P><STRONG><a name="[32f]"></a>FunctionPointerWithContext&lang;const DiscoveredService*&rang;::operator =(const FunctionPointerWithContext&lang;const DiscoveredService*&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK17DiscoveredServiceEaSERKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FunctionPointerWithContext&lang;const DiscoveredService*&rang;::operator =(const FunctionPointerWithContext&lang;const DiscoveredService*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
</UL>

<P><STRONG><a name="[b8]"></a>void FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;*, const GattWriteCallbackParams*)</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIPK23GattWriteCallbackParamsE12membercallerI16EddystoneServiceEEvPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;*, const GattWriteCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE3addI16EddystoneServiceEEP26FunctionPointerWithContextIS2_EPT_MS9_FvS2_E)
</UL>
<P><STRONG><a name="[b9]"></a>void FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;::membercaller&lang;AuthentificationService&rang;(const FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;*, const GattWriteCallbackParams*)</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\main.o(t._ZN26FunctionPointerWithContextIPK23GattWriteCallbackParamsE12membercallerI23AuthentificationServiceEEvPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;::membercaller&lang;AuthentificationService&rang;(const FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;*, const GattWriteCallbackParams*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE3addI23AuthentificationServiceEEP26FunctionPointerWithContextIS2_EPT_MS9_FvS2_E)
</UL>
<P><STRONG><a name="[b4]"></a>FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::functioncaller(const FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;*, const DiscoveredCharacteristic*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicE14functioncallerEPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::functioncaller(const FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;*, const DiscoveredCharacteristic*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicEC1EPFvS2_E)
</UL>
<P><STRONG><a name="[330]"></a>FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::FunctionPointerWithContext(void(*)(const DiscoveredCharacteristic*))</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicEC1EPFvS2_E))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
</UL>

<P><STRONG><a name="[711]"></a>FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::FunctionPointerWithContext__sub_object(void(*)(const DiscoveredCharacteristic*))</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicEC1EPFvS2_E), UNUSED)

<P><STRONG><a name="[331]"></a>FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator =(const FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextIPK24DiscoveredCharacteristicEaSERKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator =(const FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServiceDiscovery::reset()
</UL>

<P><STRONG><a name="[66]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;*, const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery25DiscoveryCallbackParams_tEE14functioncallerEPKS4_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;*, const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev)
</UL>
<P><STRONG><a name="[361]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::FunctionPointerWithContext(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery25DiscoveryCallbackParams_tEEC1ERKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::FunctionPointerWithContext(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
</UL>

<P><STRONG><a name="[712]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;::FunctionPointerWithContext__sub_object(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::DiscoveryCallbackParams_t*&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery25DiscoveryCallbackParams_tEEC1ERKS4_), UNUSED)

<P><STRONG><a name="[67]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;*, const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery27TerminationCallbackParams_tEE14functioncallerEPKS4_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;*, const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xcharacteristicdescriptordiscoverer.o(i._ZN39nRF5xCharacteristicDescriptorDiscoverer9DiscoveryC1Ev)
</UL>
<P><STRONG><a name="[362]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::FunctionPointerWithContext(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery27TerminationCallbackParams_tEEC1ERKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::FunctionPointerWithContext(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(nRF5xCharacteristicDescriptorDiscoverer::Discovery*, ble_error_t)
</UL>

<P><STRONG><a name="[713]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::FunctionPointerWithContext__sub_object(const FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZN26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery27TerminationCallbackParams_tEEC1ERKS4_), UNUSED)

<P><STRONG><a name="[b5]"></a>FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;*, const Gap::AdvertisementCallbackParams_t*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xgap.o(t._ZN26FunctionPointerWithContextIPKN3Gap29AdvertisementCallbackParams_tEE14functioncallerEPKS4_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;*, const Gap::AdvertisementCallbackParams_t*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(t._ZN26FunctionPointerWithContextIPKN3Gap29AdvertisementCallbackParams_tEEC1EPFvS3_E)
</UL>
<P><STRONG><a name="[36f]"></a>FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::FunctionPointerWithContext(void(*)(const Gap::AdvertisementCallbackParams_t*))</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPKN3Gap29AdvertisementCallbackParams_tEEC1EPFvS3_E))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[714]"></a>FunctionPointerWithContext&lang;const Gap::AdvertisementCallbackParams_t*&rang;::FunctionPointerWithContext__sub_object(void(*)(const Gap::AdvertisementCallbackParams_t*))</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPKN3Gap29AdvertisementCallbackParams_tEEC1EPFvS3_E), UNUSED)

<P><STRONG><a name="[5a]"></a>FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;*, const Gap::DisconnectionCallbackParams_t*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\main.o(t._ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEE14functioncallerEPKS4_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::functioncaller(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;*, const Gap::DisconnectionCallbackParams_t*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE)
</UL>
<P><STRONG><a name="[6a]"></a>FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;*, BLE::OnEventsToProcessCallbackContext*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\ble.o(t._ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEE14functioncallerEPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::OnEventsToProcessCallbackContext*&rang;*, BLE::OnEventsToProcessCallbackContext*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble.o(i._ZN3BLEC1Ej)
<LI> main.o(i.main)
</UL>
<P><STRONG><a name="[ba]"></a>void FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;*, BLE::InitializationCompleteCallbackContext*)</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, .\build\eddystoneservice.o(t._ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE12membercallerI16EddystoneServiceEEvPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::membercaller&lang;EddystoneService&rang;(const FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;*, BLE::InitializationCompleteCallbackContext*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(t._ZN3BLE4initI16EddystoneServiceEE11ble_error_tPT_MS3_FvPNS_37InitializationCompleteCallbackContextEE)
</UL>
<P><STRONG><a name="[69]"></a>FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;*, BLE::InitializationCompleteCallbackContext*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\main.o(t._ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE14functioncallerEPKS3_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::functioncaller(const FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;*, BLE::InitializationCompleteCallbackContext*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._ZN3BLE4initEPFvPNS_37InitializationCompleteCallbackContextEE)
</UL>
<P><STRONG><a name="[3c2]"></a>FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::call(BLE::InitializationCompleteCallbackContext*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE4callES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;::call(BLE::InitializationCompleteCallbackContext*)
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::init(unsigned, FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>

<P><STRONG><a name="[b6]"></a>FunctionPointerWithContext&lang;bool&rang;::functioncaller(const FunctionPointerWithContext&lang;bool&rang;*, bool)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xgap.o(t._ZN26FunctionPointerWithContextIbE14functioncallerEPKS0_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;bool&rang;::functioncaller(const FunctionPointerWithContext&lang;bool&rang;*, bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(t._ZN26FunctionPointerWithContextIbEC1EPFvbE)
</UL>
<P><STRONG><a name="[36e]"></a>FunctionPointerWithContext&lang;bool&rang;::FunctionPointerWithContext(void(*)(bool))</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIbEC1EPFvbE))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::Gap__sub_object()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[715]"></a>FunctionPointerWithContext&lang;bool&rang;::FunctionPointerWithContext__sub_object(void(*)(bool))</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN26FunctionPointerWithContextIbEC1EPFvbE), UNUSED)

<P><STRONG><a name="[b7]"></a>FunctionPointerWithContext&lang;unsigned short&rang;::functioncaller(const FunctionPointerWithContext&lang;unsigned short&rang;*, unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextItE14functioncallerEPKS0_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;unsigned short&rang;::functioncaller(const FunctionPointerWithContext&lang;unsigned short&rang;*, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xgattserver.o(t._ZN26FunctionPointerWithContextItEC1EPFvtE)
</UL>
<P><STRONG><a name="[2c0]"></a>FunctionPointerWithContext&lang;unsigned short&rang;::FunctionPointerWithContext(void(*)(unsigned short))</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(t._ZN26FunctionPointerWithContextItEC1EPFvtE))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::GattServer()
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::nRF5xServiceDiscovery(nRF5xGattClient*)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::reset()
</UL>

<P><STRONG><a name="[716]"></a>FunctionPointerWithContext&lang;unsigned short&rang;::FunctionPointerWithContext__sub_object(void(*)(unsigned short))</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(t._ZN26FunctionPointerWithContextItEC1EPFvtE), UNUSED)

<P><STRONG><a name="[2c1]"></a>FunctionPointerWithContext&lang;unsigned short&rang;::operator =(const FunctionPointerWithContext&lang;unsigned short&rang;&)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrf5xgattclient.o(t._ZN26FunctionPointerWithContextItEaSERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FunctionPointerWithContext&lang;unsigned short&rang;::operator =(const FunctionPointerWithContext&lang;unsigned short&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::reset()
</UL>

<P><STRONG><a name="[30f]"></a>ReadWriteGattCharacteristic&lang;unsigned char&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(t._ZN27ReadWriteGattCharacteristicIhEC1ERK4UUIDPhhPP13GattAttributej))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ReadWriteGattCharacteristic&lang;unsigned char&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned) &rArr; GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[717]"></a>ReadWriteGattCharacteristic&lang;unsigned char&rang;::ReadWriteGattCharacteristic__sub_object(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(t._ZN27ReadWriteGattCharacteristicIhEC1ERK4UUIDPhhPP13GattAttributej), UNUSED)

<P><STRONG><a name="[310]"></a>ReadWriteGattCharacteristic&lang;unsigned short&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned short*, unsigned char, GattAttribute**, unsigned)</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(t._ZN27ReadWriteGattCharacteristicItEC1ERK4UUIDPthPP13GattAttributej))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ReadWriteGattCharacteristic&lang;unsigned short&rang;::ReadWriteGattCharacteristic(const UUID&, unsigned short*, unsigned char, GattAttribute**, unsigned) &rArr; GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[718]"></a>ReadWriteGattCharacteristic&lang;unsigned short&rang;::ReadWriteGattCharacteristic__sub_object(const UUID&, unsigned short*, unsigned char, GattAttribute**, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(t._ZN27ReadWriteGattCharacteristicItEC1ERK4UUIDPthPP13GattAttributej), UNUSED)

<P><STRONG><a name="[30e]"></a>WriteOnlyArrayGattCharacteristic&lang;unsigned char, (unsigned)16&rang;::WriteOnlyArrayGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(t._ZN32WriteOnlyArrayGattCharacteristicIhLj16EEC1ERK4UUIDPhhPP13GattAttributej))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WriteOnlyArrayGattCharacteristic&lang;unsigned char, (unsigned)16&rang;::WriteOnlyArrayGattCharacteristic(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned) &rArr; GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool) &rArr; UUID::UUID(const UUID&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattCharacteristic::GattCharacteristic(const UUID&, unsigned char*, unsigned short, unsigned short, unsigned char, GattAttribute**, unsigned, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupConfigService()
</UL>

<P><STRONG><a name="[719]"></a>WriteOnlyArrayGattCharacteristic&lang;unsigned char, (unsigned)16&rang;::WriteOnlyArrayGattCharacteristic__sub_object(const UUID&, unsigned char*, unsigned char, GattAttribute**, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, .\build\eddystoneservice.o(t._ZN32WriteOnlyArrayGattCharacteristicIhLj16EEC1ERK4UUIDPhhPP13GattAttributej), UNUSED)

<P><STRONG><a name="[36b]"></a>CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[f4]"></a>CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::~CallChainOfFunctionPointersWithContext()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::~CallChainOfFunctionPointersWithContext() &rArr; CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEE)
</UL>
<P><STRONG><a name="[71a]"></a>CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::~CallChainOfFunctionPointersWithContext__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEED1Ev), UNUSED)

<P><STRONG><a name="[2b0]"></a>CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::call(const GattClient*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xgattclient.o(t._ZN38CallChainOfFunctionPointersWithContextIPK10GattClientE4callES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::call(const GattClient*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::reset()
</UL>

<P><STRONG><a name="[2b1]"></a>CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK10GattClientE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattClient*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::reset()
</UL>

<P><STRONG><a name="[2bd]"></a>CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::call(const GattServer*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xgattserver.o(t._ZN38CallChainOfFunctionPointersWithContextIPK10GattServerE4callES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::call(const GattServer*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
</UL>

<P><STRONG><a name="[2be]"></a>CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK10GattServerE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattServer*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
</UL>

<P><STRONG><a name="[2c9]"></a>CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::call(const SecurityManager*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK15SecurityManagerE4callES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::call(const SecurityManager*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurityManager::reset()
</UL>

<P><STRONG><a name="[2ca]"></a>CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK15SecurityManagerE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const SecurityManager*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurityManager::reset()
</UL>

<P><STRONG><a name="[2b4]"></a>CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK21GattHVXCallbackParamsE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::reset()
</UL>

<P><STRONG><a name="[2b2]"></a>CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK22GattReadCallbackParamsE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::reset()
</UL>

<P><STRONG><a name="[2b6]"></a>CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::CallChainOfFunctionPointersWithContext()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK22GattReadCallbackParamsEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::GattServer()
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::GattClient()
</UL>

<P><STRONG><a name="[71b]"></a>CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::CallChainOfFunctionPointersWithContext__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK22GattReadCallbackParamsEC1Ev), UNUSED)

<P><STRONG><a name="[60e]"></a>FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, .\build\eddystoneservice.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE3addI16EddystoneServiceEEP26FunctionPointerWithContextIS2_EPT_MS9_FvS2_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*)) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void GattServer::onDataWritten&lang;EddystoneService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))
</UL>

<P><STRONG><a name="[34f]"></a>FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;AuthentificationService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*))</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, .\build\main.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE3addI23AuthentificationServiceEEP26FunctionPointerWithContextIS2_EPT_MS9_FvS2_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;AuthentificationService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*)) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
</UL>

<P><STRONG><a name="[2bc]"></a>CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::call(const GattWriteCallbackParams*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xgattserver.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE4callES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::call(const GattWriteCallbackParams*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::handleDataWrittenEvent(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[2b3]"></a>CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::reset()
</UL>

<P><STRONG><a name="[2b7]"></a>CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::CallChainOfFunctionPointersWithContext()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::GattServer()
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::GattClient()
</UL>

<P><STRONG><a name="[71c]"></a>CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::CallChainOfFunctionPointersWithContext__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsEC1Ev), UNUSED)

<P><STRONG><a name="[369]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::call(const Gap*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xgap.o(t._ZN38CallChainOfFunctionPointersWithContextIPK3GapE4callES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::call(const Gap*)
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[36a]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK3GapE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[f5]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::~CallChainOfFunctionPointersWithContext()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK3GapED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::~CallChainOfFunctionPointersWithContext() &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIPK3GapE)
</UL>
<P><STRONG><a name="[71d]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap*&rang;::~CallChainOfFunctionPointersWithContext__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPK3GapED1Ev), UNUSED)

<P><STRONG><a name="[368]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::call(const Gap::ConnectionCallbackParams_t*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\btle.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEE4callES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::call(const Gap::ConnectionCallbackParams_t*)
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::processConnectionEvent(unsigned short, Gap::Role_t, BLEProtocol::AddressType::Type, const unsigned char*, BLEProtocol::AddressType::Type, const unsigned char*, const Gap::ConnectionParams_t*)
</UL>

<P><STRONG><a name="[36c]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[f6]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext() &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEE)
</UL>
<P><STRONG><a name="[71e]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::ConnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap26ConnectionCallbackParams_tEED1Ev), UNUSED)

<P><STRONG><a name="[26d]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::add(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;&)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, .\build\main.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEE3addERK26FunctionPointerWithContextIS3_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::add(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;&) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[266]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::call(const Gap::DisconnectionCallbackParams_t*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\btle.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEE4callES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::call(const Gap::DisconnectionCallbackParams_t*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btle_handler(ble_evt_t*)
</UL>

<P><STRONG><a name="[36d]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::reset()
</UL>

<P><STRONG><a name="[f7]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext() &rArr; CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::~nRF5xGap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(.constdata__ZTV38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEE)
</UL>
<P><STRONG><a name="[71f]"></a>CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::~CallChainOfFunctionPointersWithContext__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIPKN3Gap29DisconnectionCallbackParams_tEED1Ev), UNUSED)

<P><STRONG><a name="[2d4]"></a>CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::call(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\nrf5xgattserver.o(t._ZN38CallChainOfFunctionPointersWithContextIjE4callEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::call(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
</UL>

<P><STRONG><a name="[2bf]"></a>CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::clear()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\nrf5xn.o(t._ZN38CallChainOfFunctionPointersWithContextIjE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;unsigned&rang;::clear() &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::reset()
</UL>

<P><STRONG><a name="[31a]"></a>ble_error_t BLE::init&lang;EddystoneService&rang;(T1*, void(T1::*)(BLE::InitializationCompleteCallbackContext*))</STRONG> (Thumb, 90 bytes, Stack size 88 bytes, .\build\eddystoneservice.o(t._ZN3BLE4initI16EddystoneServiceEE11ble_error_tPT_MS3_FvPNS_37InitializationCompleteCallbackContextEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_error_t BLE::init&lang;EddystoneService&rang;(T1*, void(T1::*)(BLE::InitializationCompleteCallbackContext*)) &rArr; BLE::initImplementation(FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::initImplementation(FunctionPointerWithContext&lang;BLE::InitializationCompleteCallbackContext*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
</UL>

<P><STRONG><a name="[629]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\configparamspersistence.o(t._ZN4__rw12__string_refIcSt11char_traitsIcESaIcEE10_C_inc_refEv))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[c2]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
<LI> ios.o(t._ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E)
</UL>
<P><STRONG><a name="[c3]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt5ctypeIwEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; T1* __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::ctype(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(t._ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E)
</UL>
<P><STRONG><a name="[c4]"></a>__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt7codecvtIccSt11__mbstate_tEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = __rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(t._ZSt9use_facetISt7codecvtIccSt11__mbstate_tEERKT_RKSt6locale)
</UL>
<P><STRONG><a name="[c5]"></a>__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw16__rw_facet_makerISt7codecvtIwcSt11__mbstate_tEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = __rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(t._ZSt9use_facetISt7codecvtIwcSt11__mbstate_tEERKT_RKSt6locale)
</UL>
<P><STRONG><a name="[3da]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEE6resizeEjRKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[37d]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[720]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev), UNUSED)

<P><STRONG><a name="[75]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(i.__sti___10_rwcats_cpp_64e8068e)
</UL>
<P><STRONG><a name="[721]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev), UNUSED)

<P><STRONG><a name="[37e]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw18__rw_locale_vectorISsED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[722]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw18__rw_locale_vectorISsED1Ev), UNUSED)

<P><STRONG><a name="[3d3]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[73]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; operator delete[] (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(i._ZSt13__rw_get_catsv)
</UL>
<P><STRONG><a name="[723]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(messages.o)(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev), UNUSED)

<P><STRONG><a name="[60f]"></a>T1* __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw23__rw_create_named_facetISt5ctypeIwEEEPT_S4_PKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = T1* __rw::__rw_create_named_facet&lang;std::ctype&lang;wchar_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;wchar_t&rang;::ctype(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;wchar_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[610]"></a>T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw23__rw_create_named_facetISt7codecvtIccSt11__mbstate_tEEEPT_S5_PKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[611]"></a>T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZN4__rw23__rw_create_named_facetISt7codecvtIwcSt11__mbstate_tEEEPT_S5_PKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = T1* __rw::__rw_create_named_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(T1*, const char*, unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::codecvt(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[2e2]"></a>mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::pop(EddystoneService::FrameType&)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(t._ZN4mbed14CircularBufferIN16EddystoneService9FrameTypeELj4EjE3popERS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::pop(EddystoneService::FrameType&) &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>

<P><STRONG><a name="[2e7]"></a>mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::push(const EddystoneService::FrameType&)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(t._ZN4mbed14CircularBufferIN16EddystoneService9FrameTypeELj4EjE4pushERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::push(const EddystoneService::FrameType&) &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::enqueueFrame(EddystoneService::FrameType)
</UL>

<P><STRONG><a name="[32b]"></a>mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::CircularBuffer()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN4mbed14CircularBufferIN16EddystoneService9FrameTypeELj4EjEC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
</UL>

<P><STRONG><a name="[724]"></a>mbed::CircularBuffer&lang;EddystoneService::FrameType, (unsigned)4, unsigned&rang;::CircularBuffer__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN4mbed14CircularBufferIN16EddystoneService9FrameTypeELj4EjEC1Ev), UNUSED)

<P><STRONG><a name="[14d]"></a>void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_call&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(const void*, EddystoneService::FrameType)</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE13function_callINS4_14method_contextIS1_MS1_FvS2_EEEEEvPKvS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_call&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(const void*, EddystoneService::FrameType)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE8generateINS4_14method_contextIS1_MS1_FvS2_EEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[14f]"></a>void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_dtor&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE13function_dtorINS4_14method_contextIS1_MS1_FvS2_EEEEEvPv))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE8generateINS4_14method_contextIS1_MS1_FvS2_EEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[14e]"></a>void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_move&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(void*, const void*)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE13function_moveINS4_14method_contextIS1_MS1_FvS2_EEEEEvPvPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::function_move&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)(EddystoneService::FrameType)&rang;&rang;(void*, const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEE8generateINS4_14method_contextIS1_MS1_FvS2_EEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[613]"></a>mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback(const mbed::Callback&lang;void(EddystoneService::FrameType)&rang;&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEC1ERKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback(const mbed::Callback&lang;void(EddystoneService::FrameType)&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2)
</UL>

<P><STRONG><a name="[725]"></a>mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback__sub_object(const mbed::Callback&lang;void(EddystoneService::FrameType)&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEC1ERKS4_), UNUSED)

<P><STRONG><a name="[30a]"></a>mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback&lang;EddystoneService, EddystoneService&rang;(T2*, void(T1::*)(EddystoneService::FrameType))</STRONG> (Thumb, 62 bytes, Stack size 56 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEC1IS1_S1_EEPT0_MT_FvS2_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback&lang;EddystoneService, EddystoneService&rang;(T2*, void(T1::*)(EddystoneService::FrameType))
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[726]"></a>mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback__sub_object&lang;EddystoneService, EddystoneService&rang;(T2*, void(T1::*)(EddystoneService::FrameType))</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEC1IS1_S1_EEPT0_MT_FvS2_E), UNUSED)

<P><STRONG><a name="[30c]"></a>mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[727]"></a>mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEED1Ev), UNUSED)

<P><STRONG><a name="[150]"></a>void mbed::Callback&lang;void(int)&rang;::function_call&lang;void(*)(int)&rang;(const void*, int)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEE13function_callIPS1_EEvPKvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = void mbed::Callback&lang;void(int)&rang;::function_call&lang;void(*)(int)&rang;(const void*, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eventqueue.o(.constdata__ZZN4mbed8CallbackIFviEE8generateIPS1_EEvRKT_E3ops)
</UL>
<P><STRONG><a name="[152]"></a>void mbed::Callback&lang;void(int)&rang;::function_dtor&lang;void(*)(int)&rang;(void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEE13function_dtorIPS1_EEvPv))
<BR>[Address Reference Count : 1]<UL><LI> eventqueue.o(.constdata__ZZN4mbed8CallbackIFviEE8generateIPS1_EEvRKT_E3ops)
</UL>
<P><STRONG><a name="[151]"></a>void mbed::Callback&lang;void(int)&rang;::function_move&lang;void(*)(int)&rang;(void*, const void*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEE13function_moveIPS1_EEvPvPKv))
<BR>[Address Reference Count : 1]<UL><LI> eventqueue.o(.constdata__ZZN4mbed8CallbackIFviEE8generateIPS1_EEvRKT_E3ops)
</UL>
<P><STRONG><a name="[38c]"></a>mbed::Callback&lang;void(int)&rang;::Callback(void(*)(int))</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, .\build\serialbase.o(t._ZN4mbed8CallbackIFviEEC1EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::Callback&lang;void(int)&rang;::Callback(void(*)(int))
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[728]"></a>mbed::Callback&lang;void(int)&rang;::Callback__sub_object(void(*)(int))</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\serialbase.o(t._ZN4mbed8CallbackIFviEEC1EPS1_), UNUSED)

<P><STRONG><a name="[3a4]"></a>mbed::Callback&lang;void(int)&rang;::~Callback()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::Callback&lang;void(int)&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::~EventQueue()
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::~Serial()
</UL>

<P><STRONG><a name="[729]"></a>mbed::Callback&lang;void(int)&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\eventqueue.o(t._ZN4mbed8CallbackIFviEED1Ev), UNUSED)

<P><STRONG><a name="[153]"></a>void mbed::Callback&lang;void()&rang;::function_call&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(const void*)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void mbed::Callback&lang;void()&rang;::function_call&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[156]"></a>void mbed::Callback&lang;void()&rang;::function_call&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(const void*)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, .\build\main.o(t._ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextI3BLEMS5_FvvEEEEEvPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void mbed::Callback&lang;void()&rang;::function_call&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[159]"></a>void mbed::Callback&lang;void()&rang;::function_call&lang;void(*)()&rang;(const void*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\atcmdparser.o(t._ZN4mbed8CallbackIFvvEE13function_callIPS1_EEvPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = void mbed::Callback&lang;void()&rang;::function_call&lang;void(*)()&rang;(const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atcmdparser.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops)
</UL>
<P><STRONG><a name="[155]"></a>void mbed::Callback&lang;void()&rang;::function_dtor&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvPv))
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[158]"></a>void mbed::Callback&lang;void()&rang;::function_dtor&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\main.o(t._ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextI3BLEMS5_FvvEEEEEvPv))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[15b]"></a>void mbed::Callback&lang;void()&rang;::function_dtor&lang;void(*)()&rang;(void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\atcmdparser.o(t._ZN4mbed8CallbackIFvvEE13function_dtorIPS1_EEvPv))
<BR>[Address Reference Count : 1]<UL><LI> atcmdparser.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops)
</UL>
<P><STRONG><a name="[154]"></a>void mbed::Callback&lang;void()&rang;::function_move&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(void*, const void*)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, .\build\eddystoneservice.o(t._ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvPvPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void mbed::Callback&lang;void()&rang;::function_move&lang;mbed::Callback&lang;void()&rang;::method_context&lang;EddystoneService, void(EddystoneService::*)()&rang;&rang;(void*, const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI16EddystoneServiceMS5_FvvEEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[157]"></a>void mbed::Callback&lang;void()&rang;::function_move&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(void*, const void*)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, .\build\main.o(t._ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextI3BLEMS5_FvvEEEEEvPvPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void mbed::Callback&lang;void()&rang;::function_move&lang;mbed::Callback&lang;void()&rang;::method_context&lang;BLE, void(BLE::*)()&rang;&rang;(void*, const void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops)
</UL>
<P><STRONG><a name="[15a]"></a>void mbed::Callback&lang;void()&rang;::function_move&lang;void(*)()&rang;(void*, const void*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\atcmdparser.o(t._ZN4mbed8CallbackIFvvEE13function_moveIPS1_EEvPvPKv))
<BR>[Address Reference Count : 1]<UL><LI> atcmdparser.o(.constdata__ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops)
</UL>
<P><STRONG><a name="[232]"></a>mbed::Callback&lang;void()&rang;::Callback(void(*)())</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(t._ZN4mbed8CallbackIFvvEEC1EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::Callback&lang;void()&rang;::Callback(void(*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func4&rang;
</UL>

<P><STRONG><a name="[72a]"></a>mbed::Callback&lang;void()&rang;::Callback__sub_object(void(*)())</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(t._ZN4mbed8CallbackIFvvEEC1EPS1_), UNUSED)

<P><STRONG><a name="[612]"></a>mbed::Callback&lang;void()&rang;::Callback(const mbed::Callback&lang;void()&rang;&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\socket.o(t._ZN4mbed8CallbackIFvvEEC1ERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::Callback&lang;void()&rang;::Callback(const mbed::Callback&lang;void()&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::operator =(const mbed::Callback&lang;void()&rang;&)
</UL>

<P><STRONG><a name="[72b]"></a>mbed::Callback&lang;void()&rang;::Callback__sub_object(const mbed::Callback&lang;void()&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, .\build\socket.o(t._ZN4mbed8CallbackIFvvEEC1ERKS2_), UNUSED)

<P><STRONG><a name="[71]"></a>mbed::Callback&lang;void()&rang;::~Callback()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(t._ZN4mbed8CallbackIFvvEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbed::Callback&lang;void()&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick_init()
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::detach()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::operator =(const mbed::Callback&lang;void()&rang;&)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void events::EventQueue::function_dtor&lang;mbed::Callback&lang;void()&rang;&rang;(void*)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serial.o(i._ZN4mbed6SerialD1Ev)
</UL>
<P><STRONG><a name="[72c]"></a>mbed::Callback&lang;void()&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(t._ZN4mbed8CallbackIFvvEED1Ev), UNUSED)

<P><STRONG><a name="[38d]"></a>mbed::Callback&lang;void()&rang;::operator =(const mbed::Callback&lang;void()&rang;&)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, .\build\socket.o(t._ZN4mbed8CallbackIFvvEEaSERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mbed::Callback&lang;void()&rang;::operator =(const mbed::Callback&lang;void()&rang;&) &rArr; mbed::Callback&lang;void()&rang;::Callback(const mbed::Callback&lang;void()&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::Callback(const mbed::Callback&lang;void()&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[bd]"></a>CThunk&lang;mbed::SerialBase&rang;::trampoline(mbed::SerialBase*, void*, void(mbed::SerialBase::**)(void*))</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, .\build\serialbase.o(t._ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CThunk&lang;mbed::SerialBase&rang;::trampoline(mbed::SerialBase*, void*, void(mbed::SerialBase::**)(void*))
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(t._ZN6CThunkIN4mbed10SerialBaseEE4initEPS1_MS1_FvPvES4_)
</UL>
<P><STRONG><a name="[38b]"></a>CThunk&lang;mbed::SerialBase&rang;::init(mbed::SerialBase*, void(mbed::SerialBase::*)(void*), void*)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, .\build\serialbase.o(t._ZN6CThunkIN4mbed10SerialBaseEE4initEPS1_MS1_FvPvES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CThunk&lang;mbed::SerialBase&rang;::init(mbed::SerialBase*, void(mbed::SerialBase::*)(void*), void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::SerialBase(PinName, PinName, int)
</UL>

<P><STRONG><a name="[30b]"></a>int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2)</STRONG> (Thumb, 74 bytes, Stack size 72 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue10call_everyIN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES5_EEiiT_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2) &rArr; int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback(const mbed::Callback&lang;void(EddystoneService::FrameType)&rang;&)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setupBeaconService()
</UL>

<P><STRONG><a name="[614]"></a>int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1)</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue10call_everyINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEiiT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = int events::EventQueue::call_every&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_period
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_dtor
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_delay
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::Callback(const mbed::Callback&lang;void(EddystoneService::FrameType)&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_every&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;(int, T1, T2)
</UL>

<P><STRONG><a name="[522]"></a>int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, .\build\main.o(t._ZN6events10EventQueue10call_everyIPFvvEEEiiT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = int events::EventQueue::call_every&lang;void(*)()&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_period
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_dtor
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_delay
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[c1]"></a>void events::EventQueue::function_call&lang;mbed::Callback&lang;void()&rang;&rang;(void*)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_callIN4mbed8CallbackIFvvEEEEEvPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = void events::EventQueue::function_call&lang;mbed::Callback&lang;void()&rang;&rang;(void*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> eddystoneservice.o(t._ZN6events10EventQueue7call_inIN4mbed8CallbackIFvvEEEEEiiT_)
<LI> main.o(t._ZN6events10EventQueue4callIN4mbed8CallbackIFvvEEEEEiT_)
</UL>
<P><STRONG><a name="[bf]"></a>void events::EventQueue::function_call&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_callINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEvPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = void events::EventQueue::function_call&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(t._ZN6events10EventQueue10call_everyINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEiiT_)
</UL>
<P><STRONG><a name="[60]"></a>void events::EventQueue::function_call&lang;void(*)()&rang;(void*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\main.o(t._ZN6events10EventQueue13function_callIPFvvEEEvPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = void events::EventQueue::function_call&lang;void(*)()&rang;(void*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> main.o(i._Z6blinkyv)
<LI> main.o(t._ZN6events10EventQueue7call_inIPFvvEEEiiT_)
<LI> main.o(t._ZN6events10EventQueue10call_everyIPFvvEEEiiT_)
</UL>
<P><STRONG><a name="[c0]"></a>void events::EventQueue::function_dtor&lang;mbed::Callback&lang;void()&rang;&rang;(void*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_dtorIN4mbed8CallbackIFvvEEEEEvPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = void events::EventQueue::function_dtor&lang;mbed::Callback&lang;void()&rang;&rang;(void*) &rArr; mbed::Callback&lang;void()&rang;::~Callback()
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> eddystoneservice.o(t._ZN6events10EventQueue7call_inIN4mbed8CallbackIFvvEEEEEiiT_)
<LI> main.o(t._ZN6events10EventQueue4callIN4mbed8CallbackIFvvEEEEEiT_)
</UL>
<P><STRONG><a name="[be]"></a>void events::EventQueue::function_dtor&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue13function_dtorINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEvPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void events::EventQueue::function_dtor&lang;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;&rang;(void*) &rArr; events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10() &rArr; mbed::Callback&lang;void(EddystoneService::FrameType)&rang;::~Callback()
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::context10&lang;mbed::Callback&lang;void(EddystoneService::FrameType)&rang;, EddystoneService::FrameType&rang;::~context10()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(t._ZN6events10EventQueue10call_everyINS0_9context10IN4mbed8CallbackIFvN16EddystoneService9FrameTypeEEEES6_EEEEiiT_)
</UL>
<P><STRONG><a name="[5f]"></a>void events::EventQueue::function_dtor&lang;void(*)()&rang;(void*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\main.o(t._ZN6events10EventQueue13function_dtorIPFvvEEEvPv))
<BR>[Address Reference Count : 3]<UL><LI> main.o(i._Z6blinkyv)
<LI> main.o(t._ZN6events10EventQueue7call_inIPFvvEEEiiT_)
<LI> main.o(t._ZN6events10EventQueue10call_everyIPFvvEEEiiT_)
</UL>
<P><STRONG><a name="[297]"></a>int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1)</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, .\build\main.o(t._ZN6events10EventQueue4callIN4mbed8CallbackIFvvEEEEEiT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = int events::EventQueue::call&lang;mbed::Callback&lang;void()&rang;&rang;(T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_dtor
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext*)
</UL>

<P><STRONG><a name="[2e6]"></a>int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1)</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, .\build\eddystoneservice.o(t._ZN6events10EventQueue7call_inIN4mbed8CallbackIFvvEEEEEiiT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = int events::EventQueue::call_in&lang;mbed::Callback&lang;void()&rang;&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_dtor
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_delay
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::manageRadio()
</UL>

<P><STRONG><a name="[275]"></a>int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, .\build\main.o(t._ZN6events10EventQueue7call_inIPFvvEEEiiT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1) &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_dtor
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_delay
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeout()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[347]"></a>FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator ()(const DiscoveredCharacteristic*) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\nrf5xservicediscovery.o(t._ZNK26FunctionPointerWithContextIPK24DiscoveredCharacteristicEclES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;::operator ()(const DiscoveredCharacteristic*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>

<P><STRONG><a name="[35f]"></a>FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\nrf5xcharacteristicdescriptordiscoverer.o(t._ZNK26FunctionPointerWithContextIPKN33CharacteristicDescriptorDiscovery27TerminationCallbackParams_tEE4callES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*&rang;::call(const CharacteristicDescriptorDiscovery::TerminationCallbackParams_t*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::Discovery::terminate(ble_error_t)
</UL>

<P><STRONG><a name="[2ba]"></a>FunctionPointerWithContext&lang;unsigned short&rang;::operator ()(unsigned short) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\nrf5xgattserver.o(t._ZNK26FunctionPointerWithContextItEclEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FunctionPointerWithContext&lang;unsigned short&rang;::operator ()(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::handleEvent(GattServerEvents::gattEvent_e, unsigned short)
</UL>

<P><STRONG><a name="[367]"></a>CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::operator ()(Gap::TimeoutSource_t) const</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\btle.o(t._ZNK38CallChainOfFunctionPointersWithContextIN3Gap15TimeoutSource_tEEclES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;Gap::TimeoutSource_t&rang;::operator ()(Gap::TimeoutSource_t) const
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::processTimeoutEvent(Gap::TimeoutSource_t)
</UL>

<P><STRONG><a name="[2af]"></a>CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::operator ()(const GattHVXCallbackParams*) const</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\btle_discovery.o(t._ZNK38CallChainOfFunctionPointersWithContextIPK21GattHVXCallbackParamsEclES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattHVXCallbackParams*&rang;::operator ()(const GattHVXCallbackParams*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattClient::processHVXEvent(const GattHVXCallbackParams*)
</UL>

<P><STRONG><a name="[289]"></a>CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::operator ()(const GattReadCallbackParams*) const</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\btle_discovery.o(t._ZNK38CallChainOfFunctionPointersWithContextIPK22GattReadCallbackParamsEclES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattReadCallbackParams*&rang;::operator ()(const GattReadCallbackParams*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[28a]"></a>CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::operator ()(const GattWriteCallbackParams*) const</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, .\build\btle_discovery.o(t._ZNK38CallChainOfFunctionPointersWithContextIPK23GattWriteCallbackParamsEclES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::operator ()(const GattWriteCallbackParams*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>

<P><STRONG><a name="[389]"></a>mbed::Callback&lang;void(int)&rang;::call(int) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, .\build\serialbase.o(t._ZNK4mbed8CallbackIFviEE4callEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mbed::Callback&lang;void(int)&rang;::call(int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::interrupt_handler_asynch()
</UL>

<P><STRONG><a name="[388]"></a>mbed::Callback&lang;void(int)&rang;::operator bool() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\serialbase.o(t._ZNK4mbed8CallbackIFviEEcvbEv))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::SerialBase::interrupt_handler_asynch()
</UL>

<P><STRONG><a name="[33c]"></a>SafeBool&lang;FunctionPointerWithContext&lang;const DiscoveredCharacteristic*&rang;&rang;::operator void(SafeBool_::base::*)() const() const</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\nrf5xservicediscovery.o(t._ZNK8SafeBoolI26FunctionPointerWithContextIPK24DiscoveredCharacteristicEEcvMN9SafeBool_4baseEKFvvEEv))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressCharacteristicDiscovery()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::progressServiceDiscovery()
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xServiceDiscovery::terminateCharacteristicDiscovery(ble_error_t)
</UL>

<P><STRONG><a name="[2b9]"></a>SafeBool&lang;FunctionPointerWithContext&lang;unsigned short&rang;&rang;::operator void(SafeBool_::base::*)() const() const</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\nrf5xgattserver.o(t._ZNK8SafeBoolI26FunctionPointerWithContextItEEcvMN9SafeBool_4baseEKFvvEEv))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GattServer::handleEvent(GattServerEvents::gattEvent_e, unsigned short)
</UL>

<P><STRONG><a name="[617]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNKSt13basic_filebufIcSt11char_traitsIcEE7is_openEv))
<BR><BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_open() const
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[619]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNKSt13basic_filebufIwSt11char_traitsIwEE7is_openEv))
<BR><BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_is_open() const
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[61a]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNKSt15basic_streambufIcSt11char_traitsIcEE9_C_is_eofEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[61b]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNKSt15basic_streambufIwSt11char_traitsIwEE9_C_is_eofEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::eq_int_type(const int&, const int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[630]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNKSt4fposISt11__mbstate_tEeqERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[61c]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNKSt4fposISt11__mbstate_tEplEl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
</UL>
<BR>[Calls]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +=(long)
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[620]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\main.o(t._ZNKSt6vectorIhSaIhEE3endEv))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::size() const
</UL>

<P><STRONG><a name="[61f]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::size() const</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\main.o(t._ZNKSt6vectorIhSaIhEE4sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::size() const
</UL>
<BR>[Calls]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin() const
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end() const
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[621]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\main.o(t._ZNKSt6vectorIhSaIhEE5beginEv))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::size() const
</UL>

<P><STRONG><a name="[641]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\main.o(t._ZNKSt6vectorIhSaIhEE8capacityEv))
<BR><BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[14c]"></a>std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE6do_getEiiiRKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 892 + Unknown Stack Size
<LI>Call Chain = std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[14b]"></a>std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[622]"></a>std::allocator&lang;unsigned char&rang;::deallocate(unsigned char*, unsigned)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\main.o(t._ZNSaIhE10deallocateEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::allocator&lang;unsigned char&rang;::deallocate(unsigned char*, unsigned) &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[642]"></a>std::allocator&lang;unsigned char&rang;::construct(unsigned char*, const unsigned char&)</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, .\build\main.o(t._ZNSaIhE9constructEPhRKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::allocator&lang;unsigned char&rang;::construct(unsigned char*, const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;unsigned char*, unsigned char*, std::allocator&lang;unsigned char&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&)
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[3f9]"></a>std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSoC1EPSt15basic_streambufIcSt11char_traitsIcEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 916 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*) &rArr; std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[623]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSs11_C_allocateEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[626]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSs7replaceEjjPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
</UL>

<P><STRONG><a name="[627]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSs7replaceEjjPKcjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
</UL>

<P><STRONG><a name="[625]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSs9_C_getRepEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[628]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSs9_C_unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[354]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1EPKcRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[72d]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1EPKcRKSaIcE), UNUSED)

<P><STRONG><a name="[233]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1ERKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func5&rang;
</UL>

<P><STRONG><a name="[72e]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsC1ERKSaIcE), UNUSED)

<P><STRONG><a name="[355]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSsC1ERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_allocate(unsigned, int) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[72f]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSsC1ERKSs), UNUSED)

<P><STRONG><a name="[6b]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSsD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free &rArr; _free_internal &rArr; _mutex_release &rArr; os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> ios.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
</UL>
<P><STRONG><a name="[730]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSsD1Ev), UNUSED)

<P><STRONG><a name="[3f2]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsaSEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[37b]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(t._ZNSsaSERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[62a]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE12_C_file_seekEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int) &rArr; __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _sys_istty &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[130]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()</STRONG> (Thumb, 290 bytes, Stack size 624 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE4syncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync() &rArr; const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::move(char*, const char*, unsigned)
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::encoding() const
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[12e]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE6setbufEPcl))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_set_unbuffered(bool)
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_own_buf(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[12f]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</STRONG> (Thumb, 366 bytes, Stack size 600 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEE8overflowEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int) &rArr; const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::is_open() const
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::not_eof(const int&)
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const char*, const char*, const char*&, char*, char*, char*&) const
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;char, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[3f6]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long)</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEEC1EPSt6__FILEPcl))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_get_mode(std::__FILE*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[731]"></a>std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf__sub_object(std::__FILE*, char*, long)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIcSt11char_traitsIcEEC1EPSt6__FILEPcl), UNUSED)

<P><STRONG><a name="[637]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE12_C_file_seekEli))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int) &rArr; __rw::__rw_file_t::_C_seek(long, int) &rArr; fseek &rArr; _fseek &rArr; _sys_istty &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_seek(long, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[133]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()</STRONG> (Thumb, 298 bytes, Stack size 624 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE4syncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync() &rArr; const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator ==(const std::fpos&lang;std::__mbstate_t&rang;&) const
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::move(wchar_t*, const wchar_t*, unsigned)
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::encoding() const
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[131]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE6setbufEPwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_set_unbuffered(bool)
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_own_buf(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[132]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</STRONG> (Thumb, 370 bytes, Stack size 600 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEE8overflowEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int) &rArr; const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_is_eof(int) const
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::is_open() const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;wchar_t&rang;::not_eof(const int&)
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::out(std::__mbstate_t&, const wchar_t*, const wchar_t*, const wchar_t*&, char*, char*, char*&) const
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;::always_noconv() const
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_write(const void*, unsigned, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt13basic_filebufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[3fa]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long)</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEEC1EPSt6__FILEPwl))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long) &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::fpos(long)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_file_t::_C_get_mode(std::__FILE*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[732]"></a>std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf__sub_object(std::__FILE*, wchar_t*, long)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_filebufIwSt11char_traitsIwEEC1EPSt6__FILEPwl), UNUSED)

<P><STRONG><a name="[3fd]"></a>std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt13basic_ostreamIwSt11char_traitsIwEEC1EPSt15basic_streambufIwS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 916 + Unknown Stack Size
<LI>Call Chain = std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>

<P><STRONG><a name="[631]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_own_buf(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE10_C_own_bufEb))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
</UL>

<P><STRONG><a name="[635]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_out_last(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE11_C_out_lastEb))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[632]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_set_unbuffered(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE17_C_set_unbufferedEb))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)
</UL>

<P><STRONG><a name="[634]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::sputc(char)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE5sputcEc))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[136]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::setbuf(char*, long)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[137]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIcSt11char_traitsIcEE)
</UL>
<P><STRONG><a name="[3fe]"></a>std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;::pubsetbuf(char*, long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIcSt11char_traitsIcEE9pubsetbufEPcl))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::~Init()
</UL>

<P><STRONG><a name="[63b]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_own_buf(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE10_C_own_bufEb))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
</UL>

<P><STRONG><a name="[63f]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_out_last(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE11_C_out_lastEb))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[63c]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_set_unbuffered(bool)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE17_C_set_unbufferedEb))
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)
</UL>

<P><STRONG><a name="[63e]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sputc(wchar_t)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE5sputcEw))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
</UL>

<P><STRONG><a name="[138]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::setbuf(wchar_t*, long)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE6setbufEPwl))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[139]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE8overflowEi))
<BR>[Address Reference Count : 1]<UL><LI> ios.o(.constdata__ZTVSt15basic_streambufIwSt11char_traitsIwEE)
</UL>
<P><STRONG><a name="[3ff]"></a>std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::pubsetbuf(wchar_t*, long)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt15basic_streambufIwSt11char_traitsIwEE9pubsetbufEPwl))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::~Init()
</UL>

<P><STRONG><a name="[61d]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos(const std::fpos&lang;std::__mbstate_t&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt4fposISt11__mbstate_tEC1ERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
</UL>

<P><STRONG><a name="[733]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos__sub_object(const std::fpos&lang;std::__mbstate_t&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt4fposISt11__mbstate_tEC1ERKS1_), UNUSED)

<P><STRONG><a name="[62b]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos(long)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt4fposISt11__mbstate_tEC1El))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_filebuf(std::__FILE*, wchar_t*, long)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::_C_file_seek(long, int)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::basic_filebuf(std::__FILE*, char*, long)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::_C_file_seek(long, int)
</UL>

<P><STRONG><a name="[734]"></a>std::fpos&lang;std::__mbstate_t&rang;::fpos__sub_object(long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt4fposISt11__mbstate_tEC1El), UNUSED)

<P><STRONG><a name="[62e]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator =(const std::fpos&lang;std::__mbstate_t&rang;&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt4fposISt11__mbstate_tEaSERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[61e]"></a>std::fpos&lang;std::__mbstate_t&rang;::operator +=(long)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt4fposISt11__mbstate_tEpLEl))
<BR><BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::fpos&lang;std::__mbstate_t&rang;::operator +(long) const
</UL>

<P><STRONG><a name="[646]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_destroy(unsigned char*, unsigned char*)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE10_C_destroyEPhS2_))
<BR><BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[640]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE13_C_insert_auxEPhRKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 868 + Unknown Stack Size
<LI>Call Chain = std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2 std::uninitialized_copy&lang;unsigned char*, unsigned char*, std::allocator&lang;unsigned char&rang;&rang;(T1, T1, T2, T3&)
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end()
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_destroy(unsigned char*, unsigned char*)
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;unsigned char&rang;::construct(unsigned char*, const unsigned char&)
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;unsigned char&rang;::deallocate(unsigned char*, unsigned)
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::capacity() const
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::size() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&)
</UL>

<P><STRONG><a name="[645]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE3endEv))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::clear()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[643]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE5beginEv))
<BR><BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::operator [](unsigned)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::clear()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[34b]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::clear()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::clear() &rArr; std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin()
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end()
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[647]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE5eraseEPhS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::erase(unsigned char*, unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end()
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_destroy(unsigned char*, unsigned char*)
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin() const
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end() const
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::clear()
</UL>

<P><STRONG><a name="[34c]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEE9push_backERKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 884 + Unknown Stack Size
<LI>Call Chain = std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::push_back(const unsigned char&) &rArr; std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&) &rArr; __rw::__rw_allocate(unsigned, int) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::end()
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;unsigned char&rang;::construct(unsigned char*, const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[34e]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::vector(const std::allocator&lang;unsigned char&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEEC1ERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
</UL>

<P><STRONG><a name="[735]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::vector__sub_object(const std::allocator&lang;unsigned char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEEC1ERKS0_), UNUSED)

<P><STRONG><a name="[34d]"></a>std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::operator [](unsigned)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, .\build\main.o(t._ZNSt6vectorIhSaIhEEixEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::operator [](unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::begin()
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::onDataWrittenCallback(const GattWriteCallbackParams*)
</UL>

<P><STRONG><a name="[3f8]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 900 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::init(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>

<P><STRONG><a name="[3f7]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIcSt11char_traitsIcEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios() &rArr; std::ios_base::ios_base() &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::ios_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ostream(std::basic_streambuf&lang;char, std::char_traits&lang;char&rang;&rang;*)
</UL>

<P><STRONG><a name="[736]"></a>std::basic_ios&lang;char, std::char_traits&lang;char&rang;&rang;::basic_ios__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIcSt11char_traitsIcEEC1Ev), UNUSED)

<P><STRONG><a name="[3fc]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIwSt11char_traitsIwEE4initEPSt15basic_streambufIwS1_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 900 + Unknown Stack Size
<LI>Call Chain = std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
</UL>

<P><STRONG><a name="[3fb]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIwSt11char_traitsIwEEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios() &rArr; std::ios_base::ios_base() &rArr; std::locale::locale() &rArr; std::locale::_C_init() &rArr; __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::ios_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*)
</UL>

<P><STRONG><a name="[737]"></a>std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ios__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZNSt9basic_iosIwSt11char_traitsIwEEC1Ev), UNUSED)

<P><STRONG><a name="[644]"></a>T2 std::uninitialized_copy&lang;unsigned char*, unsigned char*, std::allocator&lang;unsigned char&rang;&rang;(T1, T1, T2, T3&)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, .\build\main.o(t._ZSt18uninitialized_copyIPhS0_SaIhEET0_T_S3_S2_RT1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = T2 std::uninitialized_copy&lang;unsigned char*, unsigned char*, std::allocator&lang;unsigned char&rang;&rang;(T1, T1, T2, T3&) &rArr; std::allocator&lang;unsigned char&rang;::construct(unsigned char*, const unsigned char&)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::allocator&lang;unsigned char&rang;::construct(unsigned char*, const unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::vector&lang;unsigned char, std::allocator&lang;unsigned char&rang;&rang;::_C_insert_aux(unsigned char*, const unsigned char&)
</UL>

<P><STRONG><a name="[624]"></a>const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(t._ZSt3maxIjERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[62c]"></a>const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZSt9use_facetISt7codecvtIccSt11__mbstate_tEERKT_RKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 884 + Unknown Stack Size
<LI>Call Chain = const T1& std::use_facet&lang;std::codecvt&lang;char, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::overflow(int)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;char, std::char_traits&lang;char&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[638]"></a>const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(ios.o)(t._ZSt9use_facetISt7codecvtIwcSt11__mbstate_tEERKT_RKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 884 + Unknown Stack Size
<LI>Call Chain = const T1& std::use_facet&lang;std::codecvt&lang;wchar_t, char, std::__mbstate_t&rang;&rang;(const std::locale&) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::overflow(int)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_filebuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::sync()
</UL>

<P><STRONG><a name="[40a]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(d2f.o)(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[648]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(d2f.o)(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
</UL>

<P><STRONG><a name="[64b]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dcheck1.o)(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[64e]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dcmpi.o)(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[409]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(deqf.o)(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[64d]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(deqf.o)(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[738]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dleqf.o)(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[64f]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dleqf.o)(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[653]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dleqf.o)(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[410]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dmul.o)(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
</UL>

<P><STRONG><a name="[650]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dmul.o)(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[64a]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dnaninf.o)(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[651]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(dretinf.o)(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[40b]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(drleqf.o)(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[652]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(drleqf.o)(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[18f]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(fpinit.o)(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[739]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(fpinit.o)(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[73a]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(fpinit.o)(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[649]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(fretinf.o)(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[13]"></a>__ieee_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(istatus.o)(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[171]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(printf1.o)(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[175]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(printf2.o)(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[64c]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(retnan.o)(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[40d]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(scalbn.o)(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[207]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(scanf1.o)(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[20e]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(scanf2.o)(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[20d]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(scanf2.o)(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[654]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\fz_wm.l(trapv.o)(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[42a]"></a>__sd_nvic_irq_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\app_util_platform.o(i.__sd_nvic_irq_disable))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_enter
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
</UL>

<P><STRONG><a name="[428]"></a>sd_nvic_critical_region_enter</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, .\build\app_util_platform.o(i.sd_nvic_critical_region_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sd_nvic_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>

<P><STRONG><a name="[440]"></a>record_activate</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, .\build\ble_conn_state.o(i.record_activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = record_activate &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_first_key_index_get
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[5de]"></a>record_invalidate</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\ble_conn_state.o(i.record_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = record_invalidate &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_purge_disconnected
</UL>

<P><STRONG><a name="[43f]"></a>record_purge_disconnected</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, .\build\ble_conn_state.o(i.record_purge_disconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = record_purge_disconnected &rArr; sdk_mapped_flags_key_list_get &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_invalidate
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[442]"></a>record_set_disconnected</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\ble_conn_state.o(i.record_set_disconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = record_set_disconnected &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_update_by_key
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
</UL>

<P><STRONG><a name="[446]"></a>user_flag_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\ble_conn_state.o(i.user_flag_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
</UL>

<P><STRONG><a name="[445]"></a>user_flag_is_acquired</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\ble_conn_state.o(i.user_flag_is_acquired))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_collection
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
</UL>

<P><STRONG><a name="[7a]"></a>signalEvent()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\btle.o(i._Z11signalEventv))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = signalEvent() &rArr; BLEInstanceBase::signalEventsToProcess(unsigned) &rArr; BLE::Instance(unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLEInstanceBase::signalEventsToProcess(unsigned)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> btle.o(i.btle_init)
</UL>
<P><STRONG><a name="[7b]"></a>btle_handler(ble_evt_t*)</STRONG> (Thumb, 498 bytes, Stack size 72 bytes, .\build\btle.o(i._Z12btle_handlerP9ble_evt_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = btle_handler(ble_evt_t*) &rArr; pm_on_ble_evt &rArr; gcm_ble_evt_handler &rArr; update_pending_flags_check &rArr; local_db_update_in_evt &rArr; gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_on_ble_evt
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::call(const Gap::DisconnectionCallbackParams_t*)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::processConnectionEvent(unsigned short, Gap::Role_t, BLEProtocol::AddressType::Type, const unsigned char*, BLEProtocol::AddressType::Type, const unsigned char*, const Gap::ConnectionParams_t*)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gap::processTimeoutEvent(Gap::TimeoutSource_t)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_on_ble_evt
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGap::setConnectionHandle(unsigned short)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xCharacteristicDescriptorDiscoverer::terminate(unsigned short, ble_error_t)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xGattServer::hwCallback(ble_evt_t*)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleGattcEventHandler(const ble_evt_t*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> btle.o(i.btle_init)
</UL>
<P><STRONG><a name="[7c]"></a>sys_evt_dispatch(unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\btle.o(i._Z16sys_evt_dispatchj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_evt_dispatch(unsigned) &rArr; fs_sys_event_handler &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> btle.o(i.btle_init)
</UL>
<P><STRONG><a name="[294]"></a>addToConvertedUUIDTable(const unsigned char*, unsigned char)</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, .\build\custom_helper.o(i._Z23addToConvertedUUIDTablePKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = addToConvertedUUIDTable(const unsigned char*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_convert_to_nordic_uuid
</UL>

<P><STRONG><a name="[460]"></a>lookupConvertedUUIDTable(const unsigned char*, unsigned char*)</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, .\build\custom_helper.o(i._Z24lookupConvertedUUIDTablePKhPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lookupConvertedUUIDTable(const unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;custom_convert_to_nordic_uuid
</UL>

<P><STRONG><a name="[46b]"></a>equeue_clampdiff</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\equeue.o(i.equeue_clampdiff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = equeue_clampdiff
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tickdiff
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_enqueue
</UL>

<P><STRONG><a name="[471]"></a>equeue_dequeue</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, .\build\equeue.o(i.equeue_dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = equeue_dequeue &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tickdiff
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
</UL>

<P><STRONG><a name="[476]"></a>equeue_enqueue</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, .\build\equeue.o(i.equeue_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = equeue_enqueue &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tickdiff
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_clampdiff
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
</UL>

<P><STRONG><a name="[477]"></a>equeue_incid</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, .\build\equeue.o(i.equeue_incid))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_unqueue
</UL>

<P><STRONG><a name="[468]"></a>equeue_mem_alloc</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, .\build\equeue.o(i.equeue_mem_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = equeue_mem_alloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
</UL>

<P><STRONG><a name="[470]"></a>equeue_mem_dealloc</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, .\build\equeue.o(i.equeue_mem_dealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = equeue_mem_dealloc &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dealloc
</UL>

<P><STRONG><a name="[46c]"></a>equeue_tickdiff</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\equeue.o(i.equeue_tickdiff))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dispatch
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_unqueue
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_enqueue
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_dequeue
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_clampdiff
</UL>

<P><STRONG><a name="[469]"></a>equeue_unqueue</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, .\build\equeue.o(i.equeue_unqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = equeue_unqueue &rArr; equeue_mutex_lock &rArr; core_util_critical_section_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_unlock
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_mutex_lock
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tickdiff
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_incid
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_cancel
</UL>

<P><STRONG><a name="[276]"></a>equeue_tick_init()</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, .\build\equeue_mbed.o(i._Z16equeue_tick_initv))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::~Callback()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::Callback(void(*)())
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::Timer()
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::start()
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::TimerEvent::TimerEvent__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_tick
</UL>

<P><STRONG><a name="[5c]"></a>equeue_tick_update()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, .\build\equeue_mbed.o(i._Z18equeue_tick_updatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = equeue_tick_update() &rArr; mbed::Timer::read_ms() &rArr; mbed::Timer::read_high_resolution_us() &rArr; mbed::Timer::slicetime() &rArr; ticker_read_us &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::read_ms()
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Timer::reset()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equeue_mbed.o(i._Z16equeue_tick_initv)
</UL>
<P><STRONG><a name="[423]"></a>address_is_valid</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, .\build\fds.o(i.address_is_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = address_is_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>

<P><STRONG><a name="[44f]"></a>chunk_is_aligned</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\fds.o(i.chunk_is_aligned))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = chunk_is_aligned
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>

<P><STRONG><a name="[5e1]"></a>chunk_queue_get_and_advance</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, .\build\fds.o(i.chunk_queue_get_and_advance))
<BR><BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_write_chunk
</UL>

<P><STRONG><a name="[5d5]"></a>chunk_queue_skip</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, .\build\fds.o(i.chunk_queue_skip))
<BR><BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[463]"></a>delete_execute</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, .\build\fds.o(i.delete_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = delete_execute &rArr; record_find_and_delete &rArr; record_header_flag_dirty &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_and_delete
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_find_and_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[5d6]"></a>event_prepare</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, .\build\fds.o(i.event_prepare))
<BR><BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[48c]"></a>event_send</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\fds.o(i.event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
</UL>

<P><STRONG><a name="[465]"></a>file_find_and_delete</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, .\build\fds.o(i.file_find_and_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = file_find_and_delete &rArr; record_header_flag_dirty &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_flag_dirty
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_execute
</UL>

<P><STRONG><a name="[48f]"></a>flag_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\fds.o(i.flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_execute
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
</UL>

<P><STRONG><a name="[488]"></a>flag_is_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\fds.o(i.flag_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_reserve_cancel
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_reserve
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_file_delete
</UL>

<P><STRONG><a name="[48d]"></a>flag_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\fds.o(i.flag_set))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_execute
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
</UL>

<P><STRONG><a name="[1c]"></a>fs_event_handler</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, .\build\fds.o(i.fs_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = fs_event_handler &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fds.o(fs_data)
</UL>
<P><STRONG><a name="[4ae]"></a>gc_execute</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, .\build\fds.o(i.gc_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gc_execute &rArr; gc_next_page &rArr; gc_record_find_next &rArr; gc_page_erase &rArr; gc_swap_erase &rArr; fs_erase &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_tag_new_swap
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_swap_promote
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_state_advance
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_copy
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_page_erase
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_next_page
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[4b9]"></a>gc_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, .\build\fds.o(i.gc_init))
<BR><BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_state_advance
</UL>

<P><STRONG><a name="[4b0]"></a>gc_next_page</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_next_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gc_next_page &rArr; gc_record_find_next &rArr; gc_page_erase &rArr; gc_swap_erase &rArr; fs_erase &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_page_next
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4b3]"></a>gc_page_erase</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, .\build\fds.o(i.gc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gc_page_erase &rArr; gc_swap_erase &rArr; fs_erase &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_swap_erase
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4b6]"></a>gc_page_next</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_page_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gc_page_next
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_next_page
</UL>

<P><STRONG><a name="[4b2]"></a>gc_record_copy</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, .\build\fds.o(i.gc_record_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gc_record_copy &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4b1]"></a>gc_record_find_next</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_record_find_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gc_record_find_next &rArr; gc_page_erase &rArr; gc_swap_erase &rArr; fs_erase &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_next
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_copy
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_next_page
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4af]"></a>gc_state_advance</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_state_advance))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gc_state_advance
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_update_swap_offset
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_swap_pages
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4b7]"></a>gc_swap_erase</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_swap_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gc_swap_erase &rArr; fs_erase &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_page_erase
</UL>

<P><STRONG><a name="[4bb]"></a>gc_swap_pages</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, .\build\fds.o(i.gc_swap_pages))
<BR><BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_state_advance
</UL>

<P><STRONG><a name="[4b4]"></a>gc_swap_promote</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_swap_promote))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gc_swap_promote &rArr; page_tag_write_data &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_tag_write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4b5]"></a>gc_tag_new_swap</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\fds.o(i.gc_tag_new_swap))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gc_tag_new_swap &rArr; page_tag_write_swap &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_tag_write_swap
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
</UL>

<P><STRONG><a name="[4ba]"></a>gc_update_swap_offset</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\fds.o(i.gc_update_swap_offset))
<BR><BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_state_advance
</UL>

<P><STRONG><a name="[5a4]"></a>header_is_valid</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\fds.o(i.header_is_valid))
<BR><BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_next
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_scan
</UL>

<P><STRONG><a name="[4f1]"></a>init_execute</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, .\build\fds.o(i.init_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = init_execute &rArr; page_tag_write_swap &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_tag_write_swap
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_tag_write_data
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_set
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_clear
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[424]"></a>is_word_aligned</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\fds.o(i.is_word_aligned))
<BR><BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chunk_is_aligned
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_is_valid
</UL>

<P><STRONG><a name="[489]"></a>op_enqueue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, .\build\fds.o(i.op_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = op_enqueue &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chunk_queue_next
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_file_delete
</UL>

<P><STRONG><a name="[5da]"></a>page_from_record</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, .\build\fds.o(i.page_from_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = page_from_record
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>

<P><STRONG><a name="[60d]"></a>page_has_space</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, .\build\fds.o(i.page_has_space))
<BR><BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_space_reserve
</UL>

<P><STRONG><a name="[5a5]"></a>page_identify</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, .\build\fds.o(i.page_identify))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pages_init
</UL>

<P><STRONG><a name="[5a6]"></a>page_is_erased</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, .\build\fds.o(i.page_is_erased))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pages_init
</UL>

<P><STRONG><a name="[60c]"></a>page_offsets_update</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\fds.o(i.page_offsets_update))
<BR><BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
</UL>

<P><STRONG><a name="[5a3]"></a>page_scan</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, .\build\fds.o(i.page_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = page_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pages_init
</UL>

<P><STRONG><a name="[4bc]"></a>page_tag_write_data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\fds.o(i.page_tag_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = page_tag_write_data &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_execute
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_swap_promote
</UL>

<P><STRONG><a name="[4bd]"></a>page_tag_write_swap</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\fds.o(i.page_tag_write_swap))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = page_tag_write_swap &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_execute
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_tag_new_swap
</UL>

<P><STRONG><a name="[48e]"></a>pages_init</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, .\build\fds.o(i.pages_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pages_init &rArr; page_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_scan
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_is_erased
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_identify
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
</UL>

<P><STRONG><a name="[5d3]"></a>queue_advance</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, .\build\fds.o(i.queue_advance))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = queue_advance &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[4a9]"></a>queue_process</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, .\build\fds.o(i.queue_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + In Cycle
<LI>Call Chain = queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_advance
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_execute
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_execute
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_clear
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_prepare
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_execute
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chunk_queue_skip
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_event_handler
</UL>

<P><STRONG><a name="[48a]"></a>queue_start</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\fds.o(i.queue_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_set
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_file_delete
</UL>

<P><STRONG><a name="[493]"></a>record_find</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, .\build\fds.o(i.record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_next
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_find_and_delete
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find_in_file
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find_by_key
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
</UL>

<P><STRONG><a name="[464]"></a>record_find_and_delete</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, .\build\fds.o(i.record_find_and_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = record_find_and_delete &rArr; record_header_flag_dirty &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_flag_dirty
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_execute
</UL>

<P><STRONG><a name="[491]"></a>record_find_by_desc</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, .\build\fds.o(i.record_find_by_desc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = record_find_by_desc &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_next
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_from_record
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_and_delete
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
</UL>

<P><STRONG><a name="[4b8]"></a>record_find_next</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, .\build\fds.o(i.record_find_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;header_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gc_record_find_next
</UL>

<P><STRONG><a name="[49f]"></a>record_header_flag_dirty</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\fds.o(i.record_header_flag_dirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = record_header_flag_dirty &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_and_delete
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_find_and_delete
</UL>

<P><STRONG><a name="[5db]"></a>record_header_write_begin</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\fds.o(i.record_header_write_begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = record_header_write_begin &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
</UL>

<P><STRONG><a name="[5dc]"></a>record_header_write_finalize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, .\build\fds.o(i.record_header_write_finalize))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = record_header_write_finalize &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
</UL>

<P><STRONG><a name="[5dd]"></a>record_header_write_id</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, .\build\fds.o(i.record_header_write_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = record_header_write_id &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
</UL>

<P><STRONG><a name="[60b]"></a>record_id_new</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, .\build\fds.o(i.record_id_new))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
</UL>

<P><STRONG><a name="[5e0]"></a>record_write_chunk</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, .\build\fds.o(i.record_write_chunk))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = record_write_chunk &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chunk_queue_get_and_advance
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_execute
</UL>

<P><STRONG><a name="[498]"></a>write_enqueue</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, .\build\fds.o(i.write_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_space_reserve
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_space_free
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_id_new
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;op_enqueue
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flag_is_set
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chunk_is_aligned
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write_reserved
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_write
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_update
</UL>

<P><STRONG><a name="[5d4]"></a>write_execute</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, .\build\fds.o(i.write_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = write_execute &rArr; record_write_chunk &rArr; fs_store &rArr; queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_write_chunk
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_write_id
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_write_finalize
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_write_begin
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_header_flag_dirty
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_find_by_desc
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_offsets_update
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[49e]"></a>write_space_free</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\fds.o(i.write_space_free))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_reserve_cancel
</UL>

<P><STRONG><a name="[49c]"></a>write_space_reserve</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, .\build\fds.o(i.write_space_reserve))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_space_reserve
</UL>
<BR>[Calls]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_has_space
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_enqueue
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_reserve
</UL>

<P><STRONG><a name="[4a6]"></a>check_config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\fstorage.o(i.check_config))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>

<P><STRONG><a name="[5d8]"></a>erase_execute</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, .\build\fstorage.o(i.erase_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = erase_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[4aa]"></a>fs_flash_page_end_addr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, .\build\fstorage.o(i.fs_flash_page_end_addr))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_init
</UL>

<P><STRONG><a name="[4ac]"></a>on_operation_failure</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, .\build\fstorage.o(i.on_operation_failure))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = on_operation_failure &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_event
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_advance
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
</UL>

<P><STRONG><a name="[4ab]"></a>on_operation_success</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, .\build\fstorage.o(i.on_operation_success))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = on_operation_success &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_event
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_advance
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
</UL>

<P><STRONG><a name="[53d]"></a>queue_advance</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, .\build\fstorage.o(i.queue_advance))
<BR><BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_operation_success
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_operation_failure
</UL>

<P><STRONG><a name="[4a7]"></a>queue_get_next_free</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, .\build\fstorage.o(i.queue_get_next_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = queue_get_next_free &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>

<P><STRONG><a name="[4ad]"></a>queue_process</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, .\build\fstorage.o(i.queue_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_execute
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_event
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_sys_event_handler
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_start
</UL>

<P><STRONG><a name="[4a8]"></a>queue_start</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\fstorage.o(i.queue_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = queue_start &rArr; queue_process &rArr; send_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_store
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_erase
</UL>

<P><STRONG><a name="[53c]"></a>send_event</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\fstorage.o(i.send_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = send_event
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_operation_success
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_operation_failure
</UL>

<P><STRONG><a name="[5d7]"></a>store_execute</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, .\build\fstorage.o(i.store_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = store_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_process
</UL>

<P><STRONG><a name="[42b]"></a>apply_pending_flags_check</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, .\build\gatt_cache_manager.o(i.apply_pending_flags_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = apply_pending_flags_check &rArr; local_db_apply_in_evt &rArr; gscm_local_db_cache_apply &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_collection
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_conn_handles
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_any_set
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
</UL>

<P><STRONG><a name="[4c3]"></a>cccd_written</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, .\build\gatt_cache_manager.o(i.cccd_written))
<BR><BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
</UL>

<P><STRONG><a name="[80]"></a>gccm_evt_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\gatt_cache_manager.o(i.gccm_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> gatt_cache_manager.o(i.gcm_init)
</UL>
<P><STRONG><a name="[7f]"></a>gscm_evt_handler</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, .\build\gatt_cache_manager.o(i.gscm_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = gscm_evt_handler &rArr; service_changed_pending_flags_check &rArr; service_changed_send_in_evt &rArr; gscm_db_change_notification_done &rArr; pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_cache_manager.o(i.gcm_init)
</UL>
<P><STRONG><a name="[81]"></a>im_evt_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, .\build\gatt_cache_manager.o(i.im_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = im_evt_handler &rArr; local_db_apply_in_evt &rArr; gscm_local_db_cache_apply &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_service_changed_ind_needed
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_cache_manager.o(i.gcm_init)
</UL>
<P><STRONG><a name="[4cb]"></a>internal_state_reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\gatt_cache_manager.o(i.internal_state_reset))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_init
</UL>

<P><STRONG><a name="[430]"></a>local_db_apply_in_evt</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, .\build\gatt_cache_manager.o(i.local_db_apply_in_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = local_db_apply_in_evt &rArr; gscm_local_db_cache_apply &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_send_in_evt
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_evt_handler
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
</UL>

<P><STRONG><a name="[4c4]"></a>local_db_update_in_evt</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, .\build\gatt_cache_manager.o(i.local_db_update_in_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = local_db_update_in_evt &rArr; gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_local_db_cache_update
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_evt_handler
</UL>

<P><STRONG><a name="[42d]"></a>sdk_mapped_flags_any_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\gatt_cache_manager.o(i.sdk_mapped_flags_any_set))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pending_flags_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_pending_flags_check
</UL>

<P><STRONG><a name="[4c6]"></a>service_changed_pending_flags_check</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, .\build\gatt_cache_manager.o(i.service_changed_pending_flags_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = service_changed_pending_flags_check &rArr; service_changed_send_in_evt &rArr; gscm_db_change_notification_done &rArr; pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_collection
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_conn_handles
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_send_in_evt
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_any_set
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_evt_handler
</UL>

<P><STRONG><a name="[5ed]"></a>service_changed_send_in_evt</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, .\build\gatt_cache_manager.o(i.service_changed_send_in_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = service_changed_send_in_evt &rArr; gscm_db_change_notification_done &rArr; pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_service_changed_ind_send
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_db_change_notification_done
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_apply_in_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_flags_check
</UL>

<P><STRONG><a name="[82]"></a>smd_evt_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, .\build\gatt_cache_manager.o(i.smd_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = smd_evt_handler &rArr; local_db_update_in_evt &rArr; gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_update_in_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_cache_manager.o(i.gcm_init)
</UL>
<P><STRONG><a name="[4c5]"></a>update_pending_flags_check</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, .\build\gatt_cache_manager.o(i.update_pending_flags_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = update_pending_flags_check &rArr; local_db_update_in_evt &rArr; gscm_local_db_cache_update &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_collection
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_conn_handles
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_any_set
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_db_update_in_evt
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_ble_evt_handler
</UL>

<P><STRONG><a name="[4c0]"></a>internal_state_reset</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\gattc_cache_manager.o(i.internal_state_reset))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gccm_init
</UL>

<P><STRONG><a name="[7e]"></a>pdb_evt_handler</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\build\gattc_cache_manager.o(i.pdb_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pdb_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_cache_manager.o(i.gccm_init)
</UL>
<P><STRONG><a name="[4da]"></a>internal_state_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\gatts_cache_manager.o(i.internal_state_reset))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gscm_init
</UL>

<P><STRONG><a name="[85]"></a>pdb_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, .\build\gatts_cache_manager.o(i.pdb_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = pdb_evt_handler &rArr; service_changed_pending_set &rArr; pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_changed_pending_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatts_cache_manager.o(i.gscm_init)
</UL>
<P><STRONG><a name="[5a9]"></a>service_changed_pending_set</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, .\build\gatts_cache_manager.o(i.service_changed_pending_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = service_changed_pending_set &rArr; pdb_raw_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_next_peer_id_get
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_raw_store
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[4d0]"></a>gpio_apply_config</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, .\build\gpio_api.o(i.gpio_apply_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode
</UL>

<P><STRONG><a name="[83]"></a>gpiote_irq_handler</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, .\build\gpio_api.o(i.gpiote_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpiote_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gpio_api.o(i.gpio_apply_config)
</UL>
<P><STRONG><a name="[4d4]"></a>gpiote_pin_uninit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, .\build\gpio_api.o(i.gpiote_pin_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gpiote_pin_uninit &rArr; nrf_drv_gpiote_out_uninit &rArr; nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode
</UL>

<P><STRONG><a name="[4e7]"></a>evt_send</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, .\build\id_manager.o(i.evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_ble_evt_handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[4ee]"></a>internal_state_reset</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, .\build\id_manager.o(i.internal_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = internal_state_reset &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_register
</UL>

<P><STRONG><a name="[86]"></a>pdb_evt_handler</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, .\build\id_manager.o(i.pdb_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = pdb_evt_handler &rArr; pdb_read_buf_get &rArr; pds_peer_data_read_ptr_get &rArr; find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_next_peer_id_get
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_duplicate_bonding_data
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> id_manager.o(i.im_register)
</UL>
<P><STRONG><a name="[4eb]"></a>peer_id_set</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, .\build\id_manager.o(i.peer_id_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = peer_id_set &rArr; get_connection_by_conn_handle &rArr; ble_conn_state_user_flag_get &rArr; sdk_mapped_flags_get_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_connection_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_new_peer_id
</UL>

<P><STRONG><a name="[524]"></a>gpio_write</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\mbed_board.o(i.gpio_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed_die
</UL>

<P><STRONG><a name="[413]"></a>mbed_cpy_nvic</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\mbed_boot.o(i.mbed_cpy_nvic))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[41a]"></a>_gpio_init_out</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, .\build\mbed_gpio.o(i._gpio_init_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init_out_ex
</UL>

<P><STRONG><a name="[41c]"></a>gpio_write</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, .\build\mbed_gpio.o(i.gpio_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gpio_init_out
</UL>

<P><STRONG><a name="[25b]"></a>init_serial()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, .\build\mbed_retarget.o(i._Z11init_serialv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = init_serial() &rArr; serial_init &rArr; internal_set_hwfc &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_baud
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_write
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[284]"></a>handle_open_errors(int, unsigned)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\build\mbed_retarget.o(i._Z18handle_open_errorsij))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = handle_open_errors(int, unsigned) &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
</UL>

<P><STRONG><a name="[607]"></a>convert_timestamp</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, .\build\mbed_ticker_api.o(i.convert_timestamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = convert_timestamp
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_present_time
</UL>

<P><STRONG><a name="[4f2]"></a>initialize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, .\build\mbed_ticker_api.o(i.initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_present_time
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_set_handler
</UL>

<P><STRONG><a name="[4f4]"></a>schedule_interrupt</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\mbed_ticker_api.o(i.schedule_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_present_time
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_irq_handler
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_remove_event
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_insert_event_us
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize
</UL>

<P><STRONG><a name="[606]"></a>set_handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\mbed_ticker_api.o(i.set_handler))
<BR><BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_set_handler
</UL>

<P><STRONG><a name="[4f3]"></a>update_present_time</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, .\build\mbed_ticker_api.o(i.update_present_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_timestamp
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_irq_handler
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_read_us
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker_insert_event_us
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_interrupt
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialize
</UL>

<P><STRONG><a name="[45e]"></a>__sd_nvic_irq_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\nordic_critical.o(i.__sd_nvic_irq_disable))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_exit
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_enter
</UL>

<P><STRONG><a name="[45d]"></a>sd_nvic_critical_region_enter</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, .\build\nordic_critical.o(i.sd_nvic_critical_region_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sd_nvic_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_util_critical_section_enter
</UL>

<P><STRONG><a name="[65]"></a>&lang;Func6&rang;</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i.<Func6>))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = &lang;Func6&rang; &rArr; nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic() &rArr; UUID::UUID(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xDiscoveredCharacteristic::nRF5xDiscoveredCharacteristic()
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf5xn.o(i._ZN21nRF5xServiceDiscoveryC1EP15nRF5xGattClient)
</UL>
<P><STRONG><a name="[27c]"></a>getDeviceInstance()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, .\build\nrf5xn.o(i._Z17getDeviceInstancev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getDeviceInstance() &rArr; nRF5xn::nRF5xn() &rArr; mbed::Ticker::Ticker() &rArr; mbed::TimerEvent::TimerEvent__sub_object() &rArr; ticker_set_handler &rArr; initialize &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::nRF5xn()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nRF5xn::Instance(unsigned)
</UL>

<P><STRONG><a name="[52a]"></a>item_dequeue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\nrf_drv_clock.o(i.item_dequeue))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_clock_on_soc_event
</UL>

<P><STRONG><a name="[534]"></a>channel_free</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.channel_free))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[23c]"></a>channel_handler_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.channel_handler_get))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[530]"></a>channel_port_alloc</STRONG> (Thumb, 122 bytes, Stack size 36 bytes, .\build\nrf_drv_gpiote.o(i.channel_port_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
</UL>

<P><STRONG><a name="[23d]"></a>channel_port_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.channel_port_get))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[531]"></a>nrf_gpio_cfg</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_default
</UL>

<P><STRONG><a name="[533]"></a>nrf_gpio_cfg_default</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpio_cfg_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_default &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[23e]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpio_cfg_sense_set))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[537]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[536]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[539]"></a>nrf_gpiote_event_addr_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpiote_event_addr_get))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
</UL>

<P><STRONG><a name="[23b]"></a>nrf_gpiote_event_clear</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpiote_event_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[23a]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpiote_event_is_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpiote_event_is_set
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[52e]"></a>nrf_gpiote_int_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpiote_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>

<P><STRONG><a name="[532]"></a>nrf_gpiote_te_default</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.nrf_gpiote_te_default))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[52f]"></a>pin_in_use_by_gpiote</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.pin_in_use_by_gpiote))
<BR><BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
</UL>

<P><STRONG><a name="[52c]"></a>pin_in_use_by_port</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.pin_in_use_by_port))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[52d]"></a>pin_in_use_by_te</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.pin_in_use_by_te))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_disable
</UL>

<P><STRONG><a name="[535]"></a>pin_in_use_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\nrf_drv_gpiote.o(i.pin_in_use_clear))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_uninit
</UL>

<P><STRONG><a name="[a1]"></a>fds_evt_handler</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, .\build\peer_data_storage.o(i.fds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = fds_evt_handler &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_free
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_key_to_peer_data_id
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_evt_send
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_id_to_peer_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peer_data_storage.o(i.pds_register)
</UL>
<P><STRONG><a name="[482]"></a>file_id_to_peer_id</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\peer_data_storage.o(i.file_id_to_peer_id))
<BR><BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_evt_handler
</UL>

<P><STRONG><a name="[4a0]"></a>find_fds_item</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, .\build\peer_data_storage.o(i.find_fds_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = find_fds_item &rArr; fds_record_find &rArr; record_find &rArr; record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_to_file_id
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_id_to_record_key
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_read_ptr_get
</UL>

<P><STRONG><a name="[4fc]"></a>internal_state_reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\peer_data_storage.o(i.internal_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = internal_state_reset &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_register
</UL>

<P><STRONG><a name="[486]"></a>pds_evt_send</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\peer_data_storage.o(i.pds_evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pds_evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_evt_handler
</UL>

<P><STRONG><a name="[485]"></a>peer_data_clear</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, .\build\peer_data_storage.o(i.peer_data_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find_in_file
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_file_delete
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_get_next_deleted
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_free
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_to_file_id
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_free
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_evt_handler
</UL>

<P><STRONG><a name="[4a2]"></a>peer_data_id_to_record_key</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\peer_data_storage.o(i.peer_data_id_to_record_key))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepared
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_ids_init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_fds_item
</UL>

<P><STRONG><a name="[4a1]"></a>peer_id_to_file_id</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\peer_data_storage.o(i.peer_id_to_file_id))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepared
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_clear
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_fds_item
</UL>

<P><STRONG><a name="[5bf]"></a>peer_ids_init</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, .\build\peer_data_storage.o(i.peer_ids_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_open
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_find_by_key
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_record_close
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_allocate
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_id_to_record_key
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_id_to_peer_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_is_allocated
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_free
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_id_allocate
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_next_peer_id_get
</UL>

<P><STRONG><a name="[483]"></a>record_key_to_peer_data_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\peer_data_storage.o(i.record_key_to_peer_data_id))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fds_evt_handler
</UL>

<P><STRONG><a name="[4fd]"></a>internal_state_reset</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, .\build\peer_database.o(i.internal_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = internal_state_reset &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_invalidate
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_register
</UL>

<P><STRONG><a name="[5be]"></a>pdb_evt_send</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, .\build\peer_database.o(i.pdb_evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pdb_evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_evt_handler
</UL>

<P><STRONG><a name="[a0]"></a>pds_evt_handler</STRONG> (Thumb, 462 bytes, Stack size 40 bytes, .\build\peer_database.o(i.pds_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = pds_evt_handler &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_release
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peer_database.o(i.pdb_register)
</UL>
<P><STRONG><a name="[5bb]"></a>peer_data_const_point_to_buffer</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, .\build\peer_database.o(i.peer_data_const_point_to_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = peer_data_const_point_to_buffer &rArr; peer_data_point_to_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_point_to_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
</UL>

<P><STRONG><a name="[5b8]"></a>peer_data_point_to_buffer</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, .\build\peer_database.o(i.peer_data_point_to_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = peer_data_point_to_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_data_const_point_to_buffer
</UL>

<P><STRONG><a name="[5bc]"></a>write_buf_length_words_set</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, .\build\peer_database.o(i.write_buf_length_words_set))
<BR><BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
</UL>

<P><STRONG><a name="[5b3]"></a>write_buffer_record_find</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, .\build\peer_database.o(i.write_buffer_record_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = write_buffer_record_find &rArr; write_buffer_record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find_next
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find_unused
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_evt_handler
</UL>

<P><STRONG><a name="[5ac]"></a>write_buffer_record_find_next</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, .\build\peer_database.o(i.write_buffer_record_find_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = write_buffer_record_find_next
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_free
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
</UL>

<P><STRONG><a name="[60a]"></a>write_buffer_record_find_unused</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\peer_database.o(i.write_buffer_record_find_unused))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = write_buffer_record_find_unused &rArr; write_buffer_record_find &rArr; write_buffer_record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_get
</UL>

<P><STRONG><a name="[5b5]"></a>write_buffer_record_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\peer_database.o(i.write_buffer_record_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = write_buffer_record_get &rArr; write_buffer_record_find_unused &rArr; write_buffer_record_find &rArr; write_buffer_record_find_next
</UL>
<BR>[Calls]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_find_unused
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
</UL>

<P><STRONG><a name="[4fe]"></a>write_buffer_record_invalidate</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, .\build\peer_database.o(i.write_buffer_record_invalidate))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_release
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_state_reset
</UL>

<P><STRONG><a name="[5ba]"></a>write_buffer_record_release</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, .\build\peer_database.o(i.write_buffer_record_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = write_buffer_record_release &rArr; pm_buffer_release &rArr; pm_mutex_unlock &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_buffer_release
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_buffer_record_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_evt_handler
</UL>

<P><STRONG><a name="[5ae]"></a>write_or_update</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, .\build\peer_database.o(i.write_or_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepared
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write_prepare_cancel
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_write
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_update
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pds_peer_data_read_ptr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_raw_store
</UL>

<P><STRONG><a name="[450]"></a>claim</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, .\build\peer_id.o(i.claim))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock_first_available
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_delete
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_allocate
</UL>

<P><STRONG><a name="[4ff]"></a>internal_state_reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\peer_id.o(i.internal_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = internal_state_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_init
</UL>

<P><STRONG><a name="[5cd]"></a>release</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, .\build\peer_id.o(i.release))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = release &rArr; pm_mutex_unlock &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_id_free
</UL>

<P><STRONG><a name="[4c8]"></a>evt_send</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, .\build\peer_manager.o(i.evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_evt_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_evt_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gcm_evt_handler
</UL>

<P><STRONG><a name="[a4]"></a>gcm_evt_handler</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, .\build\peer_manager.o(i.gcm_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gcm_evt_handler &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peer_manager.o(i.pm_init)
</UL>
<P><STRONG><a name="[a5]"></a>im_evt_handler</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, .\build\peer_manager.o(i.im_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = im_evt_handler &rArr; pm_peer_delete &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_peer_delete
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peer_manager.o(i.pm_init)
</UL>
<P><STRONG><a name="[500]"></a>internal_state_reset</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, .\build\peer_manager.o(i.internal_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = internal_state_reset &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_init
</UL>

<P><STRONG><a name="[a2]"></a>pdb_evt_handler</STRONG> (Thumb, 444 bytes, Stack size 56 bytes, .\build\peer_manager.o(i.pdb_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = pdb_evt_handler &rArr; pdb_next_peer_id_get &rArr; pds_next_peer_id_get &rArr; peer_ids_init &rArr; peer_id_allocate &rArr; claim &rArr; pm_mutex_lock_first_available &rArr; lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_next_peer_id_get
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peer_manager.o(i.pm_init)
</UL>
<P><STRONG><a name="[a3]"></a>sm_evt_handler</STRONG> (Thumb, 424 bytes, Stack size 48 bytes, .\build\peer_manager.o(i.sm_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = sm_evt_handler &rArr; ble_conn_state_user_flag_set &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peer_manager.o(i.pm_init)
</UL>
<P><STRONG><a name="[520]"></a>lock_by_mask</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, .\build\pm_mutex.o(i.lock_by_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lock_by_mask &rArr; app_util_critical_region_enter &rArr; sd_nvic_critical_region_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock_first_available
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_mutex_lock
</UL>

<P><STRONG><a name="[1a]"></a>default_idle_hook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, .\build\rtos_idle.o(i.default_idle_hook))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = default_idle_hook &rArr; hal_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtos_idle.o(.data)
</UL>
<P><STRONG><a name="[235]"></a>EventFlagsCheck</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\rtx_evflags.o(i.EventFlagsCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EventFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_736f7bde__atomic_chk32_any
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_736f7bde__atomic_chk32_all
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsWait
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxEventFlagsPostProcess
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxEventFlagsWait
</UL>

<P><STRONG><a name="[238]"></a>EventFlagsSet</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, .\build\rtx_evflags.o(i.EventFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EventFlagsSet
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_rtx_evflags_c_736f7bde__atomic_set32
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxEventFlagsSet
</UL>

<P><STRONG><a name="[544]"></a>__get_BASEPRI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(i.__get_BASEPRI))
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>

<P><STRONG><a name="[542]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>

<P><STRONG><a name="[543]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_evflags.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>

<P><STRONG><a name="[502]"></a>isrRtxEventFlagsWait</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, .\build\rtx_evflags.o(i.isrRtxEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = isrRtxEventFlagsWait &rArr; EventFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitNotCompleted
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsWaitCompleted
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxEventFlagsError
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventFlagsCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[5f8]"></a>ExtTick_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, .\build\rtx_kernel.o(i.ExtTick_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[54c]"></a>__get_BASEPRI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_kernel.o(i.__get_BASEPRI))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[54e]"></a>__get_CONTROL</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_kernel.o(i.__get_CONTROL))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[54a]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_kernel.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[54b]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_kernel.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[417]"></a>os_kernel_is_active</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\rtx_lib.o(i.os_kernel_is_active))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = os_kernel_is_active &rArr; osKernelGetState &rArr; svcRtxKernelGetState
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perthread_libspace
</UL>

<P><STRONG><a name="[23f]"></a>MessageQueueGet</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, .\build\rtx_msgqueue.o(i.MessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MessageQueueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_dec32_nz
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_wr8
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isrRtxMessageQueueGet
</UL>

<P><STRONG><a name="[242]"></a>MessageQueuePut</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, .\build\rtx_msgqueue.o(i.MessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MessageQueuePut
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc32
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueuePut
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[575]"></a>MessageQueueRemove</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(i.MessageQueueRemove))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMessageQueueGet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMessageQueuePostProcess
</UL>

<P><STRONG><a name="[556]"></a>__get_BASEPRI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(i.__get_BASEPRI))
<BR><BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[554]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[555]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_msgqueue.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[506]"></a>isrRtxMessageQueueGet</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, .\build\rtx_msgqueue.o(i.isrRtxMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = isrRtxMessageQueueGet &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageQueueGet
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueRetrieved
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotRetrieved
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[50b]"></a>isrRtxMessageQueuePut</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, .\build\rtx_msgqueue.o(i.isrRtxMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = isrRtxMessageQueuePut &rArr; osRtxPostProcess &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueNotInserted
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueInsertPending
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EvrRtxMessageQueueError
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[55e]"></a>__get_BASEPRI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_mutex.o(i.__get_BASEPRI))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[55c]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_mutex.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[55d]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_mutex.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[50f]"></a>isr_queue_get</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, .\build\rtx_system.o(i.isr_queue_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isr_queue_get
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_dec16_nz
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>

<P><STRONG><a name="[512]"></a>isr_queue_put</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, .\build\rtx_system.o(i.isr_queue_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = isr_queue_put
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lim
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_system_c_024f2f18__atomic_inc16_lt
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
</UL>

<P><STRONG><a name="[252]"></a>ThreadFlagsCheck</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, .\build\rtx_thread.o(i.ThreadFlagsCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ThreadFlagsCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_chk32_any
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_rtx_thread_c_add96be5__atomic_chk32_all
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[59f]"></a>__get_BASEPRI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.__get_BASEPRI))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadContextNew
</UL>

<P><STRONG><a name="[59d]"></a>__get_IPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.__get_IPSR))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadContextNew
</UL>

<P><STRONG><a name="[59e]"></a>__get_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.__get_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadContextNew
</UL>

<P><STRONG><a name="[589]"></a>osRtxKernelGetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxKernelGetState))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[58d]"></a>osRtxThreadFree</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, .\build\rtx_thread.o(i.osRtxThreadFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osRtxThreadFree &rArr; osRtxMemoryFree
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[58a]"></a>osRtxThreadGetRunning</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadGetRunning))
<BR><BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStackCheck
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadGetId
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[603]"></a>osRtxThreadSetRunning</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\rtx_thread.o(i.osRtxThreadSetRunning))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[59a]"></a>TimerInsert</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, .\build\rtx_timer.o(i.TimerInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TimerInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[599]"></a>TimerUnlink</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\rtx_timer.o(i.TimerUnlink))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTimerTick
</UL>

<P><STRONG><a name="[5e2]"></a>sdk_mapped_flags_get_by_index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\sdk_mapped_flags.o(i.sdk_mapped_flags_get_by_index))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_key_list_get
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_get_by_key
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_first_key_index_get
</UL>

<P><STRONG><a name="[431]"></a>auth_status_failure_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\security_dispatcher.o(i.auth_status_failure_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = auth_status_failure_process &rArr; link_secure_failure &rArr; pairing_failure &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_failure
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_process
</UL>

<P><STRONG><a name="[433]"></a>auth_status_process</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, .\build\security_dispatcher.o(i.auth_status_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = auth_status_process &rArr; auth_status_success_process &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_failure_process
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>

<P><STRONG><a name="[434]"></a>auth_status_success_process</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, .\build\security_dispatcher.o(i.auth_status_success_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = auth_status_success_process &rArr; pdb_write_buf_store &rArr; write_or_update &rArr; pds_peer_data_write_prepared &rArr; fds_record_write_reserved &rArr; write_enqueue &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_role
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_process
</UL>

<P><STRONG><a name="[45b]"></a>conn_sec_update_process</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.conn_sec_update_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = conn_sec_update_process &rArr; encryption_failure &rArr; ble_conn_state_user_flag_set &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_mitm_protected
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_encrypted
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_failure
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>

<P><STRONG><a name="[466]"></a>disconnect_process</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, .\build\security_dispatcher.o(i.disconnect_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = disconnect_process &rArr; link_secure_failure &rArr; pairing_failure &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_failure
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>

<P><STRONG><a name="[45c]"></a>encryption_failure</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, .\build\security_dispatcher.o(i.encryption_failure))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = encryption_failure &rArr; ble_conn_state_user_flag_set &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_failure
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
</UL>

<P><STRONG><a name="[439]"></a>evt_send</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, .\build\security_dispatcher.o(i.evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_start_send
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_request_process
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_params_request_process
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pairing_failure
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_failure
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_sec_update_process
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_success_process
</UL>

<P><STRONG><a name="[4a3]"></a>flag_id_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\security_dispatcher.o(i.flag_id_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flag_id_init &rArr; ble_conn_state_user_flag_acquire
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_register
</UL>

<P><STRONG><a name="[516]"></a>link_secure_central</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, .\build\security_dispatcher.o(i.link_secure_central))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_start_send
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_new_peer
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_link_secure
</UL>

<P><STRONG><a name="[517]"></a>link_secure_central_existing_peer</STRONG> (Thumb, 234 bytes, Stack size 72 bytes, .\build\security_dispatcher.o(i.link_secure_central_existing_peer))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_master_id_is_valid
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central
</UL>

<P><STRONG><a name="[518]"></a>link_secure_central_new_peer</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, .\build\security_dispatcher.o(i.link_secure_central_new_peer))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = link_secure_central_new_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_get
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_store_prepare
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_peer_allocate
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central
</UL>

<P><STRONG><a name="[432]"></a>link_secure_failure</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.link_secure_failure))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = link_secure_failure &rArr; pairing_failure &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pairing_failure
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encryption_failure
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disconnect_process
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auth_status_failure_process
</UL>

<P><STRONG><a name="[5f0]"></a>link_secure_peripheral</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, .\build\security_dispatcher.o(i.link_secure_peripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = link_secure_peripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_link_secure
</UL>

<P><STRONG><a name="[51d]"></a>pairing_failure</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, .\build\security_dispatcher.o(i.pairing_failure))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = pairing_failure &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_write_buf_release
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_failure
</UL>

<P><STRONG><a name="[a9]"></a>pdb_evt_handler</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.pdb_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pdb_evt_handler &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_conn_handle_get
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> security_dispatcher.o(i.smd_register)
</UL>
<P><STRONG><a name="[5e3]"></a>sec_info_request_process</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, .\build\security_dispatcher.o(i.sec_info_request_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = sec_info_request_process &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_read_buf_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_master_id
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_master_ids_compare
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_start_send
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_proc_start
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>

<P><STRONG><a name="[5e4]"></a>sec_params_request_process</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.sec_params_request_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sec_params_request_process &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>

<P><STRONG><a name="[519]"></a>sec_proc_start</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, .\build\security_dispatcher.o(i.sec_proc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_free
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_new_peer_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_new_peer
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central_existing_peer
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[5e5]"></a>sec_request_process</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.sec_request_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sec_request_process &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_ble_evt_handler
</UL>

<P><STRONG><a name="[51a]"></a>sec_start_send</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, .\build\security_dispatcher.o(i.sec_start_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sec_start_send &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_info_request_process
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_central
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>

<P><STRONG><a name="[47f]"></a>events_send_from_err_code</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, .\build\security_manager.o(i.events_send_from_err_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = events_send_from_err_code &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure
</UL>

<P><STRONG><a name="[480]"></a>evt_send</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, .\build\security_manager.o(i.evt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_evt_handler
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_req
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events_send_from_err_code
</UL>

<P><STRONG><a name="[4a4]"></a>flag_id_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\security_manager.o(i.flag_id_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flag_id_init &rArr; ble_conn_state_user_flag_acquire
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_register
</UL>

<P><STRONG><a name="[4a5]"></a>flags_set_from_err_code</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, .\build\security_manager.o(i.flags_set_from_err_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = flags_set_from_err_code &rArr; ble_conn_state_user_flag_set &rArr; sdk_mapped_flags_update_by_key &rArr; sdk_mapped_flags_bulk_update_by_key
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure
</UL>

<P><STRONG><a name="[514]"></a>link_secure</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, .\build\security_manager.o(i.link_secure))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = link_secure &rArr; smd_link_secure &rArr; link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flags_set_from_err_code
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events_send_from_err_code
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_link_secure
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_evt_handler
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
</UL>

<P><STRONG><a name="[51e]"></a>link_secure_pending_process</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, .\build\security_manager.o(i.link_secure_pending_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = link_secure_pending_process &rArr; link_secure &rArr; smd_link_secure &rArr; link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_collection
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_conn_handles
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_any_set
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_ble_evt_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[5a7]"></a>params_reply_pending_process</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, .\build\security_manager.o(i.params_reply_pending_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = params_reply_pending_process &rArr; smd_params_reply_perform &rArr; smd_params_reply &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_collection
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_conn_handles
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_mapped_flags_any_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdb_evt_handler
</UL>

<P><STRONG><a name="[a7]"></a>pdb_evt_handler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, .\build\security_manager.o(i.pdb_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = pdb_evt_handler &rArr; link_secure_pending_process &rArr; link_secure &rArr; smd_link_secure &rArr; link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;params_reply_pending_process
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> security_manager.o(i.sm_register)
</UL>
<P><STRONG><a name="[51f]"></a>sdk_mapped_flags_any_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, .\build\security_manager.o(i.sdk_mapped_flags_any_set))
<BR><BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;params_reply_pending_process
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure_pending_process
</UL>

<P><STRONG><a name="[5e6]"></a>send_config_req</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, .\build\security_manager.o(i.send_config_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = send_config_req &rArr; evt_send
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
</UL>

<P><STRONG><a name="[a8]"></a>smd_evt_handler</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, .\build\security_manager.o(i.smd_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = smd_evt_handler &rArr; link_secure &rArr; smd_link_secure &rArr; link_secure_central &rArr; link_secure_central_existing_peer &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply_perform
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_secure
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evt_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> security_manager.o(i.sm_register)
</UL>
<P><STRONG><a name="[5a8]"></a>smd_params_reply_perform</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, .\build\security_manager.o(i.smd_params_reply_perform))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = smd_params_reply_perform &rArr; smd_params_reply &rArr; sec_proc_start &rArr; im_peer_free &rArr; pdb_peer_free &rArr; pds_peer_id_free &rArr; peer_data_clear &rArr; fds_file_delete &rArr; queue_start &rArr; queue_process &rArr;  queue_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_set
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_user_flag_get
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_state_role
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;im_peer_id_get_by_conn_handle
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_config_req
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flags_set_from_err_code
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events_send_from_err_code
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_params_reply
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smd_evt_handler
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;params_reply_pending_process
</UL>

<P><STRONG><a name="[258]"></a>end_asynch_rx</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\serial_api.o(i.end_asynch_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = end_asynch_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[25a]"></a>end_asynch_tx</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, .\build\serial_api.o(i.end_asynch_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = end_asynch_tx
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[4f6]"></a>internal_set_hwfc</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, .\build\serial_api.o(i.internal_set_hwfc))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = internal_set_hwfc &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_hwfc_pins_set
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_configure
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[538]"></a>nrf_gpio_cfg</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, .\build\serial_api.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>

<P><STRONG><a name="[4f9]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, .\build\serial_api.o(i.nrf_gpio_cfg_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_set_hwfc
</UL>

<P><STRONG><a name="[4f8]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, .\build\serial_api.o(i.nrf_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_set_hwfc
</UL>

<P><STRONG><a name="[4f7]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_set_hwfc
</UL>

<P><STRONG><a name="[5ec]"></a>nrf_uart_baudrate_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_baudrate_set))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[4fa]"></a>nrf_uart_configure</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_configure))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_set_hwfc
</UL>

<P><STRONG><a name="[5e8]"></a>nrf_uart_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_disable))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[5e9]"></a>nrf_uart_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[256]"></a>nrf_uart_event_check</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_writable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[257]"></a>nrf_uart_event_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_event_clear))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_putc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[4fb]"></a>nrf_uart_hwfc_pins_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_hwfc_pins_set))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_set_hwfc
</UL>

<P><STRONG><a name="[467]"></a>nrf_uart_int_disable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_asynch_tx
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_asynch_rx
</UL>

<P><STRONG><a name="[5eb]"></a>nrf_uart_int_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[255]"></a>nrf_uart_int_enable_check</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_int_enable_check))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[5ea]"></a>nrf_uart_task_trigger</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_task_trigger))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[259]"></a>nrf_uart_txd_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_txd_set))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_putc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[53a]"></a>nrf_uart_txrx_pins_disconnect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, .\build\serial_api.o(i.nrf_uart_txrx_pins_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_uart_txrx_pins_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txrx_pins_set
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
</UL>

<P><STRONG><a name="[53b]"></a>nrf_uart_txrx_pins_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, .\build\serial_api.o(i.nrf_uart_txrx_pins_set))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_init
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_txrx_pins_disconnect
</UL>

<P><STRONG><a name="[6d]"></a>&lang;Func4&rang;</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\serialbase.o(i.<Func4>))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = &lang;Func4&rang; &rArr; mbed::Callback&lang;void()&rang;::Callback(void(*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Callback&lang;void()&rang;::Callback(void(*)())
</UL>
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i)
</UL>
<P><STRONG><a name="[6e]"></a>mbed::donothing()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\serialbase.o(i._ZN4mbed9donothingEv))
<BR>[Address Reference Count : 1]<UL><LI> serialbase.o(i._ZN4mbed10SerialBaseC1E7PinNameS1_i)
</UL>
<P><STRONG><a name="[5f2]"></a>sd_nvic_EnableIRQ</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, .\build\softdevice_handler.o(i.sd_nvic_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sd_nvic_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[24a]"></a>errata_16</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_16))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[24b]"></a>errata_31</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_31))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[24c]"></a>errata_32</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_32))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[24d]"></a>errata_36</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_36))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[24e]"></a>errata_37</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_37))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[24f]"></a>errata_57</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_57))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[250]"></a>errata_66</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, .\build\system_nrf52.o(i.errata_66))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[456]"></a>nrf_rtc_event_clear</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.nrf_rtc_event_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_rtc_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_clear_interrupt
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ovf_event_check
</UL>

<P><STRONG><a name="[458]"></a>nrf_rtc_event_disable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\us_ticker.o(i.nrf_rtc_event_disable))
<BR><BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_ticker_disable_interrupt
</UL>

<P><STRONG><a name="[457]"></a>nrf_rtc_event_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\us_ticker.o(i.nrf_rtc_event_enable))
<BR><BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_set_interrupt
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_init
</UL>

<P><STRONG><a name="[245]"></a>nrf_rtc_event_pending</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, .\build\us_ticker.o(i.nrf_rtc_event_pending))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ovf_event_check
</UL>

<P><STRONG><a name="[244]"></a>rtc_ovf_event_check</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, .\build\us_ticker.o(i.rtc_ovf_event_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_ovf_event_check &rArr; nrf_rtc_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_pending
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_rtc_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_rtc_32bit_ticks_get
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[15c]"></a>__sti___27_ConfigParamsPersistence_cpp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\configparamspersistence.o(i.__sti___27_ConfigParamsPersistence_cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 964 + Unknown Stack Size
<LI>Call Chain = __sti___27_ConfigParamsPersistence_cpp &rArr; std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> configparamspersistence.o(.init_array)
</UL>
<P><STRONG><a name="[15d]"></a>__sti___20_EddystoneService_cpp_a18ae07d</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\eddystoneservice.o(i.__sti___20_EddystoneService_cpp_a18ae07d))
<BR><BR>[Stack]<UL><LI>Max Depth = 964 + Unknown Stack Size
<LI>Call Chain = __sti___20_EddystoneService_cpp_a18ae07d &rArr; std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eddystoneservice.o(.init_array)
</UL>
<P><STRONG><a name="[15e]"></a>__sti___11_iBeacon_cpp_99d959d6</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\ibeacon.o(i.__sti___11_iBeacon_cpp_99d959d6))
<BR><BR>[Stack]<UL><LI>Max Depth = 964 + Unknown Stack Size
<LI>Call Chain = __sti___11_iBeacon_cpp_99d959d6 &rArr; std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ibeacon.o(.init_array)
</UL>
<P><STRONG><a name="[26b]"></a>onBleInitError(BLE::InitializationCompleteCallbackContext*)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\main.o(i._Z14onBleInitErrorPN3BLE37InitializationCompleteCallbackContextE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[8a]"></a>bleInitComplete(BLE::InitializationCompleteCallbackContext*)</STRONG> (Thumb, 250 bytes, Stack size 168 bytes, .\build\main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = bleInitComplete(BLE::InitializationCompleteCallbackContext*) &rArr; EddystoneService::startConfigService() &rArr; EddystoneService::setupConfigService() &rArr; EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initializeEddystoneToDefaults(BLE&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onBleInitError(BLE::InitializationCompleteCallbackContext*)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, EddystoneService::EddystoneParams_t&, const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigService()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallChainOfFunctionPointersWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;::add(const FunctionPointerWithContext&lang;const Gap::DisconnectionCallbackParams_t*&rang;&)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator int()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator =(int)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadEddystoneServiceConfigParams(EddystoneService::EddystoneParams_t*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[59]"></a>disconnectionCallback(const Gap::DisconnectionCallbackParams_t*)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, .\build\main.o(i._Z21disconnectionCallbackPKN3Gap29DisconnectionCallbackParams_tE))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = disconnectionCallback(const Gap::DisconnectionCallbackParams_t*) &rArr; BLE::Instance(unsigned) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE)
</UL>
<P><STRONG><a name="[273]"></a>initializeEddystoneToDefaults(BLE&)</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, .\build\main.o(i._Z29initializeEddystoneToDefaultsR3BLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = initializeEddystoneToDefaults(BLE&) &rArr; AuthentificationService::AuthentificationService(BLE&) &rArr; FunctionPointerWithContext&lang;const GattWriteCallbackParams*&rang;* CallChainOfFunctionPointersWithContext&lang;const GattWriteCallbackParams*&rang;::add&lang;AuthentificationService&rang;(T1*, void(T1::*)(const GattWriteCallbackParams*)) &rArr; operator new(unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::EddystoneService(BLE&, const signed char(&)[4], const signed char(&)[4], events::EventQueue&, unsigned)
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setiBeacon(unsigned char*, unsigned short, unsigned short, unsigned char, unsigned short)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setURLData(const char*)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setUIDData(const unsigned char(&)[10], const unsigned char(&)[6])
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::setTLMData(unsigned char)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bleInitComplete(BLE::InitializationCompleteCallbackContext*)
</UL>

<P><STRONG><a name="[87]"></a>blinky()</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, .\build\main.o(i._Z6blinkyv))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = blinky() &rArr; equeue_post &rArr; equeue_tick &rArr; equeue_tick_init() &rArr; mbed::Ticker::attach_us(mbed::Callback&lang;void()&rang;, unsigned long long) &rArr; mbed::Ticker::setup(unsigned long long) &rArr; mbed::TimerEvent::insert_absolute(unsigned long long) &rArr; ticker_insert_event_us &rArr; schedule_interrupt &rArr; update_present_time &rArr; convert_timestamp
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_post
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_event_dtor
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;equeue_alloc
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator int()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator =(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[5b]"></a>timeout()</STRONG> (Thumb, 198 bytes, Stack size 136 bytes, .\build\main.o(i._Z7timeoutv))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = timeout() &rArr; EddystoneService::startConfigServiceafterdeconnexion() &rArr; EddystoneService::setupConfigService() &rArr; EddystoneService::setupEddystoneConfigAdvertisements() &rArr; EddystoneService::setupEddystoneConfigScanResponse() &rArr; BLE::gap() &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::Instance(unsigned)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE::gap()
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startConfigServiceafterdeconnexion()
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::startBeaconService()
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EddystoneService::getEddystoneParams(EddystoneService::EddystoneParams_t&)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int events::EventQueue::call_in&lang;void(*)()&rang;(int, T1)
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator int()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::operator =(int)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuthentificationService::AuthentificationService(BLE&)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryService::BatteryService(BLE&, unsigned char)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveEddystoneServiceConfigParams(const EddystoneService::EddystoneParams_t*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> main.o(i._Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE)
<LI> main.o(i._Z7timeoutv)
</UL>
<P><STRONG><a name="[15f]"></a>__sti___8_main_cpp_pc</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, .\build\main.o(i.__sti___8_main_cpp_pc))
<BR><BR>[Stack]<UL><LI>Max Depth = 972 + Unknown Stack Size
<LI>Call Chain = __sti___8_main_cpp_pc &rArr; std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events::EventQueue::EventQueue(unsigned, unsigned char*)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::Serial::Serial(PinName, PinName, const char*, int)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbed::DigitalOut::DigitalOut(PinName, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL>
<P><STRONG><a name="[1d]"></a>fs_evt_handler(const fs_evt_t*, fs_ret_t)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, .\build\nrfconfigparamspersistence.o(i._Z14fs_evt_handlerPK8fs_evt_t8fs_ret_t))
<BR>[Address Reference Count : 1]<UL><LI> nrfconfigparamspersistence.o(fs_data)
</UL>
<P><STRONG><a name="[160]"></a>__sti___30_nrfConfigParamsPersistence_cpp_119b80b5</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, .\build\nrfconfigparamspersistence.o(i.__sti___30_nrfConfigParamsPersistence_cpp_119b80b5))
<BR><BR>[Stack]<UL><LI>Max Depth = 964 + Unknown Stack Size
<LI>Call Chain = __sti___30_nrfConfigParamsPersistence_cpp_119b80b5 &rArr; std::ios_base::Init::Init() &rArr; std::basic_ostream&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::basic_ostream(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::basic_ios&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;::init(std::basic_streambuf&lang;wchar_t, std::char_traits&lang;wchar_t&rang;&rang;*) &rArr; std::locale::_C_use_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ios_base::Init::Init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrfconfigparamspersistence.o(.init_array)
</UL>
<P><STRONG><a name="[1a5]"></a>Heap1_SizeAdjust</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(h1_alloc_mt.o)(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[1c3]"></a>_freopen_locked</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(fopen_locked.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = _freopen_locked &rArr; _fclose_internal &rArr; _fflush &rArr; _writebuf &rArr; _sys_write &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_open
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fclose_internal
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fseek
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fopen
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freopen
</UL>

<P><STRONG><a name="[351]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list) &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[352]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)</STRONG> (Thumb, 296 bytes, Stack size 88 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwstdexcept.o)(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 732 + Unknown Stack Size
<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __set_errno &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[54]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_char_common.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_char.o)(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[161]"></a>__sti___8_char_cpp_a3dc957a</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(char.o)(i.__sti___8_char_cpp_a3dc957a))
<BR>[Address Reference Count : 1]<UL><LI> char.o(.init_array)
</UL>
<P><STRONG><a name="[6c]"></a>&lang;Func5&rang;</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.<Func5>))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = &lang;Func5&rang; &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
</UL>
<P><STRONG><a name="[162]"></a>__sti___10_locale_cpp_ff99fc7b</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(locale.o)(i.__sti___10_locale_cpp_ff99fc7b))
<BR>[Address Reference Count : 1]<UL><LI> locale.o(.init_array)
</UL>
<P><STRONG><a name="[1fd]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(_printf_fp_dec.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[209]"></a>_fp_value</STRONG> (Thumb, 588 bytes, Stack size 96 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(scanf_fp.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = _fp_value &rArr; __aeabi_errno_addr &rArr; __user_perthread_libspace &rArr; osRtxErrorNotify &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[163]"></a>__sti___10_rwcats_cpp_64e8068e</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpp_ws.l(rwcats.o)(i.__sti___10_rwcats_cpp_64e8068e))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = __sti___10_rwcats_cpp_64e8068e &rArr; operator new[] (unsigned) &rArr; error &rArr; exit &rArr; mbed_die &rArr; gpio_init_out &rArr; gpio_init_out_ex &rArr; _gpio_init_out &rArr; gpio_dir &rArr; gpio_apply_config &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(.init_array)
</UL>
<P><STRONG><a name="[58]"></a>[local to arm_exceptions_c]::__default_terminate_handler()</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\cpplib\cpprt_w.l(arm_exceptions_globs.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = [local to arm_exceptions_c]::__default_terminate_handler() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[220]"></a>_locale_name</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_byname
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_locale_mixed
</UL>

<P><STRONG><a name="[222]"></a>_set_locale_mixed</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[221]"></a>_set_locale_byname</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, C:\Keil_v5\ARM\ARMCC\Bin\..\lib\armlib\c_w.l(locale_r.o)(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _set_locale_byname &rArr; _locale_name &rArr; __rt_locale
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_locale_name
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_setlocale_r
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
